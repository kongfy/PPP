=============================================
#                  args                     #
=============================================
{'B': 500,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 89, 218),
 (1, 68, 278),
 (2, 140, 167),
 (3, 201, 58),
 (4, 248, 147),
 (5, 254, 56),
 (6, 28, 137),
 (7, 104, 76)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 198, 244),
 (1, 268, 239),
 (2, 221, 169),
 (3, 260, 143),
 (4, 247, 294),
 (5, 265, 238),
 (6, 124, 119),
 (7, 68, 22),
 (8, 173, 23),
 (9, 277, 15),
 (10, 122, 106),
 (11, 131, 270),
 (12, 209, 250),
 (13, 142, 187),
 (14, 215, 154),
 (15, 68, 298),
 (16, 242, 222),
 (17, 74, 222),
 (18, 293, 163),
 (19, 268, 33),
 (20, 188, 300),
 (21, 275, 45),
 (22, 67, 25),
 (23, 114, 246),
 (24, 204, 129),
 (25, 49, 5),
 (26, 111, 174),
 (27, 35, 164),
 (28, 89, 282),
 (29, 257, 205),
 (30, 124, 134),
 (31, 137, 233),
 (32, 42, 292),
 (33, 291, 129),
 (34, 193, 275),
 (35, 29, 176),
 (36, 22, 33),
 (37, 136, 141),
 (38, 39, 18),
 (39, 173, 54),
 (40, 91, 67),
 (41, 13, 210),
 (42, 157, 183),
 (43, 111, 13),
 (44, 92, 143),
 (45, 52, 238),
 (46, 224, 71),
 (47, 93, 46),
 (48, 130, 244),
 (49, 17, 195)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.16864175977820572,
 0.1009692986152335,
 0.1513592313287464,
 0.13706985091179358,
 0.13059230215879716,
 0.17319276063170513,
 0.10011484964619052,
 0.15814064573799208,
 0.18869572588709571,
 0.16387323695039968,
 0.17876511335350234,
 0.1106930462339234,
 0.19603080348822735,
 0.17365313592515558,
 0.14657738151653238,
 0.12399827742330302,
 0.1459796941357791,
 0.19997832626030837,
 0.10892285364544298,
 0.1698782911993196,
 0.14621357885034286,
 0.18004314174892425,
 0.15995539927942715,
 0.19756549932821704,
 0.15282674123107001,
 0.14019041199503907,
 0.1743133316126155,
 0.13727040280085639,
 0.11665796574201791,
 0.13102109313502719,
 0.18340997377139356,
 0.14836727262945831,
 0.13968458758996943,
 0.12973246447043929,
 0.12080801101188078,
 0.16731349309524707,
 0.13081852741563255,
 0.18354360080175613,
 0.1769285255154861,
 0.19746080414832706,
 0.13108663917756963,
 0.1593739821221048,
 0.16151125348275139,
 0.18700615242323343,
 0.16015657914428444,
 0.19303303606009742,
 0.12983968263247031,
 0.1874036069958421,
 0.16675517095834602,
 0.15654629808534204]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.60991494953461478, [(2, 140, 167), (0, 89, 218)], [4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.60991494953461478, [(2, 140, 167), (0, 89, 218)], [4, 4])
=============================================
#                solution A                 #
=============================================
(0.60991494953461478, [(2, 140, 167), (0, 89, 218)], [4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.71036405587872697,
 {(0, 89, 218): 4, (2, 140, 167): 4},
 [(2, 140, 167), (0, 89, 218), (2, 140, 167)],
 [4, 4, 2])
=============================================
#           result of greedy part           #
=============================================
(0.71036405587872697,
 {(0, 89, 218): 4, (2, 140, 167): 4},
 [(2,=============================================
#                  args                     #
=============================================
{'B': 500,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 190, 132),
 (1, 14, 184),
 (2, 176, 228),
 (3, 231, 238),
 (4, 36, 274),
 (5, 123, 192),
 (6, 127, 124),
 (7, 207, 46)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 150, 9),
 (1, 281, 130),
 (2, 296, 293),
 (3, 181, 183),
 (4, 159, 204),
 (5, 10, 78),
 (6, 78, 273),
 (7, 272, 248),
 (8, 96, 201),
 (9, 2, 148),
 (10, 259, 64),
 (11, 278, 16),
 (12, 239, 30),
 (13, 123, 12),
 (14, 233, 273),
 (15, 271, 266),
 (16, 99, 157),
 (17, 148, 201),
 (18, 281, 91),
 (19, 4, 117),
 (20, 172, 217),
 (21, 229, 135),
 (22, 169, 163),
 (23, 80, 289),
 (24, 229, 18),
 (25, 180, 199),
 (26, 219, 129),
 (27, 156, 266),
 (28, 275, 19),
 (29, 242, 173),
 (30, 120, 91),
 (31, 229, 88),
 (32, 73, 19),
 (33, 237, 167),
 (34, 261, 0),
 (35, 285, 208),
 (36, 98, 230),
 (37, 129, 135),
 (38, 210, 281),
 (39, 242, 294),
 (40, 35, 95),
 (41, 27, 7),
 (42, 63, 194),
 (43, 165, 94),
 (44, 281, 61),
 (45, 60, 66),
 (46, 47, 259),
 (47, 197, 94),
 (48, 275, 279),
 (49, 118, 144)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.19144258415692386,
 0.13515828804557189,
 0.14631254205608249,
 0.1889487338710904,
 0.18881211994793792,
 0.15064991878917952,
 0.12315104131181465,
 0.18986864111306315,
 0.13300853762856221,
 0.14391310539619959,
 0.16201894628987748,
 0.16049465189097242,
 0.10661651904629532,
 0.12264321983456515,
 0.13305856588954912,
 0.10332907848735892,
 0.11712716644564951,
 0.11708401076128304,
 0.19087873913111983,
 0.18670755968072175,
 0.1655342174943259,
 0.18451722137190174,
 0.12891584248213123,
 0.13392407995547212,
 0.19672646884689221,
 0.11087653026637076,
 0.12103299083024385,
 0.14147319780253803,
 0.16277444738634311,
 0.14080624825376234,
 0.16920954300197527,
 0.12956556585194012,
 0.141410164507104,
 0.14722927090794793,
 0.16583535053874043,
 0.11527049064617237,
 0.14321221609681359,
 0.15094883498841613,
 0.11025389302023481,
 0.13515992059878518,
 0.14270590824941468,
 0.1506708369781114,
 0.14265182028575832,
 0.11987018606708094,
 0.14879384033387189,
 0.13295108326850491,
 0.10121303080439986,
 0.14274548659339314,
 0.10728502448972009,
 0.11440855688710974]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.56383811897595804, [(5, 123, 192), (0, 190, 132)], [4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.56383811897595804, [(5, 123, 192), (0, 190, 132)], [4, 4])
=============================================
#                solution A                 #
=============================================
(0.56383811897595804, [(5, 123, 192), (0, 190, 132)], [4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.67378839990847594,
 {(0, 190, 132): 4, (2, 176, 228): 2, (5, 123, 192): 4},
 [(5, 123, 192), (0, 190, 132), (2, 176, 228)],
 [4, 4, 2])
=============================================
#           result of greedy part           #
=============================================
(0.67378839990847594,
 {(0, 190, 132): 4,=============================================
#                  args                     #
=============================================
{'B': 500,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 125, 273),
 (1, 208, 187),
 (2, 76, 50),
 (3, 91, 155),
 (4, 285, 45),
 (5, 234, 222),
 (6, 283, 215),
 (7, 220, 9)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 229, 78),
 (1, 130, 201),
 (2, 281, 294),
 (3, 121, 288),
 (4, 251, 275),
 (5, 127, 223),
 (6, 59, 28),
 (7, 174, 59),
 (8, 73, 250),
 (9, 177, 190),
 (10, 222, 18),
 (11, 0, 8),
 (12, 193, 169),
 (13, 291, 79),
 (14, 33, 217),
 (15, 42, 125),
 (16, 184, 114),
 (17, 13, 235),
 (18, 25, 196),
 (19, 54, 43),
 (20, 237, 289),
 (21, 127, 112),
 (22, 34, 219),
 (23, 278, 297),
 (24, 285, 87),
 (25, 64, 59),
 (26, 233, 88),
 (27, 255, 141),
 (28, 96, 108),
 (29, 284, 143),
 (30, 251, 166),
 (31, 100, 275),
 (32, 185, 148),
 (33, 75, 5),
 (34, 218, 145),
 (35, 184, 176),
 (36, 186, 145),
 (37, 134, 110),
 (38, 132, 209),
 (39, 231, 110),
 (40, 266, 208),
 (41, 42, 87),
 (42, 34, 234),
 (43, 280, 127),
 (44, 209, 254),
 (45, 74, 7),
 (46, 139, 5),
 (47, 157, 187),
 (48, 288, 44),
 (49, 152, 146)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.13570752647428511,
 0.16174706921229598,
 0.14032946855134543,
 0.10382203593573112,
 0.14646347074801988,
 0.11398532338677579,
 0.13070005538502105,
 0.16001867329015027,
 0.13293703555054226,
 0.13117087171536479,
 0.17546732390803843,
 0.15306784377092816,
 0.10183485430477664,
 0.10419949089327324,
 0.10364048465913597,
 0.11101970238910865,
 0.12043747520149681,
 0.18309148761627234,
 0.19061501746714865,
 0.14701981595726993,
 0.17239444625771139,
 0.16372649619035418,
 0.17874735080276916,
 0.10415061580307186,
 0.17454624389504092,
 0.13000889500002047,
 0.14896564799004441,
 0.14103395286343878,
 0.10458564583340516,
 0.13694797097573083,
 0.10195589932595545,
 0.11147364361758727,
 0.18334247660720604,
 0.12814414511873901,
 0.18030373654656554,
 0.13949201243321396,
 0.15957757543015161,
 0.10129389734630778,
 0.10170934522191685,
 0.10292420185192629,
 0.10329524068304853,
 0.13326886053013962,
 0.14737950243249598,
 0.16855729778539058,
 0.13118302934439033,
 0.1550078032082757,
 0.17240506513544201,
 0.12524873202899725,
 0.16317850430036834,
 0.18780302801154114]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.58737676924206805, [(1, 208, 187), (2, 76, 50)], [4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.58737676924206805, [(1, 208, 187), (2, 76, 50)], [4, 4])
=============================================
#                solution A                 #
=============================================
(0.58737676924206805, [(1, 208, 187), (2, 76, 50)], [4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.69151758800584173,
 {(1, 208, 187): 4, (2, 76, 50): 4},
 [(1, 208, 187), (2, 76, 50), (1, 208, 187)],
 [4, 4, 2])
=============================================
#           result of greedy part           #
=============================================
(0.70132840446503752,
 {(1, 208, 187): 4, (2, 76, 50): 3},
 [(1, =============================================
#                  args                     #
=============================================
{'B': 500,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 264, 149),
 (1, 206, 147),
 (2, 292, 293),
 (3, 217, 299),
 (4, 118, 153),
 (5, 299, 29),
 (6, 221, 191),
 (7, 250, 50)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 95, 38),
 (1, 208, 223),
 (2, 263, 105),
 (3, 15, 276),
 (4, 59, 37),
 (5, 140, 175),
 (6, 282, 57),
 (7, 24, 243),
 (8, 202, 152),
 (9, 238, 160),
 (10, 163, 190),
 (11, 22, 138),
 (12, 69, 181),
 (13, 261, 70),
 (14, 127, 95),
 (15, 246, 287),
 (16, 90, 73),
 (17, 91, 138),
 (18, 89, 222),
 (19, 225, 134),
 (20, 115, 203),
 (21, 237, 19),
 (22, 60, 51),
 (23, 43, 168),
 (24, 294, 239),
 (25, 17, 219),
 (26, 87, 280),
 (27, 74, 109),
 (28, 116, 234),
 (29, 123, 41),
 (30, 70, 263),
 (31, 156, 188),
 (32, 138, 65),
 (33, 11, 218),
 (34, 234, 189),
 (35, 179, 103),
 (36, 27, 74),
 (37, 266, 274),
 (38, 299, 216),
 (39, 73, 169),
 (40, 106, 272),
 (41, 213, 181),
 (42, 11, 123),
 (43, 10, 263),
 (44, 230, 247),
 (45, 194, 245),
 (46, 245, 96),
 (47, 85, 235),
 (48, 200, 188),
 (49, 183, 281)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.19442227990487854,
 0.10432449069968491,
 0.15718224368252745,
 0.11879292374788192,
 0.19193973730570413,
 0.13187545198340142,
 0.14719561838631542,
 0.19393004521855384,
 0.14224620802386057,
 0.13928782023953082,
 0.1445306985596809,
 0.17477925073812414,
 0.17207628069998185,
 0.11604533259683023,
 0.18143670660211231,
 0.11918343617909263,
 0.15565570250473879,
 0.1325423888194531,
 0.12166381783031847,
 0.12519342665059108,
 0.18679850516508317,
 0.14415016569007325,
 0.11965769609485652,
 0.1795984307928839,
 0.19978872703334918,
 0.13357770892518567,
 0.18535351088684854,
 0.16045309839562177,
 0.14808753517235462,
 0.11980031040285355,
 0.16296162982772722,
 0.13309987809904864,
 0.18834982704163883,
 0.19548360515974617,
 0.13858050360941787,
 0.1918893729967461,
 0.14427603599936298,
 0.15156885523078539,
 0.16778150295334909,
 0.15929438317491307,
 0.19835784886232155,
 0.12839414057952886,
 0.13167295120923361,
 0.10681232897598077,
 0.19087787523872432,
 0.10246380364990781,
 0.10989071100205659,
 0.17506244334012738,
 0.12960328447169006,
 0.1084597249986621]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.72048482115708179, [(6, 221, 191), (1, 206, 147)], [4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.72048482115708179, [(6, 221, 191), (1, 206, 147)], [4, 4])
=============================================
#                solution A                 #
=============================================
(0.72048482115708179, [(6, 221, 191), (1, 206, 147)], [4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.85641543122208019,
 {(1, 206, 147): 4, (6, 221, 191): 4},
 [(6, 221, 191), (1, 206, 147), (6, 221, 191)],
 [4, 4, 2])
=============================================
#           result of greedy part           #
=============================================
(0.87027276981141433,
 {(1, 206, 147): 3, (6, 221, 19=============================================
#                  args                     #
=============================================
{'B': 500,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 249, 125),
 (1, 47, 28),
 (2, 167, 158),
 (3, 59, 30),
 (4, 289, 28),
 (5, 69, 127),
 (6, 105, 295),
 (7, 113, 129)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 27, 205),
 (1, 98, 283),
 (2, 139, 26),
 (3, 92, 232),
 (4, 228, 114),
 (5, 271, 149),
 (6, 234, 246),
 (7, 58, 284),
 (8, 149, 115),
 (9, 149, 124),
 (10, 239, 128),
 (11, 98, 51),
 (12, 203, 25),
 (13, 79, 169),
 (14, 266, 163),
 (15, 156, 83),
 (16, 113, 157),
 (17, 100, 96),
 (18, 177, 43),
 (19, 252, 232),
 (20, 87, 167),
 (21, 182, 198),
 (22, 97, 255),
 (23, 107, 55),
 (24, 297, 55),
 (25, 167, 128),
 (26, 219, 139),
 (27, 247, 204),
 (28, 184, 137),
 (29, 51, 73),
 (30, 98, 190),
 (31, 40, 186),
 (32, 163, 151),
 (33, 157, 157),
 (34, 103, 266),
 (35, 300, 243),
 (36, 248, 262),
 (37, 224, 107),
 (38, 127, 7),
 (39, 155, 274),
 (40, 53, 277),
 (41, 195, 11),
 (42, 37, 103),
 (43, 104, 128),
 (44, 220, 282),
 (45, 240, 25),
 (46, 91, 112),
 (47, 14, 173),
 (48, 128, 251),
 (49, 80, 290)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.19758186153213481,
 0.16672712776861687,
 0.1308632679945346,
 0.10472825008108991,
 0.14733103519335267,
 0.10393487743384809,
 0.1822545965153112,
 0.14364035671140493,
 0.18446440784136753,
 0.17477147592107306,
 0.10008450576698129,
 0.14466469262240397,
 0.11058556995002258,
 0.1200897459231155,
 0.1379875121095476,
 0.12394100564945086,
 0.15622398534167936,
 0.10512823511562686,
 0.14172805889872969,
 0.11028191698870185,
 0.19589892770080256,
 0.11779613103111825,
 0.1692357193526256,
 0.15902340127884407,
 0.11482923532546303,
 0.16876813995322659,
 0.15065103844376612,
 0.19329024897279989,
 0.16252327768188574,
 0.16508432437584597,
 0.14475469019170123,
 0.10082650260542958,
 0.14517484574851905,
 0.19121626414944956,
 0.15553103347817654,
 0.16162719918896726,
 0.18330576417227229,
 0.12307225544294798,
 0.14073647950844417,
 0.19056955886648769,
 0.16494671974567293,
 0.14195487457592493,
 0.12968449085595757,
 0.11457684956874126,
 0.17879351237361607,
 0.10406257203552205,
 0.12984336756327503,
 0.19492636201804361,
 0.15689628713045767,
 0.1249122130191653]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.84947975912491214, [(2, 167, 158), (7, 113, 129)], [4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.84947975912491214, [(2, 167, 158), (7, 113, 129)], [4, 4])
=============================================
#                solution A                 #
=============================================
(0.84947975912491214, [(2, 167, 158), (7, 113, 129)], [4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0076766153848788,
 {(2, 167, 158): 4, (7, 113, 129): 4},
 [(2, 167, 158), (7, 113, 129), (2, 167, 158)],
 [4, 4, 2])
=============================================
#           result of greedy part           #
=============================================
(1.0076766153848788,
 {(2, 167, 158): 4, (7, 113, 129):=============================================
#                  args                     #
=============================================
{'B': 500,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 296, 278),
 (1, 263, 45),
 (2, 163, 73),
 (3, 108, 228),
 (4, 85, 206),
 (5, 217, 218),
 (6, 102, 202),
 (7, 85, 13)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 231, 261),
 (1, 295, 241),
 (2, 48, 297),
 (3, 148, 165),
 (4, 77, 112),
 (5, 283, 167),
 (6, 57, 195),
 (7, 79, 223),
 (8, 196, 207),
 (9, 171, 258),
 (10, 117, 199),
 (11, 40, 275),
 (12, 124, 290),
 (13, 23, 248),
 (14, 204, 124),
 (15, 269, 118),
 (16, 3, 188),
 (17, 15, 212),
 (18, 280, 55),
 (19, 99, 269),
 (20, 13, 265),
 (21, 60, 259),
 (22, 91, 248),
 (23, 178, 29),
 (24, 30, 263),
 (25, 186, 188),
 (26, 261, 291),
 (27, 211, 122),
 (28, 277, 46),
 (29, 76, 29),
 (30, 234, 67),
 (31, 181, 62),
 (32, 247, 99),
 (33, 91, 230),
 (34, 181, 149),
 (35, 229, 91),
 (36, 150, 262),
 (37, 75, 262),
 (38, 42, 215),
 (39, 285, 40),
 (40, 282, 295),
 (41, 113, 183),
 (42, 109, 258),
 (43, 16, 53),
 (44, 1, 61),
 (45, 206, 206),
 (46, 119, 56),
 (47, 169, 145),
 (48, 220, 4),
 (49, 248, 55)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.1558344587723553,
 0.13286188616534822,
 0.11665967642283975,
 0.14389962235199849,
 0.12274326870550875,
 0.15901932507707234,
 0.14153657848953793,
 0.13131074547369809,
 0.18042203605575297,
 0.15457665576854041,
 0.11547486018510966,
 0.13375295001697105,
 0.10451902779209339,
 0.13921969977243517,
 0.18982393721429353,
 0.11506914398526945,
 0.15557754940904925,
 0.11704144008367469,
 0.1980243192804817,
 0.10253688410808494,
 0.13368849040228273,
 0.16050727922910432,
 0.11642758663634674,
 0.14929245749911574,
 0.1034070324861599,
 0.11015843584147769,
 0.19507356620858826,
 0.14062972885614652,
 0.1743845232582461,
 0.10252223948506309,
 0.16644097620020948,
 0.10311630355249959,
 0.15615044821949936,
 0.14883483360382899,
 0.12479130452496941,
 0.15102606549445208,
 0.10905394786589225,
 0.14556021204688524,
 0.13577935506485692,
 0.11595529725164638,
 0.17657845154748689,
 0.18373646958841594,
 0.17086838647617786,
 0.18693377423193169,
 0.18759153561851719,
 0.10662040940046094,
 0.13551703079808791,
 0.17440186077666014,
 0.13074807088689441,
 0.14013276178661188]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.75122206545122094, [(3, 108, 228), (4, 85, 206)], [4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.75122206545122094, [(3, 108, 228), (4, 85, 206)], [4, 4])
=============================================
#                solution A                 #
=============================================
(0.75122206545122094, [(3, 108, 228), (4, 85, 206)], [4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.88806816913631059,
 {(3, 108, 228): 4, (4, 85, 206): 4},
 [(3, 108, 228), (4, 85, 206), (3, 108, 228)],
 [4, 4, 2])
=============================================
#           result of greedy part           #
=============================================
(0.88806816913631059,
 {(3, 108, 228): 4, (4, 85, 206): 4},
 [(=============================================
#                  args                     #
=============================================
{'B': 500,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 254, 249),
 (1, 277, 36),
 (2, 105, 81),
 (3, 95, 75),
 (4, 195, 141),
 (5, 7, 159),
 (6, 62, 36),
 (7, 256, 179)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 161, 19),
 (1, 238, 253),
 (2, 231, 155),
 (3, 294, 11),
 (4, 153, 148),
 (5, 260, 13),
 (6, 50, 20),
 (7, 134, 159),
 (8, 248, 209),
 (9, 288, 240),
 (10, 73, 137),
 (11, 264, 93),
 (12, 164, 74),
 (13, 20, 27),
 (14, 205, 134),
 (15, 203, 147),
 (16, 239, 92),
 (17, 117, 76),
 (18, 139, 172),
 (19, 88, 51),
 (20, 252, 114),
 (21, 273, 144),
 (22, 63, 151),
 (23, 237, 164),
 (24, 123, 242),
 (25, 49, 114),
 (26, 69, 262),
 (27, 65, 100),
 (28, 269, 96),
 (29, 47, 134),
 (30, 73, 89),
 (31, 1, 289),
 (32, 11, 99),
 (33, 49, 173),
 (34, 192, 62),
 (35, 201, 257),
 (36, 23, 6),
 (37, 196, 128),
 (38, 150, 212),
 (39, 69, 151),
 (40, 16, 76),
 (41, 186, 277),
 (42, 160, 31),
 (43, 40, 105),
 (44, 117, 90),
 (45, 224, 251),
 (46, 103, 43),
 (47, 46, 36),
 (48, 298, 220),
 (49, 226, 8)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.1736277636797865,
 0.10569632526782176,
 0.15323725253037429,
 0.13036771196456351,
 0.11171792335689101,
 0.11914785461810817,
 0.16294517784704349,
 0.1719064233715375,
 0.176772513989224,
 0.14660586260759398,
 0.14513539899871725,
 0.18399455926858241,
 0.17887153728675623,
 0.1558079288695717,
 0.1680900277627865,
 0.1747717975681945,
 0.18279956608413836,
 0.161648941641303,
 0.17494034018446125,
 0.16444525104975205,
 0.11014384924807659,
 0.13225450842236378,
 0.15589981708161216,
 0.16540889805955356,
 0.11043048170050246,
 0.11740119441914104,
 0.18773332170504328,
 0.18128837000497941,
 0.18260460083717708,
 0.18453513632112228,
 0.11248385698869542,
 0.11931280268215393,
 0.12892836684804526,
 0.18943680778843505,
 0.1221248316702386,
 0.11748240913690945,
 0.1965456528458927,
 0.14785422899709685,
 0.11560054705315233,
 0.16759369127398863,
 0.10121153605262539,
 0.18169503470811729,
 0.11728024989609505,
 0.19437749199445933,
 0.18539824842716601,
 0.11598368038981786,
 0.16797139781171572,
 0.15441230012122334,
 0.11357181696118569,
 0.13175466544200798]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.76458507776853335, [(4, 195, 141), (2, 105, 81)], [4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.76458507776853335, [(4, 195, 141), (2, 105, 81)], [4, 4])
=============================================
#                solution A                 #
=============================================
(0.76458507776853335, [(4, 195, 141), (2, 105, 81)], [4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.91135266054222097,
 {(2, 105, 81): 4, (4, 195, 141): 4},
 [(4, 195, 141), (2, 105, 81), (4, 195, 141)],
 [4, 4, 2])
=============================================
#           result of greedy part           #
=============================================
(0.91135266054222097,
 {(2, 105, 81): 4, (4, 195, 141): 4},
 [(4, 195, 141), (2=============================================
#                  args                     #
=============================================
{'B': 500,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 131, 17),
 (1, 141, 247),
 (2, 296, 53),
 (3, 38, 53),
 (4, 195, 1),
 (5, 21, 89),
 (6, 211, 254),
 (7, 124, 84)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 136, 217),
 (1, 120, 61),
 (2, 261, 180),
 (3, 94, 130),
 (4, 201, 137),
 (5, 186, 59),
 (6, 125, 146),
 (7, 288, 156),
 (8, 87, 250),
 (9, 87, 107),
 (10, 125, 245),
 (11, 300, 284),
 (12, 269, 45),
 (13, 28, 41),
 (14, 25, 237),
 (15, 47, 273),
 (16, 212, 148),
 (17, 46, 253),
 (18, 101, 46),
 (19, 4, 77),
 (20, 262, 244),
 (21, 156, 169),
 (22, 98, 158),
 (23, 278, 193),
 (24, 119, 98),
 (25, 193, 38),
 (26, 261, 253),
 (27, 298, 70),
 (28, 129, 201),
 (29, 126, 133),
 (30, 90, 177),
 (31, 5, 160),
 (32, 37, 100),
 (33, 140, 118),
 (34, 88, 177),
 (35, 187, 267),
 (36, 220, 294),
 (37, 78, 259),
 (38, 76, 126),
 (39, 261, 297),
 (40, 182, 78),
 (41, 293, 217),
 (42, 231, 149),
 (43, 300, 186),
 (44, 169, 44),
 (45, 15, 52),
 (46, 218, 272),
 (47, 251, 23),
 (48, 269, 166),
 (49, 95, 230)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.14856145569269719,
 0.12255746963869363,
 0.17176924228546298,
 0.15292278697830808,
 0.18668619640402551,
 0.14373894990925595,
 0.12604170536577308,
 0.17403773371106651,
 0.10604948161844277,
 0.1028947029646546,
 0.17058378732131074,
 0.15691530449044458,
 0.10946033485205958,
 0.19097996653698879,
 0.1195112641185461,
 0.19528276029390113,
 0.10255729923591544,
 0.13704591308416314,
 0.11525981851829492,
 0.19082417889820608,
 0.19682619218575093,
 0.16860175245075898,
 0.15615590786934311,
 0.11621427067163503,
 0.11139910197106463,
 0.14619105846203415,
 0.11343824932247891,
 0.15242345226950016,
 0.15082839325732156,
 0.1098221228497495,
 0.15840658849519226,
 0.16584515593564836,
 0.14089757459865976,
 0.13874620036941393,
 0.10252942190760929,
 0.17186294712558964,
 0.18051508182674317,
 0.10009683681938153,
 0.1814858503225433,
 0.1707295581808457,
 0.12493111848900013,
 0.13850633976579618,
 0.19997685225050521,
 0.13684764469058266,
 0.10869691602439442,
 0.11165717311138459,
 0.13148007192392652,
 0.16975977832916497,
 0.16788232509062195,
 0.18568310211127112]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 3, 4, 4, 4, 3, 4]
=============================================
#           result of greedy part           #
=============================================
(0.52855621958955279, [(7, 124, 84), (1, 141, 247)], [4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.52855621958955279, [(7, 124, 84), (1, 141, 247)], [4, 4])
=============================================
#                solution A                 #
=============================================
(0.52855621958955279, [(7, 124, 84), (1, 141, 247)], [4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.68289669437562195,
 {(1, 141, 247): 3, (7, 124, 84): 4},
 [(7, 124, 84), (7, 124, 84), (1, 141, 247)],
 [4, 3, 3])
=============================================
#           result of greedy part           #
=============================================
(0.6698506600048616,
 {(7, 124, 84): 4},
 [(7, 124, 84), (7, 124,=============================================
#                  args                     #
=============================================
{'B': 500,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 274, 237),
 (1, 298, 259),
 (2, 29, 16),
 (3, 162, 162),
 (4, 3, 55),
 (5, 136, 47),
 (6, 67, 252),
 (7, 263, 182)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 218, 60),
 (1, 215, 193),
 (2, 288, 19),
 (3, 191, 268),
 (4, 249, 177),
 (5, 106, 59),
 (6, 129, 244),
 (7, 200, 181),
 (8, 35, 201),
 (9, 36, 11),
 (10, 251, 255),
 (11, 159, 237),
 (12, 52, 259),
 (13, 120, 266),
 (14, 241, 115),
 (15, 124, 286),
 (16, 163, 134),
 (17, 300, 286),
 (18, 80, 122),
 (19, 83, 179),
 (20, 262, 215),
 (21, 0, 51),
 (22, 226, 281),
 (23, 215, 238),
 (24, 75, 259),
 (25, 198, 209),
 (26, 187, 236),
 (27, 181, 245),
 (28, 262, 101),
 (29, 129, 269),
 (30, 239, 286),
 (31, 243, 44),
 (32, 18, 75),
 (33, 158, 205),
 (34, 93, 73),
 (35, 108, 261),
 (36, 190, 18),
 (37, 117, 13),
 (38, 78, 53),
 (39, 195, 232),
 (40, 125, 21),
 (41, 289, 0),
 (42, 139, 185),
 (43, 92, 169),
 (44, 211, 234),
 (45, 93, 153),
 (46, 100, 81),
 (47, 101, 237),
 (48, 133, 256),
 (49, 10, 38)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.16743137935537497,
 0.14152024930055754,
 0.17816031654635786,
 0.1547481286742598,
 0.1761970633876602,
 0.1853240238698497,
 0.12855908309748143,
 0.17457973654725339,
 0.17753276766389298,
 0.19905753324763353,
 0.10068570741096632,
 0.15986130736478565,
 0.11634289278695897,
 0.14023295397729871,
 0.12687060874042269,
 0.14471584981913349,
 0.14597155736958461,
 0.15801981452574998,
 0.16917222732377879,
 0.14679101504511433,
 0.12634479229477044,
 0.13438365171416511,
 0.12457164283929424,
 0.14237642993849303,
 0.13756876725686984,
 0.12482479656264597,
 0.18119966299414123,
 0.10555783624383031,
 0.13669211903583142,
 0.12718313892753394,
 0.14227950723909993,
 0.16558165663715244,
 0.13203869196730231,
 0.10573569971110676,
 0.10411439995838212,
 0.16223486891815203,
 0.16531660876647497,
 0.10531488343350708,
 0.17190913085550857,
 0.10051217068930973,
 0.12064464729826486,
 0.10157619033558561,
 0.19112447515467523,
 0.16285842593452962,
 0.15030174343791908,
 0.14995908502916286,
 0.16621231854778085,
 0.13769311398951095,
 0.1127994142265937,
 0.16552590253309463]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.52266575433954132, [(6, 67, 252), (4, 3, 55)], [4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.52266575433954132, [(6, 67, 252), (4, 3, 55)], [4, 4])
=============================================
#                solution A                 #
=============================================
(0.52266575433954132, [(6, 67, 252), (4, 3, 55)], [4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.62340541017026307,
 {(4, 3, 55): 4, (6, 67, 252): 4},
 [(6, 67, 252), (4, 3, 55), (4, 3, 55)],
 [4, 4, 2])
=============================================
#           result of greedy part           #
=============================================
(0.66641038930252594,
 {(4, 3, 55): 3, (6, 67, 252): 4},
 [(6, 67, 252), (6, =============================================
#                  args                     #
=============================================
{'B': 500,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 292, 169),
 (1, 222, 260),
 (2, 56, 9),
 (3, 229, 159),
 (4, 137, 126),
 (5, 128, 152),
 (6, 40, 78),
 (7, 193, 35)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 211, 28),
 (1, 164, 14),
 (2, 4, 199),
 (3, 54, 128),
 (4, 195, 241),
 (5, 283, 253),
 (6, 190, 158),
 (7, 209, 38),
 (8, 274, 208),
 (9, 55, 95),
 (10, 29, 20),
 (11, 170, 125),
 (12, 17, 242),
 (13, 36, 164),
 (14, 199, 165),
 (15, 59, 181),
 (16, 181, 50),
 (17, 267, 42),
 (18, 269, 225),
 (19, 163, 95),
 (20, 237, 42),
 (21, 237, 14),
 (22, 78, 169),
 (23, 220, 21),
 (24, 31, 46),
 (25, 224, 196),
 (26, 167, 30),
 (27, 10, 177),
 (28, 31, 239),
 (29, 172, 24),
 (30, 161, 226),
 (31, 134, 73),
 (32, 91, 45),
 (33, 58, 15),
 (34, 246, 15),
 (35, 34, 242),
 (36, 100, 196),
 (37, 166, 116),
 (38, 24, 30),
 (39, 134, 200),
 (40, 14, 183),
 (41, 280, 268),
 (42, 179, 268),
 (43, 8, 225),
 (44, 246, 250),
 (45, 18, 245),
 (46, 34, 174),
 (47, 166, 239),
 (48, 55, 279),
 (49, 251, 86)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.16203375020978492,
 0.11159062706949296,
 0.18008254693247899,
 0.17137888194629797,
 0.14441261738447939,
 0.19895032197711449,
 0.18003474959989602,
 0.18244760823743497,
 0.19706366415343693,
 0.14430782953029378,
 0.15142276582363531,
 0.12283050016308912,
 0.17395754822075027,
 0.18982964424468513,
 0.12608831288643121,
 0.16613403017865741,
 0.14359250972421425,
 0.18124685092325088,
 0.13350447055230211,
 0.15308688725579853,
 0.1112104083697157,
 0.15051135757455303,
 0.16619994752937384,
 0.1338182252944139,
 0.15005420716658466,
 0.15592990361854575,
 0.10446217018974041,
 0.18907783266408185,
 0.15384358764748626,
 0.14526518961256457,
 0.19387681324428283,
 0.10484535326091415,
 0.10248821211861824,
 0.11105636516287605,
 0.18255584214236426,
 0.12465041507511004,
 0.17083849856427374,
 0.19671832134304668,
 0.13627750757994014,
 0.10303088676913437,
 0.16509525042027501,
 0.17303939366451482,
 0.16105377158040915,
 0.10800401809086053,
 0.14741356271318024,
 0.18070875525004088,
 0.19520791338599505,
 0.1728193863466661,
 0.17805838445990085,
 0.12959775881907992]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 3, 4]
=============================================
#           result of greedy part           #
=============================================
(0.62824635499569748, [(7, 193, 35), (2, 56, 9)], [4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.62824635499569748, [(7, 193, 35), (2, 56, 9)], [4, 4])
=============================================
#                solution A                 #
=============================================
(0.62824635499569748, [(7, 193, 35), (2, 56, 9)], [4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.95732998510015377,
 {(7, 193, 35): 4},
 [(7, 193, 35), (7, 193, 35), (7, 193, 35), (7, 193, 35)],
 [4, 3, 2, 1])
=============================================
#           result of greedy part           #
=============================================
(0.95732998510015377,
 {(7, 193, 35): 4},
 [(7, 193, 35), (7, 193, 35), (7, 193,  84), (7, 124, 84), (7, 124, 84)],
 [4, 3, 2, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 500.000000
=============================================
#                solution B                 #
=============================================
(0.58628536829211542, [(1, 141, 247), (7, 124, 84), (3, 38, 53)], [3, 4, 3])
=============================================
#               random h list               #
=============================================
[4, 2, 0, 0, 0, 1, 0, 3]
=============================================
#               solution Ran                #
=============================================
(0.43398454768717515,
 [(0, 131, 17), (1, 141, 247), (5, 21, 89), (7, 124, 84)],
 [4, 2, 1, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.60534189644909997, [(1, 141, 247), (3, 38, 53), (7, 124, 84)], [4, 2, 4])
 (2, 176, 228): 2, (5, 123, 192): 4},
 [(5, 123, 192), (0, 190, 132), (2, 176, 228)],
 [4, 4, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 500.000000
=============================================
#                solution B                 #
=============================================
(0.67378839990847594, [(0, 190, 132), (2, 176, 228), (5, 123, 192)], [4, 2, 4])
=============================================
#               random h list               #
=============================================
[3, 0, 0, 0, 4, 0, 1, 2]
=============================================
#               solution Ran                #
=============================================
(0.3700687491771647,
 [(0, 190, 132), (4, 36, 274), (6, 127, 124), (7, 207, 46)],
 [3, 4, 1, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.67378839990847594, [(0, 190, 132), (2, 176, 228), (5, 123, 192)], [4, 2, 4])
1): 4},
 [(6, 221, 191), (6, 221, 191), (1, 206, 147)],
 [4, 3, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 500.000000
=============================================
#                solution B                 #
=============================================
(0.78648603374620496, [(6, 221, 191), (1, 206, 147), (7, 250, 50)], [4, 4, 2])
=============================================
#               random h list               #
=============================================
[0, 0, 0, 1, 3, 4, 0, 2]
=============================================
#               solution Ran                #
=============================================
(0.27621327829546921,
 [(3, 217, 299), (4, 118, 153), (5, 299, 29), (7, 250, 50)],
 [1, 3, 4, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.78648603374620496, [(1, 206, 147), (6, 221, 191), (7, 250, 50)], [4, 4, 2])
 140, 167), (0, 89, 218), (2, 140, 167)],
 [4, 4, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 500.000000
=============================================
#                solution B                 #
=============================================
(0.68980342013385676, [(0, 89, 218), (1, 68, 278), (2, 140, 167)], [4, 2, 4])
=============================================
#               random h list               #
=============================================
[3, 4, 0, 2, 0, 1, 0, 0]
=============================================
#               solution Ran                #
=============================================
(0.45732247667425396,
 [(0, 89, 218), (1, 68, 278), (3, 201, 58), (5, 254, 56)],
 [3, 4, 2, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.70821630237201916, [(0, 89, 218), (2, 140, 167), (4, 248, 147)], [4, 4, 2])
, 105, 81), (4, 195, 141)],
 [4, 4, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 500.000000
=============================================
#                solution B                 #
=============================================
(0.87925639842962677, [(2, 105, 81), (3, 95, 75), (4, 195, 141)], [4, 2, 4])
=============================================
#               random h list               #
=============================================
[0, 0, 0, 3, 3, 2, 0, 2]
=============================================
#               solution Ran                #
=============================================
(0.57020553331508217,
 [(3, 95, 75), (4, 195, 141), (5, 7, 159), (7, 256, 179)],
 [3, 3, 2, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.89448909282344513, [(2, 105, 81), (3, 95, 75), (4, 195, 141)], [4, 4, 2])
208, 187), (1, 208, 187), (2, 76, 50)],
 [4, 3, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 500.000000
=============================================
#                solution B                 #
=============================================
(0.64800589608005332, [(1, 208, 187), (4, 285, 45), (2, 76, 50)], [4, 3, 3])
=============================================
#               random h list               #
=============================================
[2, 4, 0, 1, 1, 2, 0, 0]
=============================================
#               solution Ran                #
=============================================
(0.4358210665211994,
 [(0, 125, 273), (1, 208, 187), (3, 91, 155), (4, 285, 45), (5, 234, 222)],
 [2, 4, 1, 1, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.67328980280106565, [(1, 208, 187), (2, 76, 50), (4, 285, 45)], [4, 4, 2])
67, 252), (4, 3, 55)],
 [4, 3, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 500.000000
=============================================
#                solution B                 #
=============================================
(0.59519890671950049, [(2, 29, 16), (4, 3, 55), (6, 67, 252)], [2, 4, 4])
=============================================
#               random h list               #
=============================================
[1, 2, 1, 0, 0, 3, 3, 0]
=============================================
#               solution Ran                #
=============================================
(0.39971990542990277,
 [(0, 274, 237), (1, 298, 259), (2, 29, 16), (5, 136, 47), (6, 67, 252)],
 [1, 2, 1, 3, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.61273045885686672, [(3, 162, 162), (4, 3, 55), (6, 67, 252)], [4, 2, 4])
 4},
 [(2, 167, 158), (7, 113, 129), (2, 167, 158)],
 [4, 4, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 500.000000
=============================================
#                solution B                 #
=============================================
(0.97301005815054054, [(7, 113, 129), (2, 167, 158), (0, 249, 125)], [4, 4, 2])
=============================================
#               random h list               #
=============================================
[0, 3, 0, 0, 0, 0, 4, 3]
=============================================
#               solution Ran                #
=============================================
(0.5808628126128873, [(1, 47, 28), (6, 105, 295), (7, 113, 129)], [3, 4, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.97301005815054054, [(0, 249, 125), (2, 167, 158), (7, 113, 129)], [2, 4, 4])
35), (7, 193, 35)],
 [4, 3, 2, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 500.000000
=============================================
#                solution B                 #
=============================================
(0.66731731700489993, [(7, 193, 35), (6, 40, 78), (2, 56, 9)], [4, 2, 4])
=============================================
#               random h list               #
=============================================
[0, 0, 2, 3, 1, 0, 2, 2]
=============================================
#               solution Ran                #
=============================================
(0.38788691329766228,
 [(2, 56, 9), (3, 229, 159), (4, 137, 126), (6, 40, 78), (7, 193, 35)],
 [2, 3, 1, 2, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.7160172135938716, [(1, 222, 260), (2, 56, 9), (7, 193, 35)], [4, 2, 4])
3, 108, 228), (4, 85, 206), (3, 108, 228)],
 [4, 4, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 500.000000
=============================================
#                solution B                 #
=============================================
(0.87553972070256947, [(1, 263, 45), (3, 108, 228), (4, 85, 206)], [2, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 0, 0, 4, 3, 2, 0, 1]
=============================================
#               solution Ran                #
=============================================
(0.70655267097550589,
 [(3, 108, 228), (4, 85, 206), (5, 217, 218), (7, 85, 13)],
 [4, 3, 2, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.87553972070256947, [(1, 263, 45), (3, 108, 228), (4, 85, 206)], [2, 4, 4])
{'B': 500,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
[{'A': (0.72048482115708179, [(6, 221, 191), (1, 206, 147)], [4, 4]),
  'B': (0.78648603374620496,
        [(6, 221, 191), (1, 206, 147), (7, 250, 50)],
        [4, 4, 2]),
  'Opt': (0.78648603374620496,
          [(1, 206, 147), (6, 221, 191), (7, 250, 50)],
          [4, 4, 2]),
  'Random': (0.27621327829546921,
             [(3, 217, 299), (4, 118, 153), (5, 299, 29), (7, 250, 50)],
             [1, 3, 4, 2])},
 {'A': (0.76458507776853335, [(4, 195, 141), (2, 105, 81)], [4, 4]),
  'B': (0.87925639842962677,
        [(2, 105, 81), (3, 95, 75), (4, 195, 141)],
        [4, 2, 4]),
  'Opt': (0.89448909282344513,
          [(2, 105, 81), (3, 95, 75), (4, 195, 141)],
          [4, 4, 2]),
  'Random': (0.57020553331508217,
             [(3, 95, 75), (4, 195, 141), (5, 7, 159), (7, 256, 179)],
             [3, 3, 2, 2])},
 {'A': (0.52266575433954132, [(6, 67, 252), (4, 3, 55)], [4, 4]),
  'B': (0.59519890671950049,
        [(2, 29, 16), (4, 3, 55), (6, 67, 252)],
        [2, 4, 4]),
  'Opt': (0.61273045885686672,
          [(3, 162, 162), (4, 3, 55), (6, 67, 252)],
          [4, 2, 4]),
  'Random': (0.39971990542990277,
             [(0, 274, 237),
              (1, 298, 259),
              (2, 29, 16),
              (5, 136, 47),
              (6, 67, 252)],
             [1, 2, 1, 3, 3])},
 {'A': (0.58737676924206805, [(1, 208, 187), (2, 76, 50)], [4, 4]),
  'B': (0.64800589608005332,
        [(1, 208, 187), (4, 285, 45), (2, 76, 50)],
        [4, 3, 3]),
  'Opt': (0.67328980280106565,
          [(1, 208, 187), (2, 76, 50), (4, 285, 45)],
          [4, 4, 2]),
  'Random': (0.4358210665211994,
             [(0, 125, 273),
              (1, 208, 187),
              (3, 91, 155),
              (4, 285, 45),
              (5, 234, 222)],
             [2, 4, 1, 1, 2])},
 {'A': (0.75122206545122094, [(3, 108, 228), (4, 85, 206)], [4, 4]),
  'B': (0.87553972070256947,
        [(1, 263, 45), (3, 108, 228), (4, 85, 206)],
        [2, 4, 4]),
  'Opt': (0.87553972070256947,
          [(1, 263, 45), (3, 108, 228), (4, 85, 206)],
          [2, 4, 4]),
  'Random': (0.70655267097550589,
             [(3, 108, 228), (4, 85, 206), (5, 217, 218), (7, 85, 13)],
             [4, 3, 2, 1])},
 {'A': (0.62824635499569748, [(7, 193, 35), (2, 56, 9)], [4, 4]),
  'B': (0.66731731700489993,
        [(7, 193, 35), (6, 40, 78), (2, 56, 9)],
        [4, 2, 4]),
  'Opt': (0.7160172135938716,
          [(1, 222, 260), (2, 56, 9), (7, 193, 35)],
          [4, 2, 4]),
  'Random': (0.38788691329766228,
             [(2, 56, 9),
              (3, 229, 159),
              (4, 137, 126),
              (6, 40, 78),
              (7, 193, 35)],
             [2, 3, 1, 2, 2])},
 {'A': (0.60991494953461478, [(2, 140, 167), (0, 89, 218)], [4, 4]),
  'B': (0.68980342013385676,
        [(0, 89, 218), (1, 68, 278), (2, 140, 167)],
        [4, 2, 4]),
  'Opt': (0.70821630237201916,
          [(0, 89, 218), (2, 140, 167), (4, 248, 147)],
          [4, 4, 2]),
  'Random': (0.45732247667425396,
             [(0, 89, 218), (1, 68, 278), (3, 201, 58), (5, 254, 56)],
             [3, 4, 2, 1])},
 {'A': (0.56383811897595804, [(5, 123, 192), (0, 190, 132)], [4, 4]),
  'B': (0.67378839990847594,
        [(0, 190, 132), (2, 176, 228), (5, 123, 192)],
        [4, 2, 4]),
  'Opt': (0.67378839990847594,
          [(0, 190, 132), (2, 176, 228), (5, 123, 192)],
          [4, 2, 4]),
  'Random': (0.3700687491771647,
             [(0, 190, 132), (4, 36, 274), (6, 127, 124), (7, 207, 46)],
             [3, 4, 1, 2])},
 {'A': (0.52855621958955279, [(7, 124, 84), (1, 141, 247)], [4, 4]),
  'B': (0.58628536829211542,
        [(1, 141, 247), (7, 124, 84), (3, 38, 53)],
        [3, 4, 3]),
  'Opt': (0.60534189644909997,
          [(1, 141, 247), (3, 38, 53), (7, 124, 84)],
          [4, 2, 4]),
  'Random': (0.43398454768717515,
             [(0, 131, 17), (1, 141, 247), (5, 21, 89), (7, 124, 84)],
             [4, 2, 1, 3])},
 {'A': (0.84947975912491214, [(2, 167, 158), (7, 113, 129)], [4, 4]),
  'B': (0.97301005815054054,
        [(7, 113, 129), (2, 167, 158), (0, 249, 125)],
        [4, 4, 2]),
  'Opt': (0.97301005815054054,
          [(0, 249, 125), (2, 167, 158), (7, 113, 129)],
          [2, 4, 4]),
  'Random': (0.5808628126128873,
             [(1, 47, 28), (6, 105, 295), (7, 113, 129)],
             [3, 4, 3])}]
{'A': 0.65263698901791811,
 'B': 0.73746915191678442,
 'Opt': 0.75189089794041597,
 'Random': 0.46186379539863021}

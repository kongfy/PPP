=============================================
#                  args                     #
=============================================
{'B': 600,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 139, 230),
 (1, 112, 38),
 (2, 171, 21),
 (3, 64, 240),
 (4, 88, 8),
 (5, 18, 111),
 (6, 195, 74),
 (7, 297, 230)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 59, 134),
 (1, 299, 109),
 (2, 160, 43),
 (3, 282, 104),
 (4, 288, 165),
 (5, 243, 117),
 (6, 146, 9),
 (7, 293, 74),
 (8, 138, 128),
 (9, 154, 250),
 (10, 279, 76),
 (11, 236, 154),
 (12, 50, 189),
 (13, 208, 274),
 (14, 151, 52),
 (15, 29, 157),
 (16, 162, 270),
 (17, 212, 164),
 (18, 91, 64),
 (19, 9, 246),
 (20, 167, 199),
 (21, 6, 111),
 (22, 73, 49),
 (23, 239, 149),
 (24, 1, 189),
 (25, 30, 148),
 (26, 154, 239),
 (27, 102, 271),
 (28, 99, 36),
 (29, 41, 64),
 (30, 191, 18),
 (31, 243, 235),
 (32, 263, 123),
 (33, 57, 224),
 (34, 33, 293),
 (35, 138, 1),
 (36, 241, 161),
 (37, 263, 265),
 (38, 23, 136),
 (39, 107, 246),
 (40, 165, 219),
 (41, 31, 219),
 (42, 46, 146),
 (43, 289, 40),
 (44, 159, 294),
 (45, 106, 119),
 (46, 109, 135),
 (47, 52, 205),
 (48, 226, 146),
 (49, 193, 114)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.12544354972294544,
 0.12270071102979707,
 0.13466851411322794,
 0.14943771180994528,
 0.13439431407042551,
 0.11550492975478914,
 0.15425993088697987,
 0.10136447371423966,
 0.13033749151044882,
 0.19656101412605867,
 0.10078772326539515,
 0.16155522339393591,
 0.17142016331526375,
 0.12502362834081168,
 0.10239229728841232,
 0.12404141238137072,
 0.14507836803025237,
 0.11920357655310831,
 0.19328601859172703,
 0.10184450913613213,
 0.16279814422508657,
 0.18445630003318542,
 0.13681888319390015,
 0.10089989936914986,
 0.19132722027270069,
 0.10892463374691423,
 0.11919058425036343,
 0.18690464127280734,
 0.15261996544350906,
 0.12664819107568379,
 0.14124536737709556,
 0.19940359797564719,
 0.15878595432688011,
 0.15199202435390474,
 0.19993253341687703,
 0.10862023544961254,
 0.13060680286293391,
 0.14083668426590487,
 0.17990739028219643,
 0.17968250301844307,
 0.19584623408796406,
 0.15112918058665251,
 0.15059665921000812,
 0.10035489805406844,
 0.14797625320519475,
 0.10603176712131034,
 0.10002199008034852,
 0.15966541021797834,
 0.11086451183416887,
 0.15648006738341325]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.76140110318526077, [(0, 139, 230), (1, 112, 38), (5, 18, 111)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.76140110318526077, [(0, 139, 230), (1, 112, 38), (5, 18, 111)], [4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.76140110318526077, [(0, 139, 230), (1, 112, 38), (5, 18, 111)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.76140110318526077,
 {(0, 139, 230): 4, (1, 112, 38): 4, (5, 18, 111): 4},
 [(0, 139, 230), (1, 112, 38), (5, 18, 111)],
 [4, 4, 4])
=============================================
#           result of greedy part           #
====================================================================================
#                  args                     #
=============================================
{'B': 600,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 86, 35),
 (1, 74, 290),
 (2, 295, 295),
 (3, 96, 300),
 (4, 121, 143),
 (5, 216, 122),
 (6, 299, 209),
 (7, 201, 81)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 198, 267),
 (1, 22, 172),
 (2, 60, 85),
 (3, 95, 206),
 (4, 238, 54),
 (5, 26, 83),
 (6, 34, 14),
 (7, 81, 20),
 (8, 36, 221),
 (9, 46, 232),
 (10, 11, 65),
 (11, 108, 14),
 (12, 238, 239),
 (13, 46, 32),
 (14, 84, 56),
 (15, 150, 117),
 (16, 129, 4),
 (17, 32, 201),
 (18, 14, 90),
 (19, 217, 33),
 (20, 49, 259),
 (21, 141, 211),
 (22, 219, 136),
 (23, 58, 144),
 (24, 118, 176),
 (25, 110, 256),
 (26, 235, 194),
 (27, 72, 50),
 (28, 281, 244),
 (29, 106, 260),
 (30, 243, 98),
 (31, 201, 142),
 (32, 298, 50),
 (33, 172, 291),
 (34, 72, 196),
 (35, 142, 5),
 (36, 139, 177),
 (37, 138, 218),
 (38, 53, 272),
 (39, 233, 116),
 (40, 172, 188),
 (41, 285, 290),
 (42, 299, 286),
 (43, 250, 186),
 (44, 121, 262),
 (45, 291, 77),
 (46, 160, 218),
 (47, 209, 106),
 (48, 187, 204),
 (49, 78, 42)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.13405068523337874,
 0.16227065929650195,
 0.17614299312727824,
 0.12614594041678534,
 0.17666784465353305,
 0.14794728185761419,
 0.1418181218632667,
 0.17739743943235747,
 0.19397171783569855,
 0.17697149850533511,
 0.18107113424774601,
 0.11034263539997527,
 0.15997276025161333,
 0.10159524071710585,
 0.16910970423077076,
 0.11112284805389983,
 0.19738749342811518,
 0.1937328429688589,
 0.13731264450578784,
 0.13657522443992828,
 0.15934053045861346,
 0.10810302455955173,
 0.13985698959536669,
 0.17792010883270615,
 0.15500391211626524,
 0.17452565649896629,
 0.13906215261684715,
 0.1007258182583812,
 0.17694032421508107,
 0.15513064778362318,
 0.1570369690991073,
 0.16157158653553785,
 0.17932566256667959,
 0.1907621023797943,
 0.14828427446931564,
 0.13368525902306985,
 0.15379674124685347,
 0.11917509712841012,
 0.1693325243915017,
 0.15463384438482075,
 0.1683878436678703,
 0.17451107138366118,
 0.1955183801841528,
 0.12080180211593769,
 0.15778046689259903,
 0.10155228383258427,
 0.14065501853378148,
 0.10333489158826564,
 0.17589472218079708,
 0.14199011893852634]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 3]
=============================================
#           result of greedy part           #
=============================================
(0.88339085468637746, [(0, 86, 35), (5, 216, 122), (2, 295, 295)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.88339085468637746, [(0, 86, 35), (5, 216, 122), (2, 295, 295)], [4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.88339085468637746, [(0, 86, 35), (5, 216, 122), (2, 295, 295)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0323545536771266,
 {(0, 86, 35): 4, (5, 216, 122): 4},
 [(0, 86, 35), (5, 216, 122), (0, 86, 35), (0, 86, 35)],
 [4, 4, 3, 1])
=============================================
#           result of greedy part           #
=============================================
(1.03235=============================================
#                  args                     #
=============================================
{'B': 600,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 2, 247),
 (1, 59, 262),
 (2, 119, 49),
 (3, 116, 210),
 (4, 200, 229),
 (5, 298, 274),
 (6, 250, 148),
 (7, 149, 23)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 189, 281),
 (1, 196, 184),
 (2, 189, 23),
 (3, 61, 143),
 (4, 76, 233),
 (5, 20, 1),
 (6, 61, 51),
 (7, 296, 147),
 (8, 175, 202),
 (9, 42, 97),
 (10, 54, 159),
 (11, 201, 120),
 (12, 131, 144),
 (13, 222, 263),
 (14, 18, 269),
 (15, 51, 38),
 (16, 67, 116),
 (17, 92, 298),
 (18, 56, 125),
 (19, 290, 189),
 (20, 44, 226),
 (21, 170, 88),
 (22, 186, 103),
 (23, 193, 218),
 (24, 105, 246),
 (25, 132, 45),
 (26, 280, 282),
 (27, 228, 225),
 (28, 134, 80),
 (29, 113, 180),
 (30, 298, 210),
 (31, 136, 196),
 (32, 28, 72),
 (33, 12, 196),
 (34, 37, 165),
 (35, 17, 6),
 (36, 80, 49),
 (37, 133, 181),
 (38, 131, 12),
 (39, 241, 124),
 (40, 20, 205),
 (41, 24, 47),
 (42, 230, 119),
 (43, 124, 8),
 (44, 99, 229),
 (45, 268, 268),
 (46, 133, 19),
 (47, 202, 157),
 (48, 33, 273),
 (49, 271, 8)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.16353230297089461,
 0.18578004241912771,
 0.11639129559479072,
 0.15279333650859583,
 0.10529609920618475,
 0.14931543860695601,
 0.14100272505110573,
 0.17513460884463505,
 0.10740455088952833,
 0.10865760959278682,
 0.16865577755630035,
 0.19263068568157377,
 0.14872143890476711,
 0.19918201304143801,
 0.10870820854463827,
 0.14444173160131216,
 0.12918482721918662,
 0.12420499434045497,
 0.16232421926477136,
 0.13420510589819051,
 0.18397991439965838,
 0.17513989971745661,
 0.12077323665079301,
 0.17735975593583142,
 0.16807259735970648,
 0.14966142441097777,
 0.12897276861970824,
 0.17321915199725363,
 0.19476785686827128,
 0.13873261438100787,
 0.13693399258012268,
 0.12769178616025781,
 0.13863570439809123,
 0.13568627076788894,
 0.10920362029097905,
 0.14894460639093832,
 0.12710396774176272,
 0.1137817570484147,
 0.1211386392575788,
 0.19062683400777303,
 0.16509783646535242,
 0.15798636601063354,
 0.1260718852103101,
 0.14337687302809299,
 0.14460956569854191,
 0.17603376080068189,
 0.16928375399533119,
 0.14664335837950654,
 0.17811040962278163,
 0.10037867195586138]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.78035810766760982, [(2, 119, 49), (3, 116, 210), (7, 149, 23)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.78035810766760982, [(2, 119, 49), (3, 116, 210), (7, 149, 23)], [4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.78035810766760982, [(2, 119, 49), (3, 116, 210), (7, 149, 23)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.78035810766760982,
 {(2, 119, 49): 4, (3, 116, 210): 4, (7, 149, 23): 4},
 [(2, 119, 49), (3, 116, 210), (7, 149, 23)],
 [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
=============================================
#                  args                     #
=============================================
{'B': 600,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 83, 91),
 (1, 17, 282),
 (2, 208, 195),
 (3, 216, 159),
 (4, 41, 120),
 (5, 18, 233),
 (6, 212, 42),
 (7, 185, 27)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 206, 6),
 (1, 257, 247),
 (2, 300, 295),
 (3, 193, 227),
 (4, 272, 15),
 (5, 173, 9),
 (6, 231, 56),
 (7, 223, 70),
 (8, 47, 54),
 (9, 230, 255),
 (10, 120, 218),
 (11, 141, 186),
 (12, 10, 194),
 (13, 236, 22),
 (14, 122, 86),
 (15, 131, 235),
 (16, 272, 214),
 (17, 40, 105),
 (18, 248, 12),
 (19, 245, 125),
 (20, 183, 45),
 (21, 139, 97),
 (22, 26, 183),
 (23, 278, 4),
 (24, 208, 148),
 (25, 63, 107),
 (26, 129, 185),
 (27, 117, 209),
 (28, 118, 194),
 (29, 176, 108),
 (30, 95, 219),
 (31, 91, 163),
 (32, 203, 104),
 (33, 43, 291),
 (34, 124, 4),
 (35, 278, 123),
 (36, 165, 15),
 (37, 100, 245),
 (38, 59, 1),
 (39, 179, 105),
 (40, 179, 141),
 (41, 298, 16),
 (42, 300, 283),
 (43, 127, 280),
 (44, 300, 95),
 (45, 31, 107),
 (46, 132, 82),
 (47, 91, 94),
 (48, 150, 264),
 (49, 113, 203)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.17336990638193095,
 0.16462192418822749,
 0.10236550124293252,
 0.15384925464641719,
 0.15260617312802291,
 0.13107730059353165,
 0.15252381848697408,
 0.19872985524222342,
 0.14070718498601209,
 0.14688201660501804,
 0.14308209203577793,
 0.11842152206934596,
 0.11537447025673825,
 0.11722325480524123,
 0.12420654289754894,
 0.13733718726101346,
 0.11974272451390094,
 0.15214799608639365,
 0.10046376023789402,
 0.14048462921122021,
 0.16802020709671284,
 0.12801083444693184,
 0.12897203817097597,
 0.18491877325064046,
 0.13845828218119141,
 0.15170260009776607,
 0.13643477080608107,
 0.1213420374813681,
 0.16992143853893787,
 0.16498082992323621,
 0.17404093247737079,
 0.1534341973661606,
 0.19571202714841907,
 0.11957249683601069,
 0.14304656035816735,
 0.15269111386031575,
 0.16377890199749529,
 0.14111089243864844,
 0.16566048365522801,
 0.14000136462457957,
 0.11155978425319903,
 0.12900236347883826,
 0.15344544002910054,
 0.19025453656761082,
 0.13872991910498869,
 0.106790466801678,
 0.10127166283508711,
 0.10839744335533144,
 0.16675754680080135,
 0.19879154053082632]
=============================================
#           optimal power levels            #
=============================================
[4, 3, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.87665606567748955, [(7, 185, 27), (6, 212, 42), (0, 83, 91)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.87665606567748955, [(7, 185, 27), (6, 212, 42), (0, 83, 91)], [4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.87665606567748955, [(7, 185, 27), (6, 212, 42), (0, 83, 91)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.87665606567748955,
 {(0, 83, 91): 4, (6, 212, 42): 4, (7, 185, 27): 4},
 [(7, 185, 27), (6, 212, 42), (0, 83, 91)],
 [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.8550=============================================
#                  args                     #
=============================================
{'B': 600,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 47, 268),
 (1, 146, 134),
 (2, 278, 180),
 (3, 214, 254),
 (4, 6, 58),
 (5, 163, 211),
 (6, 158, 285),
 (7, 3, 275)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 55, 273),
 (1, 195, 73),
 (2, 96, 67),
 (3, 243, 97),
 (4, 170, 7),
 (5, 105, 18),
 (6, 34, 42),
 (7, 158, 109),
 (8, 20, 89),
 (9, 250, 99),
 (10, 120, 239),
 (11, 48, 58),
 (12, 289, 143),
 (13, 154, 221),
 (14, 14, 139),
 (15, 168, 260),
 (16, 123, 66),
 (17, 112, 105),
 (18, 6, 110),
 (19, 121, 108),
 (20, 158, 128),
 (21, 61, 72),
 (22, 280, 36),
 (23, 39, 151),
 (24, 184, 66),
 (25, 17, 70),
 (26, 89, 104),
 (27, 110, 87),
 (28, 10, 240),
 (29, 128, 248),
 (30, 181, 22),
 (31, 201, 265),
 (32, 273, 39),
 (33, 221, 15),
 (34, 42, 69),
 (35, 26, 237),
 (36, 257, 112),
 (37, 18, 130),
 (38, 31, 272),
 (39, 239, 228),
 (40, 166, 191),
 (41, 160, 198),
 (42, 144, 159),
 (43, 66, 121),
 (44, 74, 249),
 (45, 15, 4),
 (46, 103, 102),
 (47, 173, 292),
 (48, 257, 206),
 (49, 155, 85)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.13386256267232949,
 0.14774545094480848,
 0.11591082363007317,
 0.1450692342230453,
 0.15356371390363022,
 0.10490491588972024,
 0.15013971409768972,
 0.11578208643220972,
 0.13856910317063481,
 0.11500747709899259,
 0.14355534757227273,
 0.17336972307619108,
 0.13062296422180497,
 0.1351286861354708,
 0.12337419882442491,
 0.15831559256508404,
 0.11327914988396606,
 0.19820861787563201,
 0.10877361667880719,
 0.10180433208656527,
 0.14518506601582182,
 0.13615262628071717,
 0.17516587547914114,
 0.18755786141479888,
 0.17095236515587481,
 0.18642721312248894,
 0.12545609152684153,
 0.12125698985902633,
 0.15762987754027186,
 0.17176314197555392,
 0.18048592318259882,
 0.19757574919768967,
 0.18685174376727351,
 0.17841519194609187,
 0.16140308150416383,
 0.10331152105451957,
 0.13044057939838852,
 0.13562705979205533,
 0.14210759716414312,
 0.13928224689773633,
 0.1353610786913288,
 0.13676012185809011,
 0.15362626951584871,
 0.17178803672956289,
 0.11836792442776921,
 0.14765825911515579,
 0.1681547846217839,
 0.12895207602980061,
 0.17062788765137452,
 0.17048679688244756]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.89558806243777633, [(1, 146, 134), (5, 163, 211), (4, 6, 58)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.89558806243777633, [(1, 146, 134), (5, 163, 211), (4, 6, 58)], [4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.89558806243777633, [(1, 146, 134), (5, 163, 211), (4, 6, 58)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.89558806243777633,
 {(1, 146, 134): 4, (4, 6, 58): 4, (5, 163, 211): 4},
 [(1, 146, 134), (5, 163, 211), (4, 6, 58)],
 [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.913793=============================================
#                  args                     #
=============================================
{'B': 600,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 127, 279),
 (1, 263, 265),
 (2, 96, 263),
 (3, 199, 160),
 (4, 255, 263),
 (5, 140, 273),
 (6, 19, 215),
 (7, 92, 227)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 286, 131),
 (1, 50, 178),
 (2, 108, 108),
 (3, 140, 289),
 (4, 107, 233),
 (5, 210, 102),
 (6, 235, 143),
 (7, 239, 7),
 (8, 210, 56),
 (9, 176, 168),
 (10, 24, 141),
 (11, 28, 78),
 (12, 127, 38),
 (13, 278, 166),
 (14, 236, 83),
 (15, 97, 194),
 (16, 115, 3),
 (17, 88, 123),
 (18, 93, 18),
 (19, 298, 293),
 (20, 189, 217),
 (21, 285, 43),
 (22, 89, 277),
 (23, 124, 168),
 (24, 199, 22),
 (25, 4, 31),
 (26, 255, 232),
 (27, 179, 131),
 (28, 183, 263),
 (29, 193, 290),
 (30, 183, 197),
 (31, 245, 89),
 (32, 267, 273),
 (33, 52, 95),
 (34, 0, 237),
 (35, 224, 253),
 (36, 90, 290),
 (37, 158, 112),
 (38, 225, 4),
 (39, 150, 151),
 (40, 171, 128),
 (41, 175, 275),
 (42, 110, 18),
 (43, 180, 192),
 (44, 158, 115),
 (45, 204, 265),
 (46, 102, 109),
 (47, 187, 287),
 (48, 290, 103),
 (49, 155, 42)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.17035271479322286,
 0.19188349461214757,
 0.10994352556849381,
 0.17808586270415627,
 0.14031952920023102,
 0.11378584308043213,
 0.1403304494723123,
 0.11403051469049076,
 0.12164596049694859,
 0.10815488757924629,
 0.16599236587806893,
 0.1884846867133253,
 0.14904511478474705,
 0.13063218866875095,
 0.15254960012357166,
 0.17429336662371059,
 0.10060207761984938,
 0.19649029794956399,
 0.19788052618604479,
 0.10975014341296546,
 0.1611098059955039,
 0.16753004464867172,
 0.18234348700352659,
 0.13652150359977094,
 0.13832940834895069,
 0.15477604763799546,
 0.1125918702685671,
 0.13976150044961211,
 0.13449425947411264,
 0.1522803320734924,
 0.15057914414463075,
 0.12142511324428995,
 0.16607592545180136,
 0.13694619720434353,
 0.18927076455782299,
 0.17068142938134867,
 0.1178701436923462,
 0.19894158647777521,
 0.14547156400548533,
 0.14376248777278761,
 0.12528162895051573,
 0.19021666658580483,
 0.12254577491906568,
 0.14038952298293389,
 0.16680575172825723,
 0.13763409279643093,
 0.1117951890578312,
 0.13526701873920802,
 0.18489343145476872,
 0.10678783681860859]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.74461651832090225, [(3, 199, 160), (5, 140, 273), (4, 255, 263)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.74461651832090225, [(3, 199, 160), (5, 140, 273), (4, 255, 263)], [4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.74461651832090225, [(3, 199, 160), (5, 140, 273), (4, 255, 263)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.74461651832090225,
 {(3, 199, 160): 4, (4, 255, 263): 4, (5, 140, 273): 4},
 [(3, 199, 160), (5, 140, 273), (4, 255, 263)],
 [4, 4, 4])
=============================================
#           result of greedy part           #
=========================================================================
#                  args                     #
=============================================
{'B': 600,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 202, 58),
 (1, 97, 173),
 (2, 139, 138),
 (3, 229, 185),
 (4, 177, 104),
 (5, 109, 255),
 (6, 11, 290),
 (7, 102, 288)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 274, 241),
 (1, 180, 69),
 (2, 294, 262),
 (3, 249, 172),
 (4, 242, 160),
 (5, 292, 42),
 (6, 280, 147),
 (7, 25, 181),
 (8, 43, 162),
 (9, 7, 176),
 (10, 238, 222),
 (11, 72, 70),
 (12, 117, 143),
 (13, 21, 32),
 (14, 91, 13),
 (15, 216, 28),
 (16, 11, 297),
 (17, 296, 227),
 (18, 212, 232),
 (19, 80, 104),
 (20, 134, 111),
 (21, 180, 182),
 (22, 27, 143),
 (23, 51, 285),
 (24, 117, 17),
 (25, 149, 180),
 (26, 1, 158),
 (27, 32, 64),
 (28, 76, 123),
 (29, 185, 119),
 (30, 74, 245),
 (31, 15, 246),
 (32, 101, 31),
 (33, 98, 188),
 (34, 300, 157),
 (35, 60, 274),
 (36, 84, 120),
 (37, 136, 95),
 (38, 164, 185),
 (39, 135, 292),
 (40, 188, 219),
 (41, 42, 174),
 (42, 34, 212),
 (43, 36, 108),
 (44, 208, 246),
 (45, 232, 135),
 (46, 187, 179),
 (47, 251, 283),
 (48, 177, 146),
 (49, 173, 41)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.17861518165263993,
 0.13206770950469068,
 0.14874477951279935,
 0.13198654984702876,
 0.14411540515625709,
 0.13369892798694738,
 0.18757785879873934,
 0.17698188841976972,
 0.14997019496241015,
 0.18300267489277613,
 0.11909648136723192,
 0.13568716866613981,
 0.18048181629716903,
 0.16254476249513095,
 0.10633645108088043,
 0.12067622707377319,
 0.11667858600478438,
 0.138251759669407,
 0.11337317633786595,
 0.12995746338738612,
 0.10320978236509167,
 0.12734768569368457,
 0.1532193892206303,
 0.17899057992154954,
 0.11323169684511543,
 0.10558001507060094,
 0.14149436413915578,
 0.11943176755300414,
 0.17531426922406776,
 0.18883824539316521,
 0.18859759265554032,
 0.13360303945493904,
 0.1954136044909692,
 0.12066860258760698,
 0.14509008428025669,
 0.11754958988036955,
 0.14274877049895279,
 0.16456519875099568,
 0.19373726934131935,
 0.12783317752035084,
 0.12168545887858725,
 0.12234260522214585,
 0.12774584039307146,
 0.11028576655498677,
 0.11090627991273916,
 0.1244861700669968,
 0.1309594840835463,
 0.18731084426066008,
 0.16710311271801206,
 0.17029620044286287]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.89141123341755735, [(3, 229, 185), (2, 139, 138), (1, 97, 173)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.89141123341755735, [(3, 229, 185), (2, 139, 138), (1, 97, 173)], [4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.89141123341755735, [(3, 229, 185), (2, 139, 138), (1, 97, 173)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.89141123341755735,
 {(1, 97, 173): 4, (2, 139, 138): 4, (3, 229, 185): 4},
 [(3, 229, 185), (2, 139, 138), (1, 97, 173)],
 [4, 4, 4])
=============================================
#           result of greedy part           #
================================================================================
#                  args                     #
=============================================
{'B': 600,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 208, 103),
 (1, 215, 271),
 (2, 73, 209),
 (3, 6, 295),
 (4, 63, 73),
 (5, 146, 109),
 (6, 27, 76),
 (7, 113, 142)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 142, 255),
 (1, 88, 233),
 (2, 217, 145),
 (3, 28, 282),
 (4, 271, 300),
 (5, 6, 23),
 (6, 91, 187),
 (7, 124, 248),
 (8, 206, 69),
 (9, 96, 14),
 (10, 67, 251),
 (11, 242, 49),
 (12, 296, 299),
 (13, 57, 199),
 (14, 184, 178),
 (15, 41, 97),
 (16, 115, 45),
 (17, 234, 246),
 (18, 235, 148),
 (19, 137, 238),
 (20, 163, 119),
 (21, 128, 291),
 (22, 145, 52),
 (23, 1, 163),
 (24, 39, 180),
 (25, 88, 247),
 (26, 239, 0),
 (27, 69, 167),
 (28, 145, 28),
 (29, 24, 293),
 (30, 166, 56),
 (31, 229, 95),
 (32, 229, 22),
 (33, 181, 36),
 (34, 137, 172),
 (35, 35, 219),
 (36, 115, 145),
 (37, 47, 94),
 (38, 97, 140),
 (39, 81, 179),
 (40, 129, 120),
 (41, 134, 127),
 (42, 101, 3),
 (43, 268, 45),
 (44, 37, 216),
 (45, 214, 150),
 (46, 46, 30),
 (47, 217, 95),
 (48, 48, 263),
 (49, 103, 155)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.18543009988896297,
 0.11668780653882974,
 0.15225572502720597,
 0.17817016350816495,
 0.11968156116827812,
 0.12277560527068201,
 0.16746489984560409,
 0.1014878705392991,
 0.13615861889035566,
 0.19489814280240639,
 0.19196087001749423,
 0.16254564069446542,
 0.10405380769241332,
 0.11488556597450766,
 0.18843947990685855,
 0.15209708443508085,
 0.11940432312355476,
 0.16716089426583597,
 0.19246493418053165,
 0.16389181006613565,
 0.19631083165023702,
 0.12945342690346753,
 0.19313202623306636,
 0.109774872313533,
 0.17282937259603093,
 0.19333548989838967,
 0.13573972350279817,
 0.11670352707706938,
 0.12352518235129759,
 0.13045995950386444,
 0.19786559869746193,
 0.17626770347582865,
 0.1354389237793176,
 0.15031544536598546,
 0.14096553879648682,
 0.17278501669432461,
 0.1904896574163199,
 0.12792377702183169,
 0.13176367535007924,
 0.1047413507211558,
 0.10262513048819712,
 0.19891034826111631,
 0.1919573334735066,
 0.10870924086765753,
 0.16327359739063479,
 0.14641162376487871,
 0.1904820732776317,
 0.13534421593828933,
 0.10185046858440851,
 0.16786089611754434]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 3, 4]
=============================================
#           result of greedy part           #
=============================================
(1.2111040803247977, [(7, 113, 142), (2, 73, 209), (5, 146, 109)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.2111040803247977, [(7, 113, 142), (2, 73, 209), (5, 146, 109)], [4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.2111040803247977, [(7, 113, 142), (2, 73, 209), (5, 146, 109)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.2111040803247977,
 {(2, 73, 209): 4, (5, 146, 109): 4, (7, 113, 142): 4},
 [(7, 113, 142), (2, 73, 209), (5, 146, 109)],
 [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.2517=============================================
#                  args                     #
=============================================
{'B': 600,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 194, 146),
 (1, 88, 56),
 (2, 256, 183),
 (3, 80, 60),
 (4, 290, 213),
 (5, 178, 260),
 (6, 231, 133),
 (7, 100, 168)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 225, 167),
 (1, 143, 268),
 (2, 197, 214),
 (3, 262, 269),
 (4, 102, 20),
 (5, 58, 7),
 (6, 113, 146),
 (7, 124, 227),
 (8, 102, 163),
 (9, 256, 4),
 (10, 294, 229),
 (11, 148, 59),
 (12, 83, 223),
 (13, 15, 180),
 (14, 172, 121),
 (15, 117, 282),
 (16, 29, 263),
 (17, 197, 115),
 (18, 31, 233),
 (19, 266, 134),
 (20, 247, 178),
 (21, 293, 212),
 (22, 14, 270),
 (23, 203, 205),
 (24, 223, 285),
 (25, 89, 45),
 (26, 121, 57),
 (27, 85, 138),
 (28, 253, 208),
 (29, 227, 53),
 (30, 209, 298),
 (31, 242, 235),
 (32, 182, 167),
 (33, 151, 151),
 (34, 203, 220),
 (35, 111, 223),
 (36, 85, 162),
 (37, 259, 221),
 (38, 73, 248),
 (39, 260, 6),
 (40, 275, 185),
 (41, 210, 122),
 (42, 163, 227),
 (43, 8, 299),
 (44, 130, 67),
 (45, 167, 92),
 (46, 148, 82),
 (47, 241, 276),
 (48, 81, 3),
 (49, 92, 84)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.186746970216291,
 0.19316127648154047,
 0.11607087745659805,
 0.13599841106624808,
 0.13729600266753117,
 0.19561437757481631,
 0.10951914420376774,
 0.15438567933717884,
 0.11447514396658461,
 0.14627619486481966,
 0.10046496722215584,
 0.1939943161660215,
 0.19141717705459768,
 0.15011435473050858,
 0.12945946986123283,
 0.17809586234879399,
 0.10526426163609562,
 0.16812856249015859,
 0.10450957508620196,
 0.14767017289545892,
 0.15643912402586591,
 0.1873675268331885,
 0.16456051457196824,
 0.12338986167775222,
 0.11654384258027249,
 0.19753539799998368,
 0.15516954577211314,
 0.11888921045389339,
 0.12862748821936076,
 0.16659113701838937,
 0.10840122484476308,
 0.12842922493168651,
 0.15107257252033349,
 0.10887909892374022,
 0.19406518148262825,
 0.14019196401747652,
 0.14299645027698091,
 0.11616458450279829,
 0.10831264804126173,
 0.14423668264122408,
 0.17064158212491071,
 0.11180408388347644,
 0.10663027998056267,
 0.12020090289831656,
 0.10779925224957899,
 0.14277774679020361,
 0.14316823467717354,
 0.11740317229487378,
 0.15523489171616892,
 0.16607180202138916]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.0408117433486015, [(2, 256, 183), (4, 290, 213), (7, 100, 168)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0408117433486015, [(2, 256, 183), (4, 290, 213), (7, 100, 168)], [4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.0408117433486015, [(2, 256, 183), (4, 290, 213), (7, 100, 168)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0408117433486015,
 {(2, 256, 183): 4, (4, 290, 213): 4, (7, 100, 168): 4},
 [(2, 256, 183), (4, 290, 213), (7, 100, 168)],
 [4, 4, 4])
=============================================
#           result of greedy part           #
===========================================================================
#                  args                     #
=============================================
{'B': 600,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 110, 259),
 (1, 232, 248),
 (2, 255, 143),
 (3, 217, 269),
 (4, 106, 157),
 (5, 61, 35),
 (6, 105, 95),
 (7, 127, 92)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 9, 29),
 (1, 228, 244),
 (2, 271, 111),
 (3, 184, 12),
 (4, 197, 219),
 (5, 149, 195),
 (6, 286, 205),
 (7, 44, 166),
 (8, 238, 89),
 (9, 236, 138),
 (10, 191, 17),
 (11, 228, 282),
 (12, 62, 265),
 (13, 265, 83),
 (14, 222, 53),
 (15, 281, 167),
 (16, 260, 96),
 (17, 77, 77),
 (18, 145, 224),
 (19, 285, 94),
 (20, 117, 130),
 (21, 233, 28),
 (22, 23, 68),
 (23, 274, 68),
 (24, 39, 40),
 (25, 80, 149),
 (26, 108, 147),
 (27, 39, 241),
 (28, 49, 219),
 (29, 40, 262),
 (30, 143, 75),
 (31, 157, 168),
 (32, 219, 61),
 (33, 159, 110),
 (34, 51, 132),
 (35, 78, 184),
 (36, 32, 236),
 (37, 57, 272),
 (38, 78, 297),
 (39, 241, 37),
 (40, 0, 173),
 (41, 124, 146),
 (42, 193, 236),
 (43, 69, 211),
 (44, 32, 272),
 (45, 152, 121),
 (46, 12, 247),
 (47, 139, 254),
 (48, 273, 79),
 (49, 177, 185)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.12884331205949984,
 0.15803709032955049,
 0.18054361091614948,
 0.10819966885835175,
 0.13557904202604626,
 0.10022437579517141,
 0.15073446208537422,
 0.11500617899939952,
 0.16276445211675578,
 0.14243363250239602,
 0.19416591960830129,
 0.11890498247533837,
 0.16611059626167762,
 0.18040082431033022,
 0.16421813137032282,
 0.133729107609625,
 0.10993411136852942,
 0.16551434206598431,
 0.11212176286619067,
 0.10617296970563565,
 0.12180827609575094,
 0.16325332599936243,
 0.105911707707879,
 0.1711506584555465,
 0.12049563565707543,
 0.10065791279253229,
 0.18935343651155859,
 0.10343403154972133,
 0.12321383428584727,
 0.16513331570310597,
 0.12567268670904877,
 0.14371710505320059,
 0.11051419085132545,
 0.1052073641061797,
 0.13388114432077503,
 0.1398296973804275,
 0.10481211785108023,
 0.13805331613962363,
 0.15302439926049666,
 0.11484699982615487,
 0.1182552872173208,
 0.1430323221353898,
 0.16841686016631807,
 0.19783120064857468,
 0.17997665826205164,
 0.18359845185669071,
 0.17979958149393097,
 0.15979026017674108,
 0.12135888283086785,
 0.16910214892148068]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.79265799269845327, [(4, 106, 157), (2, 255, 143), (0, 110, 259)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.79265799269845327, [(4, 106, 157), (2, 255, 143), (0, 110, 259)], [4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.79265799269845327, [(4, 106, 157), (2, 255, 143), (0, 110, 259)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.86040950028579055,
 {(2, 255, 143): 4, (4, 106, 157): 4},
 [(4, 106, 157), (4, 106, 157), (2, 255, 143), (4, 106, 157)],
 [4, 3, 4, 1])
=============================================
#           result of greedy part           #
================================================
(0.85289209559935797,
 {(2, 139, 138): 4, (3, 229, 185): 4, (6, 11, 290): 1},
 [(3, 229, 185), (2, 139, 138), (2, 139, 138), (6, 11, 290)],
 [4, 4, 3, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 600.000000
=============================================
#                solution B                 #
=============================================
(0.89141123341755735, [(3, 229, 185), (2, 139, 138), (1, 97, 173)], [4, 4, 4])
=============================================
#               random h list               #
=============================================
[1, 2, 4, 2, 1, 0, 0, 2]
=============================================
#               solution Ran                #
=============================================
(0.48429693015219072,
 [(0, 202, 58),
  (1, 97, 173),
  (2, 139, 138),
  (3, 229, 185),
  (4, 177, 104),
  (7, 102, 288)],
 [1, 2, 4, 2, 1, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.89141123341755735, [(1, 97, 173), (2, 139, 138), (3, 229, 185)], [4, 4, 4])
0022811201537,
 {(4, 41, 120): 1, (6, 212, 42): 4, (7, 185, 27): 4},
 [(7, 185, 27), (6, 212, 42), (6, 212, 42), (4, 41, 120)],
 [4, 4, 3, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 600.000000
=============================================
#                solution B                 #
=============================================
(0.87665606567748955, [(0, 83, 91), (7, 185, 27), (6, 212, 42)], [4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 0, 2, 0, 4, 0, 4, 2]
=============================================
#               solution Ran                #
=============================================
(0.65477257103381359,
 [(2, 208, 195), (4, 41, 120), (6, 212, 42), (7, 185, 27)],
 [2, 4, 4, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.87665606567748955, [(0, 83, 91), (6, 212, 42), (7, 185, 27)], [4, 4, 4])
======
(0.76140110318526077,
 {(0, 139, 230): 4, (1, 112, 38): 4, (5, 18, 111): 4},
 [(0, 139, 230), (1, 112, 38), (5, 18, 111)],
 [4, 4, 4])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 600.000000
=============================================
#                solution B                 #
=============================================
(0.76140110318526077, [(1, 112, 38), (0, 139, 230), (5, 18, 111)], [4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 0, 3, 3, 4, 0, 2, 0]
=============================================
#               solution Ran                #
=============================================
(0.47739223098592964,
 [(2, 171, 21), (3, 64, 240), (4, 88, 8), (6, 195, 74)],
 [3, 3, 4, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.76140110318526077, [(0, 139, 230), (1, 112, 38), (5, 18, 111)], [4, 4, 4])
=======
(0.87073103350798919,
 {(2, 255, 143): 3, (4, 106, 157): 4},
 [(4, 106, 157), (4, 106, 157), (4, 106, 157), (2, 255, 143)],
 [4, 3, 2, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 600.000000
=============================================
#                solution B                 #
=============================================
(0.71680151044784834,
 [(1, 232, 248), (3, 217, 269), (4, 106, 157), (2, 255, 143)],
 [4, 1, 4, 3])
=============================================
#               random h list               #
=============================================
[0, 4, 4, 0, 0, 0, 4, 0]
=============================================
#               solution Ran                #
=============================================
(0.59987017501307915, [(1, 232, 248), (2, 255, 143), (6, 105, 95)], [4, 4, 4])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.79265799269845327, [(0, 110, 259), (2, 255, 143), (4, 106, 157)], [4, 4, 4])
49449221992,
 {(1, 146, 134): 4, (5, 163, 211): 4},
 [(1, 146, 134), (1, 146, 134), (5, 163, 211), (5, 163, 211)],
 [4, 3, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 600.000000
=============================================
#                solution B                 #
=============================================
(0.87733719336941696, [(0, 47, 268), (5, 163, 211), (1, 146, 134)], [4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 4, 3, 1, 0, 0, 1, 3]
=============================================
#               solution Ran                #
=============================================
(0.51107148687088,
 [(1, 146, 134), (2, 278, 180), (3, 214, 254), (6, 158, 285), (7, 3, 275)],
 [4, 3, 1, 1, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.89558806243777633, [(1, 146, 134), (4, 6, 58), (5, 163, 211)], [4, 4, 4])
===============
(1.0435780499269869,
 {(2, 256, 183): 4, (4, 290, 213): 4, (7, 100, 168): 1},
 [(2, 256, 183), (4, 290, 213), (2, 256, 183), (7, 100, 168)],
 [4, 4, 3, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 600.000000
=============================================
#                solution B                 #
=============================================
(1.0408117433486015, [(2, 256, 183), (4, 290, 213), (7, 100, 168)], [4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 4, 0, 2, 0, 3, 0, 0]
=============================================
#               solution Ran                #
=============================================
(0.67717574158473148,
 [(0, 194, 146), (1, 88, 56), (3, 80, 60), (5, 178, 260)],
 [3, 4, 2, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.0408117433486015, [(2, 256, 183), (4, 290, 213), (7, 100, 168)], [4, 4, 4])
892779991835,
 {(2, 73, 209): 4, (7, 113, 142): 4},
 [(7, 113, 142), (2, 73, 209), (7, 113, 142), (7, 113, 142)],
 [4, 4, 3, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 600.000000
=============================================
#                solution B                 #
=============================================
(1.2111040803247977, [(5, 146, 109), (2, 73, 209), (7, 113, 142)], [4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 3, 4, 2, 0, 0, 2, 1]
=============================================
#               solution Ran                #
=============================================
(0.62374774995423399,
 [(1, 215, 271), (2, 73, 209), (3, 6, 295), (6, 27, 76), (7, 113, 142)],
 [3, 4, 2, 2, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.2111040803247977, [(2, 73, 209), (5, 146, 109), (7, 113, 142)], [4, 4, 4])
45536771266,
 {(0, 86, 35): 4, (5, 216, 122): 4},
 [(0, 86, 35), (0, 86, 35), (5, 216, 122), (0, 86, 35)],
 [4, 3, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 600.000000
=============================================
#                solution B                 #
=============================================
(0.88339085468637746, [(2, 295, 295), (0, 86, 35), (5, 216, 122)], [4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 1, 1, 0, 3, 2, 3, 2]
=============================================
#               solution Ran                #
=============================================
(0.34672869146398011,
 [(1, 74, 290),
  (2, 295, 295),
  (4, 121, 143),
  (5, 216, 122),
  (6, 299, 209),
  (7, 201, 81)],
 [1, 1, 3, 2, 3, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.88339085468637746, [(0, 86, 35), (2, 295, 295), (5, 216, 122)], [4, 4, 4])
=================
(0.73586764246601755,
 {(1, 263, 265): 1, (3, 199, 160): 4, (5, 140, 273): 4},
 [(3, 199, 160), (3, 199, 160), (5, 140, 273), (1, 263, 265)],
 [4, 3, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 600.000000
=============================================
#                solution B                 #
=============================================
(0.74461651832090225, [(4, 255, 263), (3, 199, 160), (5, 140, 273)], [4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 2, 0, 0, 3, 0, 3, 1]
=============================================
#               solution Ran                #
=============================================
(0.42614465845467281,
 [(0, 127, 279), (1, 263, 265), (4, 255, 263), (6, 19, 215), (7, 92, 227)],
 [3, 2, 3, 3, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.74461651832090225, [(3, 199, 160), (4, 255, 263), (5, 140, 273)], [4, 4, 4])
(0.78035810766760982,
 {(2, 119, 49): 4, (3, 116, 210): 4, (7, 149, 23): 4},
 [(2, 119, 49), (3, 116, 210), (7, 149, 23)],
 [4, 4, 4])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 600.000000
=============================================
#                solution B                 #
=============================================
(0.78035810766760982, [(2, 119, 49), (7, 149, 23), (3, 116, 210)], [4, 4, 4])
=============================================
#               random h list               #
=============================================
[4, 0, 4, 2, 0, 0, 1, 1]
=============================================
#               solution Ran                #
=============================================
(0.54280961488739055,
 [(0, 2, 247), (2, 119, 49), (3, 116, 210), (6, 250, 148), (7, 149, 23)],
 [4, 4, 2, 1, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.78035810766760982, [(2, 119, 49), (3, 116, 210), (7, 149, 23)], [4, 4, 4])
{'B': 600,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
[{'A': (0.87665606567748955,
        [(7, 185, 27), (6, 212, 42), (0, 83, 91)],
        [4, 4, 4]),
  'B': (0.87665606567748955,
        [(0, 83, 91), (7, 185, 27), (6, 212, 42)],
        [4, 4, 4]),
  'Opt': (0.87665606567748955,
          [(0, 83, 91), (6, 212, 42), (7, 185, 27)],
          [4, 4, 4]),
  'Random': (0.65477257103381359,
             [(2, 208, 195), (4, 41, 120), (6, 212, 42), (7, 185, 27)],
             [2, 4, 4, 2])},
 {'A': (0.79265799269845327,
        [(4, 106, 157), (2, 255, 143), (0, 110, 259)],
        [4, 4, 4]),
  'B': (0.71680151044784834,
        [(1, 232, 248), (3, 217, 269), (4, 106, 157), (2, 255, 143)],
        [4, 1, 4, 3]),
  'Opt': (0.79265799269845327,
          [(0, 110, 259), (2, 255, 143), (4, 106, 157)],
          [4, 4, 4]),
  'Random': (0.59987017501307915,
             [(1, 232, 248), (2, 255, 143), (6, 105, 95)],
             [4, 4, 4])},
 {'A': (0.89141123341755735,
        [(3, 229, 185), (2, 139, 138), (1, 97, 173)],
        [4, 4, 4]),
  'B': (0.89141123341755735,
        [(3, 229, 185), (2, 139, 138), (1, 97, 173)],
        [4, 4, 4]),
  'Opt': (0.89141123341755735,
          [(1, 97, 173), (2, 139, 138), (3, 229, 185)],
          [4, 4, 4]),
  'Random': (0.48429693015219072,
             [(0, 202, 58),
              (1, 97, 173),
              (2, 139, 138),
              (3, 229, 185),
              (4, 177, 104),
              (7, 102, 288)],
             [1, 2, 4, 2, 1, 2])},
 {'A': (0.78035810766760982,
        [(2, 119, 49), (3, 116, 210), (7, 149, 23)],
        [4, 4, 4]),
  'B': (0.78035810766760982,
        [(2, 119, 49), (7, 149, 23), (3, 116, 210)],
        [4, 4, 4]),
  'Opt': (0.78035810766760982,
          [(2, 119, 49), (3, 116, 210), (7, 149, 23)],
          [4, 4, 4]),
  'Random': (0.54280961488739055,
             [(0, 2, 247),
              (2, 119, 49),
              (3, 116, 210),
              (6, 250, 148),
              (7, 149, 23)],
             [4, 4, 2, 1, 1])},
 {'A': (0.89558806243777633,
        [(1, 146, 134), (5, 163, 211), (4, 6, 58)],
        [4, 4, 4]),
  'B': (0.87733719336941696,
        [(0, 47, 268), (5, 163, 211), (1, 146, 134)],
        [4, 4, 4]),
  'Opt': (0.89558806243777633,
          [(1, 146, 134), (4, 6, 58), (5, 163, 211)],
          [4, 4, 4]),
  'Random': (0.51107148687088,
             [(1, 146, 134),
              (2, 278, 180),
              (3, 214, 254),
              (6, 158, 285),
              (7, 3, 275)],
             [4, 3, 1, 1, 3])},
 {'A': (0.88339085468637746,
        [(0, 86, 35), (5, 216, 122), (2, 295, 295)],
        [4, 4, 4]),
  'B': (0.88339085468637746,
        [(2, 295, 295), (0, 86, 35), (5, 216, 122)],
        [4, 4, 4]),
  'Opt': (0.88339085468637746,
          [(0, 86, 35), (2, 295, 295), (5, 216, 122)],
          [4, 4, 4]),
  'Random': (0.34672869146398011,
             [(1, 74, 290),
              (2, 295, 295),
              (4, 121, 143),
              (5, 216, 122),
              (6, 299, 209),
              (7, 201, 81)],
             [1, 1, 3, 2, 3, 2])},
 {'A': (0.76140110318526077,
        [(0, 139, 230), (1, 112, 38), (5, 18, 111)],
        [4, 4, 4]),
  'B': (0.76140110318526077,
        [(1, 112, 38), (0, 139, 230), (5, 18, 111)],
        [4, 4, 4]),
  'Opt': (0.76140110318526077,
          [(0, 139, 230), (1, 112, 38), (5, 18, 111)],
          [4, 4, 4]),
  'Random': (0.47739223098592964,
             [(2, 171, 21), (3, 64, 240), (4, 88, 8), (6, 195, 74)],
             [3, 3, 4, 2])},
 {'A': (1.2111040803247977,
        [(7, 113, 142), (2, 73, 209), (5, 146, 109)],
        [4, 4, 4]),
  'B': (1.2111040803247977,
        [(5, 146, 109), (2, 73, 209), (7, 113, 142)],
        [4, 4, 4]),
  'Opt': (1.2111040803247977,
          [(2, 73, 209), (5, 146, 109), (7, 113, 142)],
          [4, 4, 4]),
  'Random': (0.62374774995423399,
             [(1, 215, 271),
              (2, 73, 209),
              (3, 6, 295),
              (6, 27, 76),
              (7, 113, 142)],
             [3, 4, 2, 2, 1])},
 {'A': (0.74461651832090225,
        [(3, 199, 160), (5, 140, 273), (4, 255, 263)],
        [4, 4, 4]),
  'B': (0.74461651832090225,
        [(4, 255, 263), (3, 199, 160), (5, 140, 273)],
        [4, 4, 4]),
  'Opt': (0.74461651832090225,
          [(3, 199, 160), (4, 255, 263), (5, 140, 273)],
          [4, 4, 4]),
  'Random': (0.42614465845467281,
             [(0, 127, 279),
              (1, 263, 265),
              (4, 255, 263),
              (6, 19, 215),
              (7, 92, 227)],
             [3, 2, 3, 3, 1])},
 {'A': (1.0408117433486015,
        [(2, 256, 183), (4, 290, 213), (7, 100, 168)],
        [4, 4, 4]),
  'B': (1.0408117433486015,
        [(2, 256, 183), (4, 290, 213), (7, 100, 168)],
        [4, 4, 4]),
  'Opt': (1.0408117433486015,
          [(2, 256, 183), (4, 290, 213), (7, 100, 168)],
          [4, 4, 4]),
  'Random': (0.67717574158473148,
             [(0, 194, 146), (1, 88, 56), (3, 80, 60), (5, 178, 260)],
             [3, 4, 2, 3])}]
{'A': 0.88779957617648253,
 'B': 0.87838884104458614,
 'Opt': 0.88779957617648253,
 'Random': 0.53440098504009015}

=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 81, 225),
 (1, 120, 211),
 (2, 85, 130),
 (3, 65, 67),
 (4, 296, 253),
 (5, 28, 284),
 (6, 103, 81),
 (7, 294, 45)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 76, 290),
 (1, 93, 77),
 (2, 261, 103),
 (3, 200, 221),
 (4, 61, 44),
 (5, 111, 95),
 (6, 186, 70),
 (7, 164, 185),
 (8, 239, 161),
 (9, 138, 82),
 (10, 269, 239),
 (11, 206, 32),
 (12, 112, 23),
 (13, 17, 47),
 (14, 150, 62),
 (15, 33, 152),
 (16, 1, 267),
 (17, 214, 278),
 (18, 123, 199),
 (19, 259, 1),
 (20, 192, 142),
 (21, 259, 251),
 (22, 289, 274),
 (23, 203, 148),
 (24, 265, 191),
 (25, 126, 264),
 (26, 105, 277),
 (27, 117, 25),
 (28, 42, 285),
 (29, 84, 154),
 (30, 168, 260),
 (31, 39, 39),
 (32, 198, 154),
 (33, 46, 136),
 (34, 226, 137),
 (35, 180, 186),
 (36, 267, 38),
 (37, 48, 35),
 (38, 200, 148),
 (39, 77, 67),
 (40, 217, 67),
 (41, 36, 193),
 (42, 113, 93),
 (43, 141, 66),
 (44, 282, 114),
 (45, 264, 278),
 (46, 8, 263),
 (47, 243, 190),
 (48, 48, 265),
 (49, 52, 65)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.11692497984659261,
 0.11094394391389083,
 0.13321431283057589,
 0.1136886908869409,
 0.11518456564857386,
 0.18312660582859319,
 0.10323584992395202,
 0.17636941408244644,
 0.19913908539893219,
 0.14182477585184983,
 0.17035135614173594,
 0.11338655730148628,
 0.17132601753818313,
 0.11358704930727226,
 0.12514335082814487,
 0.14223149150821868,
 0.14586623330612219,
 0.18640770421790159,
 0.16704220959928362,
 0.15388355141159243,
 0.13291886833224492,
 0.12632623696144696,
 0.14643122171470699,
 0.10611539662350061,
 0.14843924982310833,
 0.19768126705429251,
 0.15827833403791614,
 0.12298014605230825,
 0.18455449052567674,
 0.10018170428907817,
 0.18740910805899852,
 0.169778646856554,
 0.17585604607981409,
 0.17892534090823303,
 0.16233256108202407,
 0.15269573613909745,
 0.16692337417787745,
 0.118916610728015,
 0.14612317732607588,
 0.10753030217843769,
 0.19162692581087257,
 0.17916923104527155,
 0.13795095342903307,
 0.12802044221429368,
 0.12672174219794691,
 0.11223061253653203,
 0.15376672882893433,
 0.12304426180814929,
 0.11307797268365741,
 0.17667843974722799]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.2409357548622271,
 [(6, 103, 81), (3, 65, 67), (2, 85, 130), (5, 28, 284)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.2409357548622271,
 [(6, 103, 81), (3, 65, 67), (2, 85, 130), (5, 28, 284)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.2409357548622271,
 [(6, 103, 81), (3, 65, 67), (2, 85, 130), (5, 28, 284)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.5231328270068543,
 {(3, 65, 67): 4, (6, 103, 81): 4},
 [(6, 103, 81), (3, 65, 67), (6, 103, 81), (3, 65, 67), (6, 103, 81)],
 [4, 4, 3, 3, 2])
=============================================
#           result of greedy part =============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 102, 222),
 (1, 201, 111),
 (2, 35, 180),
 (3, 188, 173),
 (4, 31, 117),
 (5, 287, 37),
 (6, 70, 286),
 (7, 9, 175)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 234, 220),
 (1, 139, 21),
 (2, 122, 20),
 (3, 179, 250),
 (4, 210, 299),
 (5, 52, 52),
 (6, 57, 281),
 (7, 208, 116),
 (8, 40, 55),
 (9, 190, 265),
 (10, 147, 201),
 (11, 63, 158),
 (12, 217, 202),
 (13, 60, 40),
 (14, 9, 107),
 (15, 86, 107),
 (16, 85, 78),
 (17, 0, 160),
 (18, 185, 9),
 (19, 161, 213),
 (20, 249, 256),
 (21, 4, 144),
 (22, 203, 161),
 (23, 231, 232),
 (24, 237, 110),
 (25, 297, 158),
 (26, 219, 188),
 (27, 193, 90),
 (28, 42, 287),
 (29, 75, 26),
 (30, 201, 207),
 (31, 103, 189),
 (32, 279, 73),
 (33, 93, 169),
 (34, 100, 294),
 (35, 141, 148),
 (36, 19, 11),
 (37, 32, 66),
 (38, 154, 163),
 (39, 1, 247),
 (40, 180, 29),
 (41, 91, 272),
 (42, 176, 177),
 (43, 30, 271),
 (44, 229, 224),
 (45, 255, 133),
 (46, 201, 255),
 (47, 10, 213),
 (48, 130, 122),
 (49, 47, 190)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.14624084791959099,
 0.15112824140172659,
 0.14289236245019643,
 0.17817038118522929,
 0.18793087427000116,
 0.1671420509820859,
 0.15964004177912161,
 0.10532872054870183,
 0.1845095667968718,
 0.19042901934886935,
 0.162705881715833,
 0.1005888033297115,
 0.11369599967648779,
 0.10068406284980269,
 0.19872824020192964,
 0.13546108514151767,
 0.15561297276717165,
 0.16749378854140751,
 0.19227598058142231,
 0.1858534504224584,
 0.13338719817661865,
 0.12891607533345947,
 0.15833549724584137,
 0.14411657352849935,
 0.14530331744783778,
 0.19404970217163875,
 0.12238638524697648,
 0.15305740530295633,
 0.17921191590974905,
 0.1371967771364038,
 0.15023045619081055,
 0.19766900919108293,
 0.11757950341387569,
 0.19809008107030451,
 0.19099854117670526,
 0.1495511245997074,
 0.13241439596987342,
 0.18428529933317844,
 0.16888243275383474,
 0.1103611252356743,
 0.17836844575006428,
 0.15490507267650905,
 0.17109430549989502,
 0.16073501840041243,
 0.12693238036523094,
 0.18678944393411082,
 0.15214698665065723,
 0.10960822120218527,
 0.11286562858548414,
 0.15856993148889326]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.1021001403737787,
 [(3, 188, 173), (1, 201, 111), (4, 31, 117), (6, 70, 286)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1021001403737787,
 [(3, 188, 173), (1, 201, 111), (4, 31, 117), (6, 70, 286)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.1021001403737787,
 [(3, 188, 173), (1, 201, 111), (4, 31, 117), (6, 70, 286)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1758042188789923,
 {(1, 201, 111): 4, (3, 188, 173): 4, (4, 31, 117): 4},
 [(3, 188, 173), (1, 201, 111), (3, 188, 173), (4, 31, 117), (1, 201, 111)],
 [4, 4, 3, 4, 1])
=============================================
# =============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 206, 31),
 (1, 100, 286),
 (2, 281, 266),
 (3, 244, 292),
 (4, 16, 215),
 (5, 61, 56),
 (6, 179, 21),
 (7, 247, 166)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 253, 154),
 (1, 95, 159),
 (2, 128, 106),
 (3, 98, 152),
 (4, 239, 189),
 (5, 270, 233),
 (6, 240, 281),
 (7, 151, 23),
 (8, 16, 246),
 (9, 203, 264),
 (10, 168, 293),
 (11, 43, 34),
 (12, 261, 235),
 (13, 42, 154),
 (14, 244, 157),
 (15, 9, 52),
 (16, 255, 4),
 (17, 147, 10),
 (18, 266, 265),
 (19, 290, 176),
 (20, 73, 124),
 (21, 48, 107),
 (22, 159, 120),
 (23, 131, 203),
 (24, 30, 208),
 (25, 273, 130),
 (26, 204, 222),
 (27, 214, 3),
 (28, 111, 265),
 (29, 185, 224),
 (30, 35, 263),
 (31, 125, 64),
 (32, 277, 125),
 (33, 151, 90),
 (34, 78, 45),
 (35, 59, 133),
 (36, 78, 186),
 (37, 179, 68),
 (38, 172, 213),
 (39, 2, 169),
 (40, 251, 211),
 (41, 272, 283),
 (42, 139, 137),
 (43, 204, 250),
 (44, 281, 288),
 (45, 155, 91),
 (46, 293, 40),
 (47, 135, 17),
 (48, 49, 259),
 (49, 81, 291)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.11954755147951956,
 0.15265165920818566,
 0.15695814269736424,
 0.10668373499704102,
 0.15047611804224481,
 0.12114820873038031,
 0.10200946911176619,
 0.11628935363779835,
 0.16456933306292298,
 0.1523487306958255,
 0.11377425614254269,
 0.15007437498788634,
 0.14624378301090513,
 0.13797531863761964,
 0.18008270407055674,
 0.18760621322955612,
 0.156237798233303,
 0.19743050293534184,
 0.15746996658104043,
 0.19411116472611223,
 0.11404228808726491,
 0.1398591567866726,
 0.1925649890579969,
 0.11067536405328726,
 0.10750645404110686,
 0.11794089710968809,
 0.17433991015451261,
 0.12119478714512111,
 0.15391615390756988,
 0.16341880377900334,
 0.17405528472509407,
 0.17884857710756,
 0.14548835670773125,
 0.10087773999981123,
 0.16098415876459149,
 0.14301147173875353,
 0.10883564458283246,
 0.19824303739022156,
 0.10143726159627608,
 0.15813187299980758,
 0.18140485958373881,
 0.15147730175141022,
 0.13638663349785302,
 0.13260262767448863,
 0.10173031413699732,
 0.15131827300478456,
 0.15459163407565168,
 0.11230856228953733,
 0.11802205819398698,
 0.14494749515190086]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.0588896751184611,
 [(7, 247, 166), (2, 281, 266), (3, 244, 292), (6, 179, 21)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0588896751184611,
 [(7, 247, 166), (2, 281, 266), (3, 244, 292), (6, 179, 21)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.0588896751184611,
 [(7, 247, 166), (2, 281, 266), (3, 244, 292), (6, 179, 21)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1302695397943781,
 {(2, 281, 266): 4, (3, 244, 292): 4, (7, 247, 166): 4},
 [(7, 247, 166), (2, 281, 266), (3, 244, 292), (7, 247, 166), (7, 247, 166)],
 [4, 4, 4, 3, 1])
=================================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 116, 161),
 (1, 231, 272),
 (2, 236, 213),
 (3, 280, 32),
 (4, 26, 45),
 (5, 164, 42),
 (6, 198, 123),
 (7, 115, 147)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 228, 95),
 (1, 236, 274),
 (2, 44, 80),
 (3, 97, 253),
 (4, 17, 255),
 (5, 45, 81),
 (6, 192, 62),
 (7, 214, 64),
 (8, 209, 190),
 (9, 170, 295),
 (10, 208, 56),
 (11, 168, 185),
 (12, 69, 275),
 (13, 84, 275),
 (14, 67, 82),
 (15, 249, 105),
 (16, 240, 78),
 (17, 173, 106),
 (18, 123, 108),
 (19, 168, 144),
 (20, 35, 37),
 (21, 186, 33),
 (22, 273, 145),
 (23, 296, 43),
 (24, 45, 290),
 (25, 240, 90),
 (26, 269, 59),
 (27, 272, 159),
 (28, 22, 178),
 (29, 76, 1),
 (30, 165, 204),
 (31, 297, 228),
 (32, 210, 171),
 (33, 199, 4),
 (34, 123, 90),
 (35, 214, 296),
 (36, 55, 13),
 (37, 266, 138),
 (38, 83, 99),
 (39, 198, 196),
 (40, 145, 68),
 (41, 184, 14),
 (42, 220, 76),
 (43, 90, 29),
 (44, 271, 261),
 (45, 84, 177),
 (46, 46, 154),
 (47, 292, 217),
 (48, 294, 181),
 (49, 174, 36)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.1076449498949589,
 0.12145319672419624,
 0.12571343126397702,
 0.15664312358217689,
 0.15992668245843358,
 0.16090792766277467,
 0.11790323985195306,
 0.15345164171778616,
 0.17786403712041085,
 0.14932479277496524,
 0.17072897823727418,
 0.18471768774625497,
 0.16350061544400613,
 0.18697909266774665,
 0.1597029527282707,
 0.16756044858595542,
 0.10591281397211458,
 0.15780824890180403,
 0.14576684453488048,
 0.14251710980133492,
 0.11493359668712168,
 0.14208897088015365,
 0.13245468520284479,
 0.14401911020252281,
 0.12410104710604501,
 0.16889924932843298,
 0.11217725789514363,
 0.11968381204988006,
 0.1032679217337828,
 0.15365173904593757,
 0.15558072480951157,
 0.15144176076801272,
 0.11561718590390009,
 0.14714723912278868,
 0.19073977328633904,
 0.16868168467095757,
 0.1089824361841315,
 0.1468417148581084,
 0.16414665033563169,
 0.11407743401967936,
 0.19107237156935508,
 0.10480779132386736,
 0.13869487979837208,
 0.13606568317874157,
 0.11328931861917127,
 0.10455459018367694,
 0.12288962924331848,
 0.11588163711060617,
 0.18710307196582518,
 0.13191114792457542]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.0989377206304136,
 [(5, 164, 42), (6, 198, 123), (2, 236, 213), (1, 231, 272)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0989377206304136,
 [(5, 164, 42), (6, 198, 123), (2, 236, 213), (1, 231, 272)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.0989377206304136,
 [(5, 164, 42), (6, 198, 123), (2, 236, 213), (1, 231, 272)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1561005341049393,
 {(2, 236, 213): 4, (5, 164, 42): 4, (6, 198, 123): 4},
 [(5, 164, 42), (6, 198, 123), (5, 164, 42), (2, 236, 213), (5, 164, 42)],
 [4, 4, 3, 4, 1])
=========================================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 242, 131),
 (1, 72, 86),
 (2, 57, 288),
 (3, 226, 292),
 (4, 127, 125),
 (5, 149, 131),
 (6, 201, 11),
 (7, 94, 118)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 270, 67),
 (1, 38, 151),
 (2, 20, 65),
 (3, 196, 51),
 (4, 252, 85),
 (5, 259, 136),
 (6, 170, 102),
 (7, 95, 283),
 (8, 31, 250),
 (9, 245, 115),
 (10, 49, 238),
 (11, 249, 91),
 (12, 252, 225),
 (13, 217, 103),
 (14, 219, 226),
 (15, 267, 36),
 (16, 3, 222),
 (17, 109, 299),
 (18, 217, 75),
 (19, 229, 108),
 (20, 167, 31),
 (21, 208, 21),
 (22, 46, 248),
 (23, 258, 180),
 (24, 162, 190),
 (25, 230, 53),
 (26, 264, 113),
 (27, 199, 267),
 (28, 96, 131),
 (29, 57, 188),
 (30, 232, 156),
 (31, 21, 69),
 (32, 285, 267),
 (33, 2, 7),
 (34, 76, 58),
 (35, 241, 18),
 (36, 1, 7),
 (37, 99, 270),
 (38, 191, 179),
 (39, 262, 107),
 (40, 167, 248),
 (41, 121, 280),
 (42, 209, 193),
 (43, 267, 59),
 (44, 10, 218),
 (45, 106, 240),
 (46, 53, 68),
 (47, 38, 240),
 (48, 73, 178),
 (49, 9, 171)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.12442509341439864,
 0.13148542827081489,
 0.15779984016494622,
 0.13037830457499977,
 0.16945496090155482,
 0.17209409661373268,
 0.1793564312182897,
 0.19229206779160465,
 0.12407115873866342,
 0.15945554689188113,
 0.19313830601531473,
 0.15929988026188366,
 0.19639027504639167,
 0.14776131478086243,
 0.10108080958123168,
 0.14489754112245079,
 0.1840166544010414,
 0.18499439889549929,
 0.17600498745605114,
 0.1786224045718845,
 0.16912014847600015,
 0.13300672889911505,
 0.10625298489956439,
 0.16876445608395985,
 0.11163126979746091,
 0.11125931803485017,
 0.10781020707022054,
 0.19463812244126361,
 0.1083747664467174,
 0.17148868161171607,
 0.19898895994762292,
 0.17461208525919017,
 0.16472208601886715,
 0.14565085915567283,
 0.11914111245504183,
 0.19424736402604681,
 0.19186845281504808,
 0.1158050784885588,
 0.16149382707081361,
 0.11667499833332245,
 0.14796074550066812,
 0.1877621647946672,
 0.12333062910632642,
 0.15538038381845781,
 0.15587868913974021,
 0.1552474371339117,
 0.1716463847467998,
 0.1734283091809723,
 0.17175462221105026,
 0.19306997510100277]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.98539700655402385,
 [(0, 242, 131), (6, 201, 11), (2, 57, 288), (7, 94, 118)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.98539700655402385,
 [(0, 242, 131), (6, 201, 11), (2, 57, 288), (7, 94, 118)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.98539700655402385,
 [(0, 242, 131), (6, 201, 11), (2, 57, 288), (7, 94, 118)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1588182456072511,
 {(0, 242, 131): 4, (2, 57, 288): 4, (6, 201, 11): 4},
 [(0, 242, 131), (0, 242, 131), (6, 201, 11), (2, 57, 288), (0, 242, 131)],
 [4, 3, 4, 4, 1])
=============================================
#      =============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 110, 202),
 (1, 85, 273),
 (2, 280, 161),
 (3, 65, 109),
 (4, 47, 196),
 (5, 30, 26),
 (6, 22, 26),
 (7, 238, 163)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 210, 81),
 (1, 194, 114),
 (2, 106, 286),
 (3, 126, 250),
 (4, 133, 67),
 (5, 117, 77),
 (6, 168, 1),
 (7, 177, 53),
 (8, 235, 138),
 (9, 14, 187),
 (10, 79, 31),
 (11, 171, 84),
 (12, 299, 245),
 (13, 199, 148),
 (14, 255, 149),
 (15, 266, 29),
 (16, 194, 72),
 (17, 7, 76),
 (18, 15, 85),
 (19, 147, 134),
 (20, 97, 295),
 (21, 82, 240),
 (22, 182, 22),
 (23, 153, 121),
 (24, 117, 298),
 (25, 161, 133),
 (26, 253, 292),
 (27, 85, 60),
 (28, 97, 62),
 (29, 282, 38),
 (30, 185, 256),
 (31, 150, 78),
 (32, 127, 97),
 (33, 49, 182),
 (34, 266, 283),
 (35, 181, 208),
 (36, 2, 87),
 (37, 284, 148),
 (38, 38, 64),
 (39, 260, 60),
 (40, 247, 39),
 (41, 261, 107),
 (42, 69, 155),
 (43, 182, 30),
 (44, 277, 214),
 (45, 86, 237),
 (46, 131, 149),
 (47, 30, 96),
 (48, 44, 248),
 (49, 75, 244)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.12915985590228088,
 0.19189872392218255,
 0.187833046923192,
 0.18979467577072945,
 0.16400777964370561,
 0.19676304452658833,
 0.11838443714684269,
 0.17877219959792912,
 0.10723956663864728,
 0.10281124780626938,
 0.10684763688734322,
 0.16151445072324619,
 0.18788115253269527,
 0.12136880986959621,
 0.18623041028219939,
 0.10025376198847032,
 0.18689330952340547,
 0.1550821214782217,
 0.15432031581736078,
 0.14219725221842208,
 0.17876158531840786,
 0.17019001839468528,
 0.17894147791993187,
 0.18949756692262754,
 0.16192458671659374,
 0.1766577364220614,
 0.11656375722360202,
 0.15962954629728743,
 0.18468647931986004,
 0.15062792688437374,
 0.12787022769061887,
 0.19463820264987619,
 0.19725224523612669,
 0.10674864378581925,
 0.14355071121550311,
 0.18913761455777628,
 0.10348240607443619,
 0.19008272747098692,
 0.12558782456158374,
 0.15433677476505522,
 0.19577759940509257,
 0.16584121491815906,
 0.19536861822980484,
 0.19628728998013298,
 0.10337570568687794,
 0.17043325525002595,
 0.17765033523730794,
 0.10653644869098522,
 0.17758027752108319,
 0.14888718898016121]
=============================================
#           optimal power levels            #
=============================================
[4, 3, 4, 4, 3, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.78329230882937928,
 [(3, 65, 109), (7, 238, 163), (1, 85, 273), (2, 280, 161)],
 [4, 4, 3, 4])
=============================================
#           result of greedy part           #
=============================================
(0.75428966153000343,
 [(1, 85, 273), (3, 65, 109), (7, 238, 163), (4, 47, 196)],
 [3, 4, 4, 3])
=============================================
#                solution A                 #
=============================================
(0.78329230882937928,
 [(3, 65, 109), (7, 238, 163), (1, 85, 273), (2, 280, 161)],
 [4, 4, 3, 4])
=============================================
#           result of greedy part           #
=============================================
(0.86401583530228021,
 {(1, 85, 273): 4, (3, 65, 109): 4, (4, 47, 196): 4, (7, 238, 163): 4},
 [(1, 85, 273), (3, 65, 109), (7, 238, 163), (4, 47, 196)],
 [4, 4, 4, 4])
=============================================
#  =============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 180, 1),
 (1, 295, 122),
 (2, 64, 26),
 (3, 164, 244),
 (4, 135, 69),
 (5, 182, 131),
 (6, 197, 170),
 (7, 106, 284)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 118, 275),
 (1, 235, 43),
 (2, 137, 258),
 (3, 274, 8),
 (4, 45, 248),
 (5, 90, 117),
 (6, 185, 19),
 (7, 293, 108),
 (8, 260, 230),
 (9, 34, 274),
 (10, 197, 106),
 (11, 152, 48),
 (12, 33, 247),
 (13, 86, 174),
 (14, 226, 67),
 (15, 32, 75),
 (16, 168, 211),
 (17, 77, 44),
 (18, 152, 26),
 (19, 267, 194),
 (20, 221, 225),
 (21, 207, 91),
 (22, 57, 299),
 (23, 0, 51),
 (24, 98, 87),
 (25, 252, 275),
 (26, 76, 208),
 (27, 132, 132),
 (28, 89, 230),
 (29, 244, 189),
 (30, 288, 101),
 (31, 135, 86),
 (32, 140, 79),
 (33, 0, 261),
 (34, 245, 194),
 (35, 1, 200),
 (36, 33, 28),
 (37, 91, 206),
 (38, 75, 221),
 (39, 204, 137),
 (40, 3, 286),
 (41, 58, 295),
 (42, 239, 79),
 (43, 272, 259),
 (44, 191, 122),
 (45, 152, 86),
 (46, 154, 165),
 (47, 88, 38),
 (48, 172, 235),
 (49, 281, 113)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.18624402296484971,
 0.16489981420829208,
 0.11026563827356439,
 0.16747036438427887,
 0.10001528994594658,
 0.16990971767878704,
 0.13737527673582522,
 0.19459800570755822,
 0.18507912410794636,
 0.17973301511528916,
 0.11950805783177509,
 0.17686338027476678,
 0.14443846131383808,
 0.18270853852489183,
 0.18949656049077634,
 0.1799742222066289,
 0.17673828126192498,
 0.16400285611326204,
 0.18144858544960946,
 0.11403146645364715,
 0.14223851612875144,
 0.19664261131089594,
 0.11858562827354066,
 0.19185268973837039,
 0.19655625480914968,
 0.14796183927711648,
 0.19937979498352809,
 0.1294429665744633,
 0.16718060212066926,
 0.16305284800480929,
 0.18794670329836166,
 0.10344179662363578,
 0.13924063013462915,
 0.174107682580662,
 0.17782665019812233,
 0.18174524379797416,
 0.1336622042042043,
 0.18435556732360764,
 0.17101468253358118,
 0.13685293316209013,
 0.1279390600962714,
 0.17733496665832327,
 0.14664365966173568,
 0.19013178642017267,
 0.17645679390479163,
 0.10433237604192333,
 0.10510246233630754,
 0.13150881982291082,
 0.11017369693946583,
 0.14052437412292451]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.1039307571772663,
 [(4, 135, 69), (5, 182, 131), (7, 106, 284), (6, 197, 170)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1039307571772663,
 [(4, 135, 69), (5, 182, 131), (7, 106, 284), (6, 197, 170)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.1039307571772663,
 [(4, 135, 69), (5, 182, 131), (7, 106, 284), (6, 197, 170)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1804678107647801,
 {(4, 135, 69): 4, (5, 182, 131): 4, (7, 106, 284): 4},
 [(4, 135, 69), (5, 182, 131), (4, 135, 69), (7, 106, 284), (4, 135, 69)],
 [4, 4, 3, 4, 1])
=============================================
#=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 155, 197),
 (1, 54, 195),
 (2, 252, 198),
 (3, 259, 255),
 (4, 269, 266),
 (5, 246, 160),
 (6, 84, 59),
 (7, 138, 292)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 255, 199),
 (1, 238, 217),
 (2, 34, 287),
 (3, 41, 83),
 (4, 223, 242),
 (5, 34, 128),
 (6, 62, 197),
 (7, 118, 211),
 (8, 154, 151),
 (9, 58, 246),
 (10, 193, 158),
 (11, 256, 92),
 (12, 0, 300),
 (13, 176, 273),
 (14, 296, 138),
 (15, 264, 286),
 (16, 187, 175),
 (17, 132, 183),
 (18, 148, 143),
 (19, 25, 262),
 (20, 13, 225),
 (21, 98, 234),
 (22, 133, 158),
 (23, 111, 67),
 (24, 190, 279),
 (25, 146, 256),
 (26, 272, 287),
 (27, 217, 272),
 (28, 219, 161),
 (29, 40, 145),
 (30, 11, 1),
 (31, 126, 295),
 (32, 26, 254),
 (33, 39, 94),
 (34, 166, 29),
 (35, 8, 209),
 (36, 254, 134),
 (37, 205, 293),
 (38, 166, 246),
 (39, 25, 16),
 (40, 210, 8),
 (41, 16, 169),
 (42, 149, 56),
 (43, 229, 106),
 (44, 32, 183),
 (45, 114, 212),
 (46, 183, 71),
 (47, 70, 120),
 (48, 14, 110),
 (49, 218, 230)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.17290247000425352,
 0.11390891875950575,
 0.1101874500777919,
 0.16184422713631552,
 0.15536083278678958,
 0.14764793321493469,
 0.11953263115611572,
 0.19771308793517425,
 0.18093459356940075,
 0.13954773215312569,
 0.19791963674161231,
 0.16948968020382527,
 0.15224777525003094,
 0.13894595128323525,
 0.15676970794753786,
 0.14933624153860578,
 0.1356812431636093,
 0.1686435136172304,
 0.10709743226743604,
 0.16333367232050655,
 0.18512685332271503,
 0.15479819107781551,
 0.10811862025466272,
 0.14561424085956581,
 0.13876138502716368,
 0.13153920667891503,
 0.1980496396025517,
 0.1383433371873799,
 0.12336665520890538,
 0.19325064220087632,
 0.11655411578120274,
 0.1624771392823596,
 0.12431651620603196,
 0.12571581936399451,
 0.11628538718121877,
 0.14851854493869734,
 0.10239836933334567,
 0.17491356714542028,
 0.11580753582351427,
 0.17844850725392303,
 0.18704945201760637,
 0.14690322807084435,
 0.1779130509441082,
 0.12052833036567144,
 0.15830822644070908,
 0.18402603960859196,
 0.16410266708595558,
 0.109875892378862,
 0.1315261368464623,
 0.1666119743425426]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.1279130955572141,
 [(1, 54, 195), (0, 155, 197), (2, 252, 198), (5, 246, 160)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1279130955572141,
 [(1, 54, 195), (0, 155, 197), (2, 252, 198), (5, 246, 160)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.1279130955572141,
 [(1, 54, 195), (0, 155, 197), (2, 252, 198), (5, 246, 160)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1708530028907567,
 {(0, 155, 197): 4, (1, 54, 195): 4, (2, 252, 198): 4},
 [(1, 54, 195), (0, 155, 197), (2, 252, 198), (1, 54, 195), (2, 252, 198)],
 [4, 4, 4, 3, 1])
=====================================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 79, 172),
 (1, 205, 137),
 (2, 282, 28),
 (3, 279, 42),
 (4, 257, 274),
 (5, 92, 226),
 (6, 70, 269),
 (7, 266, 228)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 270, 147),
 (1, 261, 142),
 (2, 238, 254),
 (3, 238, 182),
 (4, 68, 218),
 (5, 233, 25),
 (6, 189, 174),
 (7, 122, 44),
 (8, 106, 68),
 (9, 186, 28),
 (10, 90, 244),
 (11, 4, 129),
 (12, 174, 16),
 (13, 117, 200),
 (14, 10, 152),
 (15, 283, 197),
 (16, 152, 258),
 (17, 222, 41),
 (18, 211, 39),
 (19, 46, 67),
 (20, 4, 140),
 (21, 274, 254),
 (22, 256, 52),
 (23, 97, 191),
 (24, 137, 294),
 (25, 257, 19),
 (26, 65, 118),
 (27, 186, 184),
 (28, 76, 158),
 (29, 155, 200),
 (30, 222, 170),
 (31, 118, 51),
 (32, 92, 285),
 (33, 85, 237),
 (34, 210, 49),
 (35, 0, 244),
 (36, 76, 124),
 (37, 168, 257),
 (38, 45, 242),
 (39, 25, 53),
 (40, 224, 170),
 (41, 145, 61),
 (42, 0, 23),
 (43, 168, 208),
 (44, 126, 158),
 (45, 150, 193),
 (46, 202, 161),
 (47, 232, 68),
 (48, 74, 282),
 (49, 155, 257)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.1412640284959526,
 0.11418079763131769,
 0.1462320830262045,
 0.150371984293314,
 0.1541372107045155,
 0.14928826453797073,
 0.18008037913255462,
 0.14144509344402778,
 0.14337763203681075,
 0.1870511712980307,
 0.14499725123002824,
 0.16332086457014819,
 0.13980754770075468,
 0.16135252452543691,
 0.10953003076677736,
 0.19235678371501641,
 0.11755256182463203,
 0.11698873606629553,
 0.16489131739352167,
 0.19660124896858472,
 0.10439354482933574,
 0.19799204421301822,
 0.16951482354587677,
 0.13167895167863888,
 0.18305159679266678,
 0.10863286994984939,
 0.17550744897742279,
 0.10870917128028956,
 0.11653617899531207,
 0.182475706364708,
 0.1006368486474187,
 0.18913274506104136,
 0.1076937891474853,
 0.15488354474970123,
 0.13301713046918556,
 0.16424904866748019,
 0.14301677874045196,
 0.18167924929376941,
 0.13662136151339005,
 0.18922579180490165,
 0.10863913244179282,
 0.18008532109441919,
 0.10903886221218606,
 0.17012622427311086,
 0.10430831282958189,
 0.14037512364863569,
 0.11270936686133559,
 0.14068017137480537,
 0.13556617364923956,
 0.11042032966700129]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.1863519090517678,
 [(5, 92, 226), (0, 79, 172), (6, 70, 269), (1, 205, 137)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1863519090517678,
 [(5, 92, 226), (0, 79, 172), (6, 70, 269), (1, 205, 137)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.1863519090517678,
 [(5, 92, 226), (0, 79, 172), (6, 70, 269), (1, 205, 137)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1863519090517678,
 {(0, 79, 172): 4, (1, 205, 137): 4, (5, 92, 226): 4, (6, 70, 269): 4},
 [(5, 92, 226), (0, 79, 172), (6, 70, 269), (1, 205, 137)],
 [4, 4, 4, 4])
=============================================
#       =============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 153, 92),
 (1, 98, 162),
 (2, 299, 200),
 (3, 233, 276),
 (4, 175, 297),
 (5, 100, 63),
 (6, 258, 56),
 (7, 279, 210)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 67, 226),
 (1, 38, 142),
 (2, 15, 211),
 (3, 110, 162),
 (4, 86, 176),
 (5, 13, 61),
 (6, 127, 37),
 (7, 296, 287),
 (8, 133, 224),
 (9, 135, 206),
 (10, 101, 213),
 (11, 271, 23),
 (12, 239, 243),
 (13, 298, 121),
 (14, 214, 78),
 (15, 164, 261),
 (16, 273, 295),
 (17, 39, 230),
 (18, 110, 163),
 (19, 235, 202),
 (20, 14, 229),
 (21, 24, 274),
 (22, 219, 60),
 (23, 190, 32),
 (24, 236, 49),
 (25, 235, 20),
 (26, 14, 87),
 (27, 217, 205),
 (28, 63, 64),
 (29, 110, 242),
 (30, 185, 218),
 (31, 278, 217),
 (32, 278, 248),
 (33, 284, 126),
 (34, 135, 23),
 (35, 201, 19),
 (36, 155, 114),
 (37, 104, 91),
 (38, 24, 295),
 (39, 227, 243),
 (40, 278, 38),
 (41, 266, 245),
 (42, 276, 104),
 (43, 96, 6),
 (44, 264, 166),
 (45, 84, 124),
 (46, 148, 113),
 (47, 261, 291),
 (48, 85, 236),
 (49, 41, 115)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.19052847995871053,
 0.17926579777526469,
 0.11863364775211996,
 0.17188851713876857,
 0.19607987665863297,
 0.12520233658225602,
 0.19487969290186768,
 0.10552509693750101,
 0.15127832663900179,
 0.17346185646325468,
 0.10861314054334541,
 0.11267569432096464,
 0.11936529700597935,
 0.18354445241098832,
 0.17313767502408284,
 0.18806938699684408,
 0.17356126246068296,
 0.17126380814769171,
 0.15816121043677189,
 0.12717546394730184,
 0.17469338331911505,
 0.1193076708240311,
 0.12505594309201964,
 0.17657775407327239,
 0.18434376100848091,
 0.16474073194771538,
 0.1735296550834676,
 0.12211335948435981,
 0.11227226104646526,
 0.1788852585150375,
 0.11679190583592249,
 0.17305784809983807,
 0.1728106159387966,
 0.13307775489027221,
 0.10779575638992794,
 0.18643951941008252,
 0.15328158727208283,
 0.11928966756220598,
 0.15250034813954955,
 0.17664647840509196,
 0.10089261784154514,
 0.11376544463183556,
 0.11376644758245928,
 0.17678026787645357,
 0.18300911938202327,
 0.12266479876265003,
 0.15148699029878498,
 0.12844673130184969,
 0.14671373752128178,
 0.13271301355423934]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.1260725557654185,
 [(1, 98, 162), (7, 279, 210), (6, 258, 56), (3, 233, 276)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1260725557654185,
 [(1, 98, 162), (7, 279, 210), (6, 258, 56), (3, 233, 276)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.1260725557654185,
 [(1, 98, 162), (7, 279, 210), (6, 258, 56), (3, 233, 276)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1260725557654185,
 {(1, 98, 162): 4, (3, 233, 276): 4, (6, 258, 56): 4, (7, 279, 210): 4},
 [(1, 98, 162), (7, 279, 210), (6, 258, 56), (3, 233, 276)],
 [4, 4, 4, 4])
====================================         result of greedy part           #
=============================================
(0.92738045761241461,
 {(1, 85, 273): 4, (3, 65, 109): 4, (4, 47, 196): 3},
 [(1, 85, 273), (1, 85, 273), (1, 85, 273), (3, 65, 109), (4, 47, 196)],
 [3, 2, 4, 4, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.833507320740839,
 [(3, 65, 109), (7, 238, 163), (4, 47, 196), (2, 280, 161), (1, 85, 273)],
 [4, 4, 3, 1, 4])
=============================================
#               random h list               #
=============================================
[1, 0, 3, 0, 0, 4, 0, 2]
=============================================
#               solution Ran                #
=============================================
(0.32075351835254212,
 [(0, 110, 202), (2, 280, 161), (5, 30, 26), (7, 238, 163)],
 [1, 3, 4, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.86401583530228021,
 [(1, 85, 273), (3, 65, 109), (4, 47, 196), (7, 238, 163)],
 [4, 4, 4, 4])
    result of greedy part           #
=============================================
(1.1990294847916603,
 {(0, 79, 172): 4, (5, 92, 226): 4, (6, 70, 269): 4},
 [(5, 92, 226), (5, 92, 226), (0, 79, 172), (6, 70, 269), (5, 92, 226)],
 [4, 3, 4, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.1863519090517678,
 [(0, 79, 172), (5, 92, 226), (6, 70, 269), (1, 205, 137)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 4, 2, 0, 0, 0, 2, 1]
=============================================
#               solution Ran                #
=============================================
(0.39213177336545735,
 [(1, 205, 137), (2, 282, 28), (6, 70, 269), (7, 266, 228)],
 [4, 2, 2, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.1863519090517678,
 [(0, 79, 172), (1, 205, 137), (5, 92, 226), (6, 70, 269)],
 [4, 4, 4, 4])
=========
#           result of greedy part           #
=============================================
(1.1302695397943781,
 {(2, 281, 266): 4, (3, 244, 292): 4, (7, 247, 166): 4},
 [(7, 247, 166), (2, 281, 266), (7, 247, 166), (3, 244, 292), (7, 247, 166)],
 [4, 4, 3, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.0097029386910836,
 [(3, 244, 292), (7, 247, 166), (1, 100, 286), (2, 281, 266)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 1, 4, 2, 4, 1, 1, 0]
=============================================
#               solution Ran                #
=============================================
(0.67604955173403891,
 [(0, 206, 31),
  (1, 100, 286),
  (2, 281, 266),
  (3, 244, 292),
  (4, 16, 215),
  (5, 61, 56),
  (6, 179, 21)],
 [3, 1, 4, 2, 4, 1, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.0588896751184611,
 [(2, 281, 266), (3, 244, 292), (6, 179, 21), (7, 247, 166)],
 [4, 4, 4, 4])
=
#           result of greedy part           #
=============================================
(1.2100314675685206,
 {(5, 164, 42): 4, (6, 198, 123): 4},
 [(5, 164, 42), (6, 198, 123), (5, 164, 42), (6, 198, 123), (5, 164, 42)],
 [4, 4, 3, 3, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.0909731423721842,
 [(5, 164, 42), (6, 198, 123), (4, 26, 45), (1, 231, 272)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 4, 0, 0, 3, 4, 1, 1]
=============================================
#               solution Ran                #
=============================================
(0.77411873076955673,
 [(0, 116, 161),
  (1, 231, 272),
  (4, 26, 45),
  (5, 164, 42),
  (6, 198, 123),
  (7, 115, 147)],
 [3, 4, 3, 4, 1, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.0989377206304136,
 [(1, 231, 272), (2, 236, 213), (5, 164, 42), (6, 198, 123)],
 [4, 4, 4, 4])
=========
#           result of greedy part           #
=============================================
(1.1473560408665919,
 {(1, 98, 162): 4, (6, 258, 56): 4, (7, 279, 210): 4},
 [(1, 98, 162), (1, 98, 162), (7, 279, 210), (6, 258, 56), (1, 98, 162)],
 [4, 3, 4, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.105251493904337,
 [(1, 98, 162), (6, 258, 56), (0, 153, 92), (7, 279, 210)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 0, 0, 1, 4, 4, 3, 0]
=============================================
#               solution Ran                #
=============================================
(0.50392968255043014,
 [(0, 153, 92), (3, 233, 276), (4, 175, 297), (5, 100, 63), (6, 258, 56)],
 [3, 1, 4, 4, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.1260725557654185,
 [(1, 98, 162), (3, 233, 276), (6, 258, 56), (7, 279, 210)],
 [4, 4, 4, 4])
          result of greedy part           #
=============================================
(1.198235859001362,
 {(1, 201, 111): 4, (3, 188, 173): 4, (6, 70, 286): 2},
 [(3, 188, 173),
  (3, 188, 173),
  (3, 188, 173),
  (1, 201, 111),
  (6, 70, 286),
  (1, 201, 111)],
 [4, 3, 2, 4, 2, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.0979038339504641,
 [(3, 188, 173), (2, 35, 180), (1, 201, 111), (6, 70, 286)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[2, 0, 4, 3, 2, 0, 1, 4]
=============================================
#               solution Ran                #
=============================================
(0.74701276244854042,
 [(0, 102, 222),
  (2, 35, 180),
  (3, 188, 173),
  (4, 31, 117),
  (6, 70, 286),
  (7, 9, 175)],
 [2, 4, 3, 2, 1, 4])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.1021001403737787,
 [(1, 201, 111), (3, 188, 173), (4, 31, 117), (6, 70, 286)],
 [4, 4, 4, 4])
           result of greedy part           #
=============================================
(1.2409808923464065,
 {(4, 135, 69): 4, (5, 182, 131): 4},
 [(4, 135, 69), (4, 135, 69), (5, 182, 131), (4, 135, 69), (5, 182, 131)],
 [4, 3, 4, 2, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.0683649702964577,
 [(1, 295, 122), (3, 164, 244), (4, 135, 69), (5, 182, 131)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[2, 0, 0, 3, 0, 2, 1, 1]
=============================================
#               solution Ran                #
=============================================
(0.28514899963123036,
 [(0, 180, 1), (3, 164, 244), (5, 182, 131), (6, 197, 170), (7, 106, 284)],
 [2, 3, 2, 1, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.1039307571772663,
 [(4, 135, 69), (5, 182, 131), (6, 197, 170), (7, 106, 284)],
 [4, 4, 4, 4])
          #
=============================================
(1.5231328270068543,
 {(3, 65, 67): 4, (6, 103, 81): 4},
 [(6, 103, 81), (3, 65, 67), (6, 103, 81), (3, 65, 67), (6, 103, 81)],
 [4, 4, 3, 3, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.2028652514611742,
 [(1, 120, 211), (5, 28, 284), (6, 103, 81), (3, 65, 67)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 3, 1, 1, 3, 4, 0, 1]
=============================================
#               solution Ran                #
=============================================
(0.55714665766108962,
 [(0, 81, 225),
  (1, 120, 211),
  (2, 85, 130),
  (3, 65, 67),
  (4, 296, 253),
  (5, 28, 284),
  (7, 294, 45)],
 [3, 3, 1, 1, 3, 4, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.2409357548622271,
 [(2, 85, 130), (3, 65, 67), (5, 28, 284), (6, 103, 81)],
 [4, 4, 4, 4])
     result of greedy part           #
=============================================
(1.2467284116244362,
 {(0, 242, 131): 4, (6, 201, 11): 4},
 [(0, 242, 131), (0, 242, 131), (0, 242, 131), (6, 201, 11), (6, 201, 11)],
 [4, 3, 2, 4, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.94880056082252806,
 [(0, 242, 131), (6, 201, 11), (1, 72, 86), (7, 94, 118)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 3, 4, 1, 2, 2, 2, 2]
=============================================
#               solution Ran                #
=============================================
(0.4331336254183149,
 [(1, 72, 86),
  (2, 57, 288),
  (3, 226, 292),
  (4, 127, 125),
  (5, 149, 131),
  (6, 201, 11),
  (7, 94, 118)],
 [3, 4, 1, 2, 2, 2, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.98539700655402385,
 [(0, 242, 131), (2, 57, 288), (6, 201, 11), (7, 94, 118)],
 [4, 4, 4, 4])
=====
#           result of greedy part           #
=============================================
(1.1708530028907567,
 {(0, 155, 197): 4, (1, 54, 195): 4, (2, 252, 198): 4},
 [(1, 54, 195), (0, 155, 197), (1, 54, 195), (2, 252, 198), (2, 252, 198)],
 [4, 4, 3, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.1179353152330691,
 [(4, 269, 266), (1, 54, 195), (2, 252, 198), (0, 155, 197)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 3, 0, 2, 3, 2, 0, 3]
=============================================
#               solution Ran                #
=============================================
(0.7916605050715726,
 [(0, 155, 197),
  (1, 54, 195),
  (3, 259, 255),
  (4, 269, 266),
  (5, 246, 160),
  (7, 138, 292)],
 [3, 3, 2, 3, 2, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.1279130955572141,
 [(0, 155, 197), (1, 54, 195), (2, 252, 198), (5, 246, 160)],
 [4, 4, 4, 4])
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
[{'A': (0.78329230882937928,
        [(3, 65, 109), (7, 238, 163), (1, 85, 273), (2, 280, 161)],
        [4, 4, 3, 4]),
  'B': (0.833507320740839,
        [(3, 65, 109),
         (7, 238, 163),
         (4, 47, 196),
         (2, 280, 161),
         (1, 85, 273)],
        [4, 4, 3, 1, 4]),
  'Opt': (0.86401583530228021,
          [(1, 85, 273), (3, 65, 109), (4, 47, 196), (7, 238, 163)],
          [4, 4, 4, 4]),
  'Random': (0.32075351835254212,
             [(0, 110, 202), (2, 280, 161), (5, 30, 26), (7, 238, 163)],
             [1, 3, 4, 2])},
 {'A': (1.1021001403737787,
        [(3, 188, 173), (1, 201, 111), (4, 31, 117), (6, 70, 286)],
        [4, 4, 4, 4]),
  'B': (1.0979038339504641,
        [(3, 188, 173), (2, 35, 180), (1, 201, 111), (6, 70, 286)],
        [4, 4, 4, 4]),
  'Opt': (1.1021001403737787,
          [(1, 201, 111), (3, 188, 173), (4, 31, 117), (6, 70, 286)],
          [4, 4, 4, 4]),
  'Random': (0.74701276244854042,
             [(0, 102, 222),
              (2, 35, 180),
              (3, 188, 173),
              (4, 31, 117),
              (6, 70, 286),
              (7, 9, 175)],
             [2, 4, 3, 2, 1, 4])},
 {'A': (1.1279130955572141,
        [(1, 54, 195), (0, 155, 197), (2, 252, 198), (5, 246, 160)],
        [4, 4, 4, 4]),
  'B': (1.1179353152330691,
        [(4, 269, 266), (1, 54, 195), (2, 252, 198), (0, 155, 197)],
        [4, 4, 4, 4]),
  'Opt': (1.1279130955572141,
          [(0, 155, 197), (1, 54, 195), (2, 252, 198), (5, 246, 160)],
          [4, 4, 4, 4]),
  'Random': (0.7916605050715726,
             [(0, 155, 197),
              (1, 54, 195),
              (3, 259, 255),
              (4, 269, 266),
              (5, 246, 160),
              (7, 138, 292)],
             [3, 3, 2, 3, 2, 3])},
 {'A': (1.0588896751184611,
        [(7, 247, 166), (2, 281, 266), (3, 244, 292), (6, 179, 21)],
        [4, 4, 4, 4]),
  'B': (1.0097029386910836,
        [(3, 244, 292), (7, 247, 166), (1, 100, 286), (2, 281, 266)],
        [4, 4, 4, 4]),
  'Opt': (1.0588896751184611,
          [(2, 281, 266), (3, 244, 292), (6, 179, 21), (7, 247, 166)],
          [4, 4, 4, 4]),
  'Random': (0.67604955173403891,
             [(0, 206, 31),
              (1, 100, 286),
              (2, 281, 266),
              (3, 244, 292),
              (4, 16, 215),
              (5, 61, 56),
              (6, 179, 21)],
             [3, 1, 4, 2, 4, 1, 1])},
 {'A': (1.1039307571772663,
        [(4, 135, 69), (5, 182, 131), (7, 106, 284), (6, 197, 170)],
        [4, 4, 4, 4]),
  'B': (1.0683649702964577,
        [(1, 295, 122), (3, 164, 244), (4, 135, 69), (5, 182, 131)],
        [4, 4, 4, 4]),
  'Opt': (1.1039307571772663,
          [(4, 135, 69), (5, 182, 131), (6, 197, 170), (7, 106, 284)],
          [4, 4, 4, 4]),
  'Random': (0.28514899963123036,
             [(0, 180, 1),
              (3, 164, 244),
              (5, 182, 131),
              (6, 197, 170),
              (7, 106, 284)],
             [2, 3, 2, 1, 1])},
 {'A': (1.1863519090517678,
        [(5, 92, 226), (0, 79, 172), (6, 70, 269), (1, 205, 137)],
        [4, 4, 4, 4]),
  'B': (1.1863519090517678,
        [(0, 79, 172), (5, 92, 226), (6, 70, 269), (1, 205, 137)],
        [4, 4, 4, 4]),
  'Opt': (1.1863519090517678,
          [(0, 79, 172), (1, 205, 137), (5, 92, 226), (6, 70, 269)],
          [4, 4, 4, 4]),
  'Random': (0.39213177336545735,
             [(1, 205, 137), (2, 282, 28), (6, 70, 269), (7, 266, 228)],
             [4, 2, 2, 1])},
 {'A': (1.2409357548622271,
        [(6, 103, 81), (3, 65, 67), (2, 85, 130), (5, 28, 284)],
        [4, 4, 4, 4]),
  'B': (1.2028652514611742,
        [(1, 120, 211), (5, 28, 284), (6, 103, 81), (3, 65, 67)],
        [4, 4, 4, 4]),
  'Opt': (1.2409357548622271,
          [(2, 85, 130), (3, 65, 67), (5, 28, 284), (6, 103, 81)],
          [4, 4, 4, 4]),
  'Random': (0.55714665766108962,
             [(0, 81, 225),
              (1, 120, 211),
              (2, 85, 130),
              (3, 65, 67),
              (4, 296, 253),
              (5, 28, 284),
              (7, 294, 45)],
             [3, 3, 1, 1, 3, 4, 1])},
 {'A': (1.1260725557654185,
        [(1, 98, 162), (7, 279, 210), (6, 258, 56), (3, 233, 276)],
        [4, 4, 4, 4]),
  'B': (1.105251493904337,
        [(1, 98, 162), (6, 258, 56), (0, 153, 92), (7, 279, 210)],
        [4, 4, 4, 4]),
  'Opt': (1.1260725557654185,
          [(1, 98, 162), (3, 233, 276), (6, 258, 56), (7, 279, 210)],
          [4, 4, 4, 4]),
  'Random': (0.50392968255043014,
             [(0, 153, 92),
              (3, 233, 276),
              (4, 175, 297),
              (5, 100, 63),
              (6, 258, 56)],
             [3, 1, 4, 4, 3])},
 {'A': (0.98539700655402385,
        [(0, 242, 131), (6, 201, 11), (2, 57, 288), (7, 94, 118)],
        [4, 4, 4, 4]),
  'B': (0.94880056082252806,
        [(0, 242, 131), (6, 201, 11), (1, 72, 86), (7, 94, 118)],
        [4, 4, 4, 4]),
  'Opt': (0.98539700655402385,
          [(0, 242, 131), (2, 57, 288), (6, 201, 11), (7, 94, 118)],
          [4, 4, 4, 4]),
  'Random': (0.4331336254183149,
             [(1, 72, 86),
              (2, 57, 288),
              (3, 226, 292),
              (4, 127, 125),
              (5, 149, 131),
              (6, 201, 11),
              (7, 94, 118)],
             [3, 4, 1, 2, 2, 2, 2])},
 {'A': (1.0989377206304136,
        [(5, 164, 42), (6, 198, 123), (2, 236, 213), (1, 231, 272)],
        [4, 4, 4, 4]),
  'B': (1.0909731423721842,
        [(5, 164, 42), (6, 198, 123), (4, 26, 45), (1, 231, 272)],
        [4, 4, 4, 4]),
  'Opt': (1.0989377206304136,
          [(1, 231, 272), (2, 236, 213), (5, 164, 42), (6, 198, 123)],
          [4, 4, 4, 4]),
  'Random': (0.77411873076955673,
             [(0, 116, 161),
              (1, 231, 272),
              (4, 26, 45),
              (5, 164, 42),
              (6, 198, 123),
              (7, 115, 147)],
             [3, 4, 3, 4, 1, 1])}]
{'A': 1.081382092391995,
 'B': 1.0661656736523906,
 'Opt': 1.0894544450392851,
 'Random': 0.54810858070027735}

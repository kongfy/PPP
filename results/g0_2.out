=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 70,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 196, 70),
 (1, 270, 295),
 (2, 154, 66),
 (3, 209, 2),
 (4, 108, 171),
 (5, 115, 255),
 (6, 49, 280),
 (7, 66, 290)]
=============================================
#                 sensors                   #
=============================================
70 sensors generated.
[(0, 228, 188),
 (1, 167, 246),
 (2, 29, 27),
 (3, 206, 106),
 (4, 102, 170),
 (5, 79, 18),
 (6, 21, 31),
 (7, 101, 39),
 (8, 56, 4),
 (9, 133, 28),
 (10, 69, 6),
 (11, 293, 76),
 (12, 146, 221),
 (13, 235, 39),
 (14, 161, 32),
 (15, 71, 219),
 (16, 253, 64),
 (17, 281, 150),
 (18, 148, 283),
 (19, 80, 153),
 (20, 136, 144),
 (21, 31, 204),
 (22, 268, 126),
 (23, 159, 48),
 (24, 199, 280),
 (25, 291, 25),
 (26, 61, 187),
 (27, 34, 293),
 (28, 77, 130),
 (29, 133, 67),
 (30, 149, 201),
 (31, 179, 205),
 (32, 210, 225),
 (33, 18, 79),
 (34, 27, 214),
 (35, 291, 5),
 (36, 270, 178),
 (37, 265, 142),
 (38, 47, 243),
 (39, 284, 122),
 (40, 148, 238),
 (41, 80, 83),
 (42, 62, 123),
 (43, 243, 140),
 (44, 28, 58),
 (45, 98, 103),
 (46, 24, 99),
 (47, 202, 218),
 (48, 158, 230),
 (49, 283, 17),
 (50, 219, 256),
 (51, 284, 191),
 (52, 51, 178),
 (53, 281, 284),
 (54, 117, 62),
 (55, 215, 18),
 (56, 53, 22),
 (57, 140, 25),
 (58, 25, 201),
 (59, 103, 14),
 (60, 105, 109),
 (61, 300, 228),
 (62, 196, 179),
 (63, 20, 100),
 (64, 72, 167),
 (65, 6, 153),
 (66, 0, 251),
 (67, 250, 247),
 (68, 268, 115),
 (69, 175, 193)]
=============================================
#                sensor's P                 #
=============================================
70 sensor's P generated.
[0.11631299232919268,
 0.11389883886134783,
 0.10367671060083554,
 0.17752379462397566,
 0.18837054571364928,
 0.12946837074921774,
 0.19674339826531881,
 0.14470484745125847,
 0.1642850179344536,
 0.12541214654123303,
 0.17463081882695164,
 0.16976815482973337,
 0.17659847785610538,
 0.13990674976080897,
 0.1906218499891067,
 0.19581926734619465,
 0.16629475723911791,
 0.1806146980660186,
 0.19528763562248319,
 0.16350649505731407,
 0.17626926917528482,
 0.12294449815382384,
 0.14090041769727271,
 0.10807460264374817,
 0.16156786376649837,
 0.17002808630305066,
 0.15990122761229031,
 0.16551526057889671,
 0.11337189802598405,
 0.18818356195505584,
 0.13231267865895718,
 0.19213021999849142,
 0.1669207031994136,
 0.12624552098343594,
 0.17828634748861324,
 0.11048364844783486,
 0.13183216180319288,
 0.19574232064922187,
 0.17127699390253537,
 0.14433275207060606,
 0.19565384033590588,
 0.13816319725841428,
 0.11620205316792971,
 0.10497576457775837,
 0.10178558421787159,
 0.16166795115799765,
 0.18530834497460033,
 0.11557180490250502,
 0.17457511260030889,
 0.11522387430622832,
 0.18840464816711416,
 0.17682376301918526,
 0.12450311023206384,
 0.14743129239938596,
 0.13707472502671983,
 0.1679320897532468,
 0.17876079670106268,
 0.18384498960121409,
 0.19180993620013237,
 0.19156764829458622,
 0.1748087171379975,
 0.18305760129847792,
 0.19663813930007179,
 0.10583274686431408,
 0.13651912016086307,
 0.10489336076193667,
 0.18664508947755917,
 0.18874205170632974,
 0.17887785645331372,
 0.1141120436511808]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.0359527508867146,
 [(4, 108, 171), (2, 154, 66), (0, 196, 70), (5, 115, 255)],
 [4, 4, 4, 4])
=============================================
#           result=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 70,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 239, 57),
 (1, 225, 146),
 (2, 180, 104),
 (3, 192, 182),
 (4, 97, 248),
 (5, 25, 234),
 (6, 49, 18),
 (7, 71, 68)]
=============================================
#                 sensors                   #
=============================================
70 sensors generated.
[(0, 296, 253),
 (1, 188, 24),
 (2, 292, 198),
 (3, 100, 150),
 (4, 34, 244),
 (5, 254, 15),
 (6, 224, 144),
 (7, 35, 69),
 (8, 75, 19),
 (9, 8, 240),
 (10, 181, 48),
 (11, 149, 71),
 (12, 246, 188),
 (13, 140, 262),
 (14, 263, 236),
 (15, 185, 218),
 (16, 31, 277),
 (17, 5, 109),
 (18, 269, 255),
 (19, 211, 265),
 (20, 193, 150),
 (21, 242, 266),
 (22, 149, 98),
 (23, 222, 194),
 (24, 117, 284),
 (25, 197, 99),
 (26, 149, 68),
 (27, 97, 23),
 (28, 150, 150),
 (29, 148, 158),
 (30, 186, 272),
 (31, 86, 125),
 (32, 262, 56),
 (33, 227, 39),
 (34, 257, 166),
 (35, 284, 55),
 (36, 87, 38),
 (37, 88, 44),
 (38, 117, 201),
 (39, 202, 210),
 (40, 199, 296),
 (41, 49, 0),
 (42, 40, 15),
 (43, 175, 97),
 (44, 126, 230),
 (45, 130, 45),
 (46, 172, 139),
 (47, 55, 212),
 (48, 172, 277),
 (49, 56, 185),
 (50, 240, 131),
 (51, 126, 202),
 (52, 51, 89),
 (53, 257, 156),
 (54, 223, 267),
 (55, 156, 109),
 (56, 144, 201),
 (57, 27, 140),
 (58, 155, 257),
 (59, 152, 66),
 (60, 94, 159),
 (61, 194, 131),
 (62, 39, 284),
 (63, 222, 136),
 (64, 114, 40),
 (65, 190, 182),
 (66, 201, 229),
 (67, 60, 219),
 (68, 236, 192),
 (69, 28, 0)]
=============================================
#                sensor's P                 #
=============================================
70 sensor's P generated.
[0.14419720677703884,
 0.17164208521800986,
 0.10840220335568669,
 0.17863358391427828,
 0.14149340669666788,
 0.11696056149906997,
 0.16358339093916258,
 0.16810320081365673,
 0.12431766873710856,
 0.13036950191761679,
 0.16446410136496986,
 0.13773153052634413,
 0.10527713276011277,
 0.12418399055177683,
 0.15342752840465093,
 0.18019436002714667,
 0.19463796365271663,
 0.12075299528554843,
 0.16752317844406506,
 0.1712544049498711,
 0.11707726020358761,
 0.15708232441316702,
 0.13418540135141338,
 0.19633310406501822,
 0.11056115323765972,
 0.19338056235165405,
 0.10835012523516958,
 0.12030063227715178,
 0.17153268197551491,
 0.10257866224579121,
 0.17923089827328331,
 0.11519625548503906,
 0.18027775089392892,
 0.18285024106547837,
 0.13979432172721534,
 0.1940353652397655,
 0.1834169300961245,
 0.14209025857480442,
 0.15423757765483209,
 0.16756310787224021,
 0.19424576685658285,
 0.12458890293375777,
 0.11449720677748861,
 0.107360255478607,
 0.14412851437823126,
 0.17330344593916464,
 0.13980606494595732,
 0.18173456260834925,
 0.15883912410278611,
 0.12781077633596966,
 0.17802785654508657,
 0.15510822577199307,
 0.19120006484204896,
 0.13129167731460112,
 0.1388127429117493,
 0.11200551155681578,
 0.17360771026073862,
 0.1728453532089177,
 0.13944679442730187,
 0.14679653126056572,
 0.19206372240217098,
 0.14849337594417369,
 0.14167857186468413,
 0.14209420520282851,
 0.10761644143281129,
 0.12215132156462044,
 0.17360243793343436,
 0.10148762584986692,
 0.11678737185205497,
 0.15535439615302274]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.9384405971470748,
 [(1, 225, 146), (3, 192, 182), (2, 180, 104), (6, 49, 18)],
 [4, 4, 4, 4])
=============================================
#         =============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 70,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 98, 2),
 (1, 184, 74),
 (2, 51, 31),
 (3, 109, 91),
 (4, 232, 98),
 (5, 35, 127),
 (6, 229, 97),
 (7, 267, 16)]
=============================================
#                 sensors                   #
=============================================
70 sensors generated.
[(0, 179, 58),
 (1, 87, 219),
 (2, 85, 207),
 (3, 288, 151),
 (4, 33, 214),
 (5, 0, 158),
 (6, 6, 123),
 (7, 55, 254),
 (8, 65, 87),
 (9, 173, 217),
 (10, 224, 163),
 (11, 283, 174),
 (12, 141, 127),
 (13, 70, 191),
 (14, 97, 59),
 (15, 143, 27),
 (16, 51, 2),
 (17, 91, 163),
 (18, 130, 70),
 (19, 113, 98),
 (20, 221, 148),
 (21, 100, 186),
 (22, 154, 56),
 (23, 299, 199),
 (24, 150, 207),
 (25, 265, 229),
 (26, 96, 38),
 (27, 156, 261),
 (28, 259, 231),
 (29, 64, 53),
 (30, 170, 27),
 (31, 238, 69),
 (32, 293, 265),
 (33, 132, 142),
 (34, 84, 263),
 (35, 135, 7),
 (36, 8, 137),
 (37, 198, 269),
 (38, 147, 108),
 (39, 291, 120),
 (40, 208, 217),
 (41, 99, 239),
 (42, 54, 4),
 (43, 274, 231),
 (44, 227, 91),
 (45, 164, 93),
 (46, 140, 207),
 (47, 55, 19),
 (48, 253, 86),
 (49, 142, 154),
 (50, 126, 137),
 (51, 138, 71),
 (52, 285, 93),
 (53, 144, 70),
 (54, 121, 87),
 (55, 193, 238),
 (56, 3, 219),
 (57, 204, 273),
 (58, 99, 172),
 (59, 163, 3),
 (60, 24, 277),
 (61, 24, 277),
 (62, 208, 71),
 (63, 187, 197),
 (64, 115, 114),
 (65, 41, 71),
 (66, 3, 121),
 (67, 201, 178),
 (68, 18, 230),
 (69, 75, 272)]
=============================================
#                sensor's P                 #
=============================================
70 sensor's P generated.
[0.11997214041639176,
 0.12597928900815741,
 0.14118601547911092,
 0.13157260946073543,
 0.1594250809996689,
 0.10550681174855663,
 0.14343504399234228,
 0.10836025098961397,
 0.11689271566313594,
 0.13162059027601941,
 0.1551925615385355,
 0.14784023596280854,
 0.10021889503769578,
 0.16831420988012524,
 0.17049661525151488,
 0.19419991532439565,
 0.16834564095492222,
 0.12758252720436294,
 0.10376418999659417,
 0.13749445389880463,
 0.19580935836357774,
 0.14859565568536451,
 0.12313325748687898,
 0.18337335176657213,
 0.16685257642906437,
 0.1955095067363575,
 0.12687227065960197,
 0.19206633669130563,
 0.15271700290206308,
 0.12195575151964504,
 0.18412573233771787,
 0.18901379314912897,
 0.15222758067441933,
 0.17020019256088864,
 0.18216189424373963,
 0.11493784045047652,
 0.18371128323430269,
 0.10103046001644694,
 0.16158755648166193,
 0.14758625591069285,
 0.14885982287195765,
 0.19321380086036199,
 0.19497376626976079,
 0.11595334341626351,
 0.14983278450833845,
 0.10927147361094165,
 0.1331859075846242,
 0.15548538187325645,
 0.1148496192483098,
 0.13861576900365832,
 0.16928889258635774,
 0.13368804856886191,
 0.11697563376612773,
 0.13311247158102738,
 0.13778411597266454,
 0.17825890311093553,
 0.15507457282410303,
 0.15769809907310869,
 0.10756546453681795,
 0.18313359122626774,
 0.11360919958723187,
 0.11510383902542831,
 0.18276045826526666,
 0.10096228121246587,
 0.16331969724058945,
 0.15408427289427212,
 0.14846705357497469,
 0.12332641654975642,
 0.13926701199541197,
 0.13679708322024875]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 3, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.6176241530155486,
 [(3, 109, 91), (1, 184, 74), (6, 229, 97), (4, 232, 98)],
 [4, 4, 4, 4])
=============================================
#           result of greed=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 70,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 60, 4),
 (1, 218, 57),
 (2, 94, 232),
 (3, 73, 233),
 (4, 221, 198),
 (5, 29, 247),
 (6, 124, 249),
 (7, 176, 90)]
=============================================
#                 sensors                   #
=============================================
70 sensors generated.
[(0, 210, 219),
 (1, 251, 299),
 (2, 197, 87),
 (3, 47, 109),
 (4, 233, 285),
 (5, 49, 254),
 (6, 225, 232),
 (7, 66, 19),
 (8, 130, 126),
 (9, 103, 200),
 (10, 215, 148),
 (11, 141, 83),
 (12, 56, 190),
 (13, 172, 298),
 (14, 148, 115),
 (15, 203, 161),
 (16, 36, 128),
 (17, 58, 282),
 (18, 259, 200),
 (19, 177, 256),
 (20, 228, 10),
 (21, 277, 155),
 (22, 242, 0),
 (23, 254, 64),
 (24, 70, 33),
 (25, 220, 118),
 (26, 236, 218),
 (27, 273, 205),
 (28, 9, 79),
 (29, 75, 100),
 (30, 175, 99),
 (31, 243, 245),
 (32, 259, 125),
 (33, 224, 241),
 (34, 32, 71),
 (35, 71, 209),
 (36, 286, 52),
 (37, 98, 6),
 (38, 191, 218),
 (39, 30, 148),
 (40, 230, 176),
 (41, 177, 50),
 (42, 263, 240),
 (43, 208, 293),
 (44, 300, 169),
 (45, 50, 20),
 (46, 239, 76),
 (47, 53, 19),
 (48, 163, 24),
 (49, 49, 196),
 (50, 169, 110),
 (51, 274, 14),
 (52, 227, 262),
 (53, 167, 192),
 (54, 227, 123),
 (55, 69, 176),
 (56, 230, 19),
 (57, 109, 212),
 (58, 242, 205),
 (59, 256, 124),
 (60, 220, 148),
 (61, 256, 152),
 (62, 51, 274),
 (63, 9, 265),
 (64, 291, 128),
 (65, 296, 51),
 (66, 162, 208),
 (67, 183, 160),
 (68, 117, 211),
 (69, 84, 290)]
=============================================
#                sensor's P                 #
=============================================
70 sensor's P generated.
[0.12733411406952905,
 0.14985709212084011,
 0.14928952023021458,
 0.18391968367600497,
 0.13722492464294136,
 0.13538332535771058,
 0.16127659016614782,
 0.19086831740010324,
 0.17381587966307988,
 0.11531381798354329,
 0.1245010595702481,
 0.16324694984892241,
 0.10929524833532377,
 0.14710641863956131,
 0.18949348332662727,
 0.13198473322508128,
 0.18157104659556789,
 0.11333688601809441,
 0.19308454875103204,
 0.10315188264142991,
 0.17801760294267677,
 0.14213443421869146,
 0.1102535488641837,
 0.19319554233156988,
 0.16961042570267842,
 0.1925358941621215,
 0.18139192647414878,
 0.12437602082677374,
 0.15805628029047919,
 0.1740135973017147,
 0.16864840873248949,
 0.11698119524159724,
 0.16646371568891977,
 0.13459988035375747,
 0.10791994561973273,
 0.13280535054141807,
 0.12030898310548455,
 0.16409733612841254,
 0.12175368229438648,
 0.19201597872246723,
 0.12240771315636906,
 0.17126516925966939,
 0.17626043277757192,
 0.17026057187780239,
 0.12749555060489948,
 0.13361375991347485,
 0.13511194215367825,
 0.16172148432898523,
 0.18331249815622108,
 0.11478200849361034,
 0.14156905061636305,
 0.1306281726605808,
 0.15882836154441199,
 0.18315769799672499,
 0.18368790174312294,
 0.16078937549464983,
 0.16309944743628874,
 0.18082886924662225,
 0.1922360862072667,
 0.17665747594764802,
 0.11656326149944593,
 0.14714820773974854,
 0.15861572816886382,
 0.18929839180685279,
 0.13992185035172677,
 0.15346844521392261,
 0.13160419383366209,
 0.10551668750343154,
 0.11696882721932667,
 0.14610161909519276]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.5639734969893584,
 [(4, 221, 198), (7, 176, 90), (1, 218, 57), (3, 73, 233)],
 [4, 4, 4, 4])
=============================================
#       =============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 70,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 261, 273),
 (1, 54, 6),
 (2, 8, 12),
 (3, 297, 266),
 (4, 183, 277),
 (5, 7, 57),
 (6, 267, 136),
 (7, 139, 168)]
=============================================
#                 sensors                   #
=============================================
70 sensors generated.
[(0, 273, 50),
 (1, 191, 180),
 (2, 113, 211),
 (3, 82, 141),
 (4, 137, 105),
 (5, 281, 118),
 (6, 294, 142),
 (7, 174, 206),
 (8, 296, 164),
 (9, 107, 12),
 (10, 115, 163),
 (11, 234, 208),
 (12, 200, 235),
 (13, 144, 25),
 (14, 278, 69),
 (15, 20, 68),
 (16, 188, 86),
 (17, 4, 128),
 (18, 157, 10),
 (19, 191, 204),
 (20, 193, 20),
 (21, 162, 151),
 (22, 223, 210),
 (23, 277, 59),
 (24, 206, 290),
 (25, 199, 156),
 (26, 83, 188),
 (27, 9, 254),
 (28, 294, 20),
 (29, 178, 80),
 (30, 263, 289),
 (31, 215, 11),
 (32, 173, 46),
 (33, 245, 197),
 (34, 174, 99),
 (35, 56, 186),
 (36, 188, 30),
 (37, 142, 195),
 (38, 110, 27),
 (39, 79, 145),
 (40, 129, 139),
 (41, 109, 46),
 (42, 90, 216),
 (43, 85, 206),
 (44, 275, 88),
 (45, 40, 183),
 (46, 255, 270),
 (47, 221, 260),
 (48, 178, 260),
 (49, 264, 110),
 (50, 242, 6),
 (51, 189, 254),
 (52, 208, 105),
 (53, 249, 12),
 (54, 108, 281),
 (55, 117, 255),
 (56, 12, 187),
 (57, 222, 81),
 (58, 46, 258),
 (59, 106, 232),
 (60, 192, 233),
 (61, 52, 199),
 (62, 172, 258),
 (63, 259, 12),
 (64, 205, 102),
 (65, 251, 194),
 (66, 225, 161),
 (67, 215, 201),
 (68, 94, 17),
 (69, 8, 27)]
=============================================
#                sensor's P                 #
=============================================
70 sensor's P generated.
[0.14476880297434302,
 0.12046521538004108,
 0.17274504459379514,
 0.13440944289436257,
 0.14593470724048152,
 0.12689978769193122,
 0.1369041935168005,
 0.16427854842343304,
 0.18687779120115799,
 0.11835816478654704,
 0.1673649596835429,
 0.15288468990027626,
 0.19092456336366195,
 0.12185382206118656,
 0.15077668066252295,
 0.11234777194931722,
 0.1253327560964867,
 0.1899684338691332,
 0.11992676404319665,
 0.11512379018276485,
 0.10648426575304688,
 0.12364932808191656,
 0.11563505590774263,
 0.1338553326129924,
 0.13853628948324026,
 0.15700697116093776,
 0.10113254053816299,
 0.1161613398718384,
 0.16004318555357472,
 0.1738652712562011,
 0.13944862295943661,
 0.11703213672432844,
 0.16614080245148852,
 0.15269499819388543,
 0.19027556249125741,
 0.10608500911879841,
 0.10431767374202167,
 0.19818627453598353,
 0.10149425970428251,
 0.10689284987278429,
 0.17433260572948589,
 0.12312674361745481,
 0.15531471343745498,
 0.13823986863687127,
 0.17789856978398794,
 0.17401632058085892,
 0.12984652130062926,
 0.17828987574360933,
 0.1745676454962114,
 0.19869087826705073,
 0.12640553353682252,
 0.18607114203916186,
 0.18403929486612813,
 0.19102441698483116,
 0.14788003257295024,
 0.15950623251255427,
 0.10326265539074526,
 0.18147860975877192,
 0.17850280687861958,
 0.1639754751048777,
 0.1457618818425066,
 0.16912603063585119,
 0.17768974690039274,
 0.13583643524248118,
 0.18106520611190099,
 0.16378523572323556,
 0.1717996400669754,
 0.15953351926045883,
 0.15972199816706734,
 0.14581872604292109]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.2995593678007618,
 [(7, 139, 168), (4, 183, 277), (6, 267, 136), (0, 261, 273)],
 [4, 4, 4, 4])
=============================================
#         =============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 70,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 79, 151),
 (1, 41, 88),
 (2, 211, 126),
 (3, 45, 258),
 (4, 52, 278),
 (5, 179, 94),
 (6, 163, 267),
 (7, 277, 205)]
=============================================
#                 sensors                   #
=============================================
70 sensors generated.
[(0, 145, 143),
 (1, 275, 101),
 (2, 6, 159),
 (3, 297, 246),
 (4, 221, 223),
 (5, 193, 122),
 (6, 62, 183),
 (7, 237, 132),
 (8, 201, 258),
 (9, 207, 59),
 (10, 48, 113),
 (11, 205, 86),
 (12, 270, 237),
 (13, 264, 61),
 (14, 15, 85),
 (15, 173, 89),
 (16, 194, 50),
 (17, 98, 79),
 (18, 299, 113),
 (19, 136, 11),
 (20, 239, 264),
 (21, 158, 289),
 (22, 46, 185),
 (23, 117, 258),
 (24, 172, 109),
 (25, 200, 180),
 (26, 206, 128),
 (27, 292, 285),
 (28, 23, 212),
 (29, 121, 38),
 (30, 232, 296),
 (31, 43, 232),
 (32, 91, 288),
 (33, 60, 280),
 (34, 215, 236),
 (35, 221, 237),
 (36, 112, 193),
 (37, 148, 184),
 (38, 144, 143),
 (39, 261, 297),
 (40, 34, 30),
 (41, 72, 289),
 (42, 218, 209),
 (43, 68, 5),
 (44, 245, 144),
 (45, 93, 202),
 (46, 171, 249),
 (47, 277, 12),
 (48, 35, 294),
 (49, 41, 282),
 (50, 283, 103),
 (51, 113, 47),
 (52, 60, 63),
 (53, 272, 180),
 (54, 235, 171),
 (55, 0, 260),
 (56, 167, 241),
 (57, 47, 115),
 (58, 229, 54),
 (59, 147, 203),
 (60, 191, 145),
 (61, 52, 207),
 (62, 281, 125),
 (63, 36, 35),
 (64, 261, 274),
 (65, 174, 56),
 (66, 14, 224),
 (67, 18, 57),
 (68, 159, 273),
 (69, 287, 146)]
=============================================
#                sensor's P                 #
=============================================
70 sensor's P generated.
[0.14999586550173438,
 0.13665401620781636,
 0.18199403824056068,
 0.1103633258934144,
 0.12724488599274719,
 0.19294798113054082,
 0.1746173153292975,
 0.13646450408144475,
 0.13259191270624282,
 0.18983546033295043,
 0.14681878630454465,
 0.18025485353593729,
 0.1087828779566353,
 0.10252065544774404,
 0.19442468066651147,
 0.19638250312400315,
 0.15213419329296099,
 0.10273056516660381,
 0.19015824538740217,
 0.1535306197753083,
 0.10002339018360296,
 0.12463899477166537,
 0.16943823996250201,
 0.19031144770590006,
 0.17668516739870141,
 0.13812313420523764,
 0.14413285915865925,
 0.11467094558333984,
 0.10447999592593564,
 0.15445273119587472,
 0.17931704327496484,
 0.14195302858018655,
 0.11420544634131793,
 0.12663864384041676,
 0.16244282437425539,
 0.18940460070511198,
 0.11244065546649407,
 0.13116018424551265,
 0.10062251379903323,
 0.19555054348487386,
 0.13335093914919274,
 0.19654087274615492,
 0.18870486408884271,
 0.16330983921470696,
 0.11076470743990481,
 0.12050452822374201,
 0.1329699801364399,
 0.19513861802358551,
 0.16260618586169245,
 0.1714564652477252,
 0.17796194158831868,
 0.15549810240452025,
 0.12056383617744493,
 0.12242654053697864,
 0.18018221557263533,
 0.15354048731034348,
 0.15540370026773775,
 0.15267632596643999,
 0.19923784458349009,
 0.10683572818914153,
 0.19752815027615225,
 0.10150708367303544,
 0.13391110564635381,
 0.11383996059766983,
 0.11415238331194789,
 0.11252044239984826,
 0.11273352233131495,
 0.17351046166824052,
 0.16089373397529569,
 0.10884516739626568]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.686735489822061,
 [(2, 211, 126), (5, 179, 94), (6, 163, 267), (4, 52, 278)],
 [4, 4, 4, 4])
=============================================
#     =============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 70,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 101, 290),
 (1, 34, 160),
 (2, 36, 109),
 (3, 45, 273),
 (4, 107, 13),
 (5, 287, 123),
 (6, 41, 76),
 (7, 131, 5)]
=============================================
#                 sensors                   #
=============================================
70 sensors generated.
[(0, 31, 145),
 (1, 258, 300),
 (2, 236, 104),
 (3, 127, 118),
 (4, 1, 86),
 (5, 261, 12),
 (6, 215, 81),
 (7, 7, 276),
 (8, 111, 248),
 (9, 146, 239),
 (10, 111, 156),
 (11, 67, 191),
 (12, 284, 202),
 (13, 174, 1),
 (14, 238, 145),
 (15, 140, 145),
 (16, 73, 86),
 (17, 4, 4),
 (18, 204, 288),
 (19, 149, 26),
 (20, 198, 109),
 (21, 279, 222),
 (22, 212, 64),
 (23, 184, 17),
 (24, 210, 123),
 (25, 273, 200),
 (26, 84, 49),
 (27, 284, 225),
 (28, 267, 142),
 (29, 51, 254),
 (30, 56, 50),
 (31, 159, 34),
 (32, 67, 30),
 (33, 299, 214),
 (34, 57, 252),
 (35, 296, 104),
 (36, 216, 276),
 (37, 152, 16),
 (38, 8, 134),
 (39, 167, 198),
 (40, 227, 214),
 (41, 121, 99),
 (42, 41, 156),
 (43, 60, 195),
 (44, 29, 217),
 (45, 9, 129),
 (46, 139, 59),
 (47, 295, 109),
 (48, 104, 294),
 (49, 163, 86),
 (50, 174, 64),
 (51, 33, 230),
 (52, 16, 47),
 (53, 274, 157),
 (54, 107, 256),
 (55, 186, 116),
 (56, 65, 77),
 (57, 72, 223),
 (58, 238, 100),
 (59, 134, 170),
 (60, 160, 1),
 (61, 137, 56),
 (62, 125, 237),
 (63, 85, 73),
 (64, 149, 204),
 (65, 183, 12),
 (66, 136, 60),
 (67, 262, 62),
 (68, 3, 236),
 (69, 93, 244)]
=============================================
#                sensor's P                 #
=============================================
70 sensor's P generated.
[0.16779688042975743,
 0.12024566604311231,
 0.14612381101463798,
 0.14675301963518311,
 0.1795875079938134,
 0.19392107792470678,
 0.10390857882596997,
 0.14563733220628278,
 0.18213028867985623,
 0.14130302731440966,
 0.13713485405847387,
 0.18902126182848128,
 0.14797928726379772,
 0.10431297054706684,
 0.18404148437707821,
 0.11809954681283061,
 0.15555151339485088,
 0.11542657030880026,
 0.14118217709865896,
 0.12833590932909947,
 0.16940590417637758,
 0.18950800192566647,
 0.13961962108572362,
 0.12761464969103681,
 0.17621088399340418,
 0.18924515564801697,
 0.19857762376270996,
 0.14046098705878665,
 0.10130900663628789,
 0.10980955034569338,
 0.12159064408027132,
 0.19309865767499129,
 0.14781741644696891,
 0.11394657944675263,
 0.1824103210643099,
 0.15827340957197999,
 0.16441413125236246,
 0.15612515060532356,
 0.15413102474038784,
 0.14991704426480207,
 0.12166321287474707,
 0.15480423814976707,
 0.11166304638449517,
 0.1062856103700123,
 0.15405257642941877,
 0.12114143188674986,
 0.15121455245577758,
 0.16646815559685108,
 0.18606621774888896,
 0.17307331594382774,
 0.18165321013147928,
 0.19609863466645375,
 0.1828620533996842,
 0.17110391307570394,
 0.19731318419611721,
 0.13298716927189841,
 0.18977424324820086,
 0.15619998741779059,
 0.14430934297424147,
 0.15638064131673673,
 0.11353258195931459,
 0.17364848430828209,
 0.14006513186429079,
 0.13352777517138822,
 0.16170689919008674,
 0.17304904553340078,
 0.1532616622034178,
 0.16682077641865056,
 0.11509201854994572,
 0.17255856931289149]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.2018265108471127,
 [(1, 34, 160), (7, 131, 5), (6, 41, 76), (5, 287, 123)],
 [4, 4, 4, 4])
=============================================
#           result of g=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 70,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 214, 53),
 (1, 85, 200),
 (2, 166, 78),
 (3, 108, 206),
 (4, 197, 134),
 (5, 251, 46),
 (6, 45, 193),
 (7, 102, 87)]
=============================================
#                 sensors                   #
=============================================
70 sensors generated.
[(0, 186, 245),
 (1, 277, 196),
 (2, 207, 170),
 (3, 266, 72),
 (4, 202, 134),
 (5, 10, 285),
 (6, 27, 206),
 (7, 70, 85),
 (8, 243, 182),
 (9, 176, 194),
 (10, 231, 299),
 (11, 163, 134),
 (12, 39, 36),
 (13, 89, 92),
 (14, 70, 192),
 (15, 253, 59),
 (16, 45, 164),
 (17, 232, 207),
 (18, 193, 185),
 (19, 248, 110),
 (20, 26, 124),
 (21, 187, 294),
 (22, 108, 69),
 (23, 267, 118),
 (24, 74, 276),
 (25, 211, 134),
 (26, 293, 177),
 (27, 92, 72),
 (28, 206, 102),
 (29, 185, 262),
 (30, 155, 252),
 (31, 259, 211),
 (32, 73, 169),
 (33, 13, 125),
 (34, 104, 47),
 (35, 262, 255),
 (36, 160, 165),
 (37, 268, 249),
 (38, 32, 137),
 (39, 186, 60),
 (40, 17, 249),
 (41, 95, 69),
 (42, 66, 299),
 (43, 180, 205),
 (44, 86, 80),
 (45, 289, 143),
 (46, 194, 13),
 (47, 59, 68),
 (48, 71, 66),
 (49, 156, 183),
 (50, 12, 184),
 (51, 146, 59),
 (52, 298, 231),
 (53, 55, 256),
 (54, 11, 126),
 (55, 21, 56),
 (56, 210, 175),
 (57, 153, 38),
 (58, 125, 255),
 (59, 258, 234),
 (60, 52, 273),
 (61, 125, 4),
 (62, 204, 160),
 (63, 171, 281),
 (64, 190, 214),
 (65, 49, 217),
 (66, 214, 276),
 (67, 50, 97),
 (68, 106, 222),
 (69, 51, 2)]
=============================================
#                sensor's P                 #
=============================================
70 sensor's P generated.
[0.18056832974925233,
 0.12761595551650398,
 0.14224125953496003,
 0.18784758312113203,
 0.12110604488082331,
 0.1825446890563919,
 0.15457255218163329,
 0.15132887441053186,
 0.12778173419347974,
 0.11440095142816581,
 0.17026326997616598,
 0.18112994769846213,
 0.12791437684031892,
 0.11386817008671569,
 0.16180845394961985,
 0.148262217920099,
 0.12543047083377545,
 0.14189511198954574,
 0.14974053963024625,
 0.15698649196636841,
 0.1955025355243262,
 0.15410697140042465,
 0.19056022350856655,
 0.13174798676031546,
 0.13515964844514866,
 0.19489265851365972,
 0.17531195889647672,
 0.10508486974201624,
 0.1305405354707517,
 0.17866464532109891,
 0.15565925631933653,
 0.13998142117373455,
 0.15600607424809732,
 0.18159445324881127,
 0.15061342097852431,
 0.14596563025229312,
 0.1304860298018197,
 0.18897374973863801,
 0.11150009791330015,
 0.190725486099766,
 0.19276081837138764,
 0.11888954588926026,
 0.18918627250694783,
 0.16228409545742867,
 0.10453098133547643,
 0.14057078141171594,
 0.13977901103626536,
 0.12815835125855793,
 0.16597920096186902,
 0.11551460837792839,
 0.16040922567179164,
 0.18027161141088366,
 0.1130805325348261,
 0.13938113885156431,
 0.14313143310528215,
 0.12267352188248881,
 0.15773955752083102,
 0.10343545737566454,
 0.17195301647527117,
 0.18278299970670706,
 0.17792262478389054,
 0.18031150221241474,
 0.10319553452616299,
 0.13683086308071585,
 0.15653309506354507,
 0.11173559116931808,
 0.15117737285615682,
 0.11227256646310088,
 0.18551858652219269,
 0.10027461268918027]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.5627524797789343,
 [(4, 197, 134), (7, 102, 87), (6, 45, 193), (1, 85, 200)],
 [4, 4, 4, 4])
=============================================
#           re=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 70,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 66, 56),
 (1, 160, 68),
 (2, 48, 48),
 (3, 104, 232),
 (4, 285, 127),
 (5, 88, 217),
 (6, 53, 230),
 (7, 233, 127)]
=============================================
#                 sensors                   #
=============================================
70 sensors generated.
[(0, 237, 45),
 (1, 24, 49),
 (2, 195, 169),
 (3, 56, 32),
 (4, 241, 149),
 (5, 31, 283),
 (6, 201, 97),
 (7, 117, 78),
 (8, 294, 289),
 (9, 105, 56),
 (10, 42, 98),
 (11, 212, 280),
 (12, 188, 90),
 (13, 222, 55),
 (14, 278, 186),
 (15, 156, 65),
 (16, 28, 172),
 (17, 35, 83),
 (18, 84, 50),
 (19, 49, 260),
 (20, 2, 213),
 (21, 36, 82),
 (22, 71, 146),
 (23, 154, 116),
 (24, 154, 9),
 (25, 193, 92),
 (26, 57, 264),
 (27, 239, 28),
 (28, 8, 245),
 (29, 76, 189),
 (30, 219, 215),
 (31, 182, 208),
 (32, 21, 56),
 (33, 129, 143),
 (34, 254, 12),
 (35, 3, 40),
 (36, 91, 211),
 (37, 75, 21),
 (38, 103, 111),
 (39, 234, 153),
 (40, 281, 274),
 (41, 213, 108),
 (42, 270, 266),
 (43, 236, 255),
 (44, 94, 282),
 (45, 71, 82),
 (46, 240, 114),
 (47, 63, 258),
 (48, 124, 169),
 (49, 150, 184),
 (50, 173, 235),
 (51, 196, 262),
 (52, 291, 176),
 (53, 152, 107),
 (54, 63, 281),
 (55, 239, 97),
 (56, 174, 35),
 (57, 170, 37),
 (58, 17, 164),
 (59, 191, 282),
 (60, 106, 49),
 (61, 210, 230),
 (62, 12, 228),
 (63, 178, 230),
 (64, 122, 66),
 (65, 283, 263),
 (66, 122, 274),
 (67, 88, 79),
 (68, 191, 216),
 (69, 116, 20)]
=============================================
#                sensor's P                 #
=============================================
70 sensor's P generated.
[0.17332959342951548,
 0.12275774735819654,
 0.13536843720966402,
 0.12887849837671764,
 0.13560251894003922,
 0.10931640760661084,
 0.19139107893995369,
 0.14453788199878193,
 0.19330298934201409,
 0.16475902718232449,
 0.1843793758083293,
 0.11388376924867576,
 0.14471801271611204,
 0.10548939502535155,
 0.11523348846122711,
 0.17356585638337585,
 0.1751310454971394,
 0.19285097575229343,
 0.15341966760218315,
 0.1247856053640751,
 0.13812119505294956,
 0.14625892896128379,
 0.13204691015104808,
 0.19749434772249427,
 0.11901698221674173,
 0.13712065314833044,
 0.13387143555897585,
 0.11531432958422883,
 0.1943162865781487,
 0.12602338004450359,
 0.19755751955751252,
 0.15918477007678583,
 0.18623180477843931,
 0.12826038929504172,
 0.17496608566499244,
 0.16195256669621633,
 0.13727634329792018,
 0.12271753999899183,
 0.1015170712171438,
 0.15307739742937804,
 0.17440875564390884,
 0.1721722631207715,
 0.16074241165768957,
 0.13619787737734979,
 0.10510506322271904,
 0.17483465334337822,
 0.1758200513358523,
 0.19577002468707577,
 0.10803650609777268,
 0.10161108803928914,
 0.1692524701398716,
 0.11901237947658724,
 0.16183356088681655,
 0.1030685187278841,
 0.10777672843699282,
 0.12980103939047963,
 0.1543747333596632,
 0.11750001783212927,
 0.14102953259008155,
 0.18930537293685351,
 0.118862381095801,
 0.17962403069853633,
 0.10538005774947669,
 0.11523034617015922,
 0.10459514727641053,
 0.17582125958882555,
 0.17960716523019191,
 0.18124588668593475,
 0.16318710009480186,
 0.15779277941509817]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.6975963358161892,
 [(1, 160, 68), (0, 66, 56), (2, 48, 48), (7, 233, 127)],
 [4, 4, 4, 4])
=============================================
#           result of greedy=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 70,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 176, 131),
 (1, 157, 89),
 (2, 258, 12),
 (3, 228, 10),
 (4, 148, 237),
 (5, 209, 141),
 (6, 282, 26),
 (7, 142, 190)]
=============================================
#                 sensors                   #
=============================================
70 sensors generated.
[(0, 48, 139),
 (1, 211, 118),
 (2, 300, 249),
 (3, 135, 266),
 (4, 240, 193),
 (5, 236, 276),
 (6, 143, 67),
 (7, 299, 138),
 (8, 144, 203),
 (9, 143, 278),
 (10, 160, 139),
 (11, 284, 230),
 (12, 254, 146),
 (13, 273, 31),
 (14, 12, 80),
 (15, 33, 27),
 (16, 208, 211),
 (17, 113, 89),
 (18, 193, 119),
 (19, 219, 104),
 (20, 247, 230),
 (21, 292, 17),
 (22, 156, 261),
 (23, 147, 153),
 (24, 260, 12),
 (25, 176, 177),
 (26, 282, 96),
 (27, 135, 241),
 (28, 209, 56),
 (29, 59, 186),
 (30, 109, 115),
 (31, 194, 106),
 (32, 292, 122),
 (33, 274, 281),
 (34, 201, 224),
 (35, 46, 268),
 (36, 27, 139),
 (37, 185, 11),
 (38, 147, 121),
 (39, 92, 254),
 (40, 213, 248),
 (41, 142, 106),
 (42, 100, 298),
 (43, 67, 33),
 (44, 215, 55),
 (45, 151, 272),
 (46, 255, 47),
 (47, 64, 72),
 (48, 144, 206),
 (49, 18, 229),
 (50, 17, 35),
 (51, 139, 123),
 (52, 281, 28),
 (53, 254, 149),
 (54, 33, 195),
 (55, 68, 129),
 (56, 235, 235),
 (57, 207, 199),
 (58, 205, 157),
 (59, 288, 288),
 (60, 120, 111),
 (61, 240, 127),
 (62, 159, 223),
 (63, 130, 115),
 (64, 261, 58),
 (65, 200, 80),
 (66, 271, 61),
 (67, 60, 205),
 (68, 51, 10),
 (69, 151, 21)]
=============================================
#                sensor's P                 #
=============================================
70 sensor's P generated.
[0.16030405969138928,
 0.12199787846907049,
 0.10220430488922388,
 0.18064557401248649,
 0.12745903532967162,
 0.1231035916428085,
 0.14901027390868946,
 0.19374661944403301,
 0.1501654538377627,
 0.15953660572935074,
 0.18960987899154524,
 0.160761495638648,
 0.19289321427939199,
 0.14942281531437296,
 0.13335628149542605,
 0.13160751159841119,
 0.19770544298259751,
 0.14495140347393415,
 0.13731736175437945,
 0.18744697973675031,
 0.1094670941403233,
 0.14799621947683519,
 0.15832292454505709,
 0.17096882013831674,
 0.1939350835466688,
 0.13532029072361357,
 0.16466789975088419,
 0.10231231222306536,
 0.18242647131894349,
 0.14338214430044535,
 0.14964036938827921,
 0.10911251618728522,
 0.17098629602084481,
 0.15833365721974313,
 0.15411664313263129,
 0.11136346902020058,
 0.16310349796645984,
 0.12597209665372194,
 0.18175432102470818,
 0.1501376014504312,
 0.1610074289341476,
 0.19094333359798674,
 0.12461771459180765,
 0.10216291568859709,
 0.16984811934228555,
 0.1204070533346201,
 0.14927288037478093,
 0.15032557113355394,
 0.16703567429012678,
 0.11877211062141418,
 0.10920876083456892,
 0.13003445880149925,
 0.19070049135816111,
 0.12851658593150161,
 0.16682884555470359,
 0.1794058918957272,
 0.19347441161143189,
 0.14836298091508654,
 0.12264569084332522,
 0.12458130934548631,
 0.13037228452501765,
 0.18984448092884604,
 0.19816435798192233,
 0.13567412481245633,
 0.11229391504905656,
 0.19929765583250292,
 0.16956693973637965,
 0.15577594576123835,
 0.17380663262831686,
 0.15872007352829984]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.8108205827240673,
 [(0, 176, 131), (6, 282, 26), (5, 209, 141), (1, 157, 89)],
 [4, 4, 4, 4])
============================================= part           #
=============================================
(1.6975963358161892,
 [(1, 160, 68), (0, 66, 56), (2, 48, 48), (7, 233, 127)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.6975963358161892,
 [(1, 160, 68), (0, 66, 56), (2, 48, 48), (7, 233, 127)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.6975963358161892,
 {(0, 66, 56): 4, (1, 160, 68): 4, (2, 48, 48): 4, (7, 233, 127): 4},
 [(1, 160, 68), (0, 66, 56), (2, 48, 48), (7, 233, 127)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.7799407647597985,
 {(0, 66, 56): 4, (1, 160, 68): 4},
 [(1, 160, 68), (0, 66, 56), (0, 66, 56), (1, 160, 68), (0, 66, 56)],
 [4, 3, 4, 3, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.6975963358161892,
 [(0, 66, 56), (1, 160, 68), (2, 48, 48), (7, 233, 127)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 0, 2, 0, 1, 3, 4, 3]
=============================================
#               solution Ran                #
=============================================
(1.1793457091814921,
 [(0, 66, 56),
  (2, 48, 48),
  (4, 285, 127),
  (5, 88, 217),
  (6, 53, 230),
  (7, 233, 127)],
 [3, 2, 1, 3, 4, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.6975963358161892,
 [(0, 66, 56), (1, 160, 68), (2, 48, 48), (7, 233, 127)],
 [4, 4, 4, 4])
y part           #
=============================================
(1.6176241530155486,
 [(3, 109, 91), (1, 184, 74), (6, 229, 97), (4, 232, 98)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.6176241530155486,
 [(3, 109, 91), (1, 184, 74), (6, 229, 97), (4, 232, 98)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.7445979783503633,
 {(1, 184, 74): 4, (3, 109, 91): 4, (6, 229, 97): 4},
 [(3, 109, 91), (1, 184, 74), (3, 109, 91), (6, 229, 97), (3, 109, 91)],
 [4, 4, 3, 4, 1])
=============================================
#           result of greedy part           #
=============================================
(1.8427746610855225,
 {(1, 184, 74): 4, (3, 109, 91): 4},
 [(3, 109, 91), (3, 109, 91), (1, 184, 74), (3, 109, 91), (1, 184, 74)],
 [4, 3, 4, 2, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.6176241530155486,
 [(4, 232, 98), (3, 109, 91), (6, 229, 97), (1, 184, 74)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 0, 0, 2, 1, 3, 4, 2]
=============================================
#               solution Ran                #
=============================================
(0.83573222813618586,
 [(0, 98, 2),
  (3, 109, 91),
  (4, 232, 98),
  (5, 35, 127),
  (6, 229, 97),
  (7, 267, 16)],
 [3, 2, 1, 3, 4, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.6176241530155486,
 [(1, 184, 74), (3, 109, 91), (4, 232, 98), (6, 229, 97)],
 [4, 4, 4, 4])
 of greedy part           #
=============================================
(1.0359527508867146,
 [(4, 108, 171), (2, 154, 66), (0, 196, 70), (5, 115, 255)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.0359527508867146,
 [(4, 108, 171), (2, 154, 66), (0, 196, 70), (5, 115, 255)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.2392069387865221,
 {(2, 154, 66): 4, (4, 108, 171): 4},
 [(4, 108, 171), (2, 154, 66), (4, 108, 171), (2, 154, 66), (2, 154, 66)],
 [4, 4, 3, 3, 2])
=============================================
#           result of greedy part           #
=============================================
(1.2392069387865221,
 {(2, 154, 66): 4, (4, 108, 171): 4},
 [(4, 108, 171), (4, 108, 171), (2, 154, 66), (2, 154, 66), (2, 154, 66)],
 [4, 3, 4, 3, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.97848261539415504,
 [(2, 154, 66), (3, 209, 2), (4, 108, 171), (1, 270, 295)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 2, 3, 1, 3, 2, 4, 1]
=============================================
#               solution Ran                #
=============================================
(0.67931112546378247,
 [(1, 270, 295),
  (2, 154, 66),
  (3, 209, 2),
  (4, 108, 171),
  (5, 115, 255),
  (6, 49, 280),
  (7, 66, 290)],
 [2, 3, 1, 3, 2, 4, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.0359527508867146,
 [(0, 196, 70), (2, 154, 66), (4, 108, 171), (5, 115, 255)],
 [4, 4, 4, 4])
      result of greedy part           #
=============================================
(1.686735489822061,
 [(2, 211, 126), (5, 179, 94), (6, 163, 267), (4, 52, 278)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.686735489822061,
 [(2, 211, 126), (5, 179, 94), (6, 163, 267), (4, 52, 278)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.686735489822061,
 {(2, 211, 126): 4, (4, 52, 278): 4, (5, 179, 94): 4, (6, 163, 267): 4},
 [(2, 211, 126), (5, 179, 94), (6, 163, 267), (4, 52, 278)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.6693413651970823,
 {(2, 211, 126): 4, (5, 179, 94): 4},
 [(2, 211, 126), (5, 179, 94), (5, 179, 94), (2, 211, 126), (5, 179, 94)],
 [4, 4, 3, 3, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.686735489822061,
 [(2, 211, 126), (4, 52, 278), (5, 179, 94), (6, 163, 267)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 1, 0, 3, 3, 4, 1, 4]
=============================================
#               solution Ran                #
=============================================
(1.2321068620112454,
 [(1, 41, 88),
  (3, 45, 258),
  (4, 52, 278),
  (5, 179, 94),
  (6, 163, 267),
  (7, 277, 205)],
 [1, 3, 3, 4, 1, 4])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.686735489822061,
 [(2, 211, 126), (4, 52, 278), (5, 179, 94), (6, 163, 267)],
 [4, 4, 4, 4])
  result of greedy part           #
=============================================
(1.2995593678007618,
 [(7, 139, 168), (4, 183, 277), (6, 267, 136), (0, 261, 273)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.2995593678007618,
 [(7, 139, 168), (4, 183, 277), (6, 267, 136), (0, 261, 273)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.2995593678007618,
 {(0, 261, 273): 4, (4, 183, 277): 4, (6, 267, 136): 4, (7, 139, 168): 4},
 [(7, 139, 168), (4, 183, 277), (6, 267, 136), (0, 261, 273)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.3058674191343758,
 {(4, 183, 277): 4, (6, 267, 136): 4, (7, 139, 168): 4},
 [(7, 139, 168), (4, 183, 277), (7, 139, 168), (6, 267, 136), (4, 183, 277)],
 [4, 4, 3, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.2995593678007618,
 [(6, 267, 136), (4, 183, 277), (7, 139, 168), (0, 261, 273)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 3, 4, 3, 3, 0, 0, 3]
=============================================
#               solution Ran                #
=============================================
(0.60738073439043361,
 [(1, 54, 6), (2, 8, 12), (3, 297, 266), (4, 183, 277), (7, 139, 168)],
 [3, 4, 3, 3, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.2995593678007618,
 [(0, 261, 273), (4, 183, 277), (6, 267, 136), (7, 139, 168)],
 [4, 4, 4, 4])
sult of greedy part           #
=============================================
(1.5627524797789343,
 [(4, 197, 134), (7, 102, 87), (6, 45, 193), (1, 85, 200)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.5627524797789343,
 [(4, 197, 134), (7, 102, 87), (6, 45, 193), (1, 85, 200)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.6777531508000174,
 {(4, 197, 134): 4, (6, 45, 193): 4, (7, 102, 87): 4},
 [(4, 197, 134), (7, 102, 87), (6, 45, 193), (7, 102, 87), (7, 102, 87)],
 [4, 4, 4, 3, 1])
=============================================
#           result of greedy part           #
=============================================
(1.7881120559892738,
 {(4, 197, 134): 4, (7, 102, 87): 4},
 [(4, 197, 134), (7, 102, 87), (7, 102, 87), (4, 197, 134), (7, 102, 87)],
 [4, 4, 3, 3, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.4537990416115616,
 [(6, 45, 193), (4, 197, 134), (7, 102, 87), (5, 251, 46)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[4, 1, 2, 4, 0, 2, 0, 3]
=============================================
#               solution Ran                #
=============================================
(0.90603792017688534,
 [(0, 214, 53),
  (1, 85, 200),
  (2, 166, 78),
  (3, 108, 206),
  (5, 251, 46),
  (7, 102, 87)],
 [4, 1, 2, 4, 2, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.5627524797789343,
 [(1, 85, 200), (4, 197, 134), (6, 45, 193), (7, 102, 87)],
 [4, 4, 4, 4])
    result of greedy part           #
=============================================
(1.5639734969893584,
 [(4, 221, 198), (7, 176, 90), (1, 218, 57), (3, 73, 233)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.5639734969893584,
 [(4, 221, 198), (7, 176, 90), (1, 218, 57), (3, 73, 233)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.7006122309370288,
 {(1, 218, 57): 4, (4, 221, 198): 4, (7, 176, 90): 4},
 [(4, 221, 198), (7, 176, 90), (4, 221, 198), (1, 218, 57), (7, 176, 90)],
 [4, 4, 3, 4, 1])
=============================================
#           result of greedy part           #
=============================================
(1.7476234229021901,
 {(4, 221, 198): 4, (7, 176, 90): 4},
 [(4, 221, 198), (4, 221, 198), (7, 176, 90), (7, 176, 90), (4, 221, 198)],
 [4, 3, 4, 3, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.4241729385328064,
 [(5, 29, 247), (7, 176, 90), (0, 60, 4), (4, 221, 198)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 4, 1, 0, 3, 4, 2, 2]
=============================================
#               solution Ran                #
=============================================
(1.0765000260137567,
 [(1, 218, 57),
  (2, 94, 232),
  (4, 221, 198),
  (5, 29, 247),
  (6, 124, 249),
  (7, 176, 90)],
 [4, 1, 3, 4, 2, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.5639734969893584,
 [(1, 218, 57), (3, 73, 233), (4, 221, 198), (7, 176, 90)],
 [4, 4, 4, 4])

#           result of greedy part           #
=============================================
(1.8108205827240673,
 [(0, 176, 131), (6, 282, 26), (5, 209, 141), (1, 157, 89)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.8108205827240673,
 [(0, 176, 131), (6, 282, 26), (5, 209, 141), (1, 157, 89)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.8108205827240673,
 {(0, 176, 131): 4, (1, 157, 89): 4, (5, 209, 141): 4, (6, 282, 26): 4},
 [(0, 176, 131), (6, 282, 26), (5, 209, 141), (1, 157, 89)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.8108205827240673,
 {(0, 176, 131): 4, (1, 157, 89): 4, (5, 209, 141): 4, (6, 282, 26): 4},
 [(0, 176, 131), (6, 282, 26), (5, 209, 141), (1, 157, 89)],
 [4, 4, 4, 4])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.8108205827240673,
 [(5, 209, 141), (1, 157, 89), (6, 282, 26), (0, 176, 131)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 4, 2, 2, 4, 0, 0, 4]
=============================================
#               solution Ran                #
=============================================
(1.4780014887011974,
 [(1, 157, 89), (2, 258, 12), (3, 228, 10), (4, 148, 237), (7, 142, 190)],
 [4, 2, 2, 4, 4])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.8108205827240673,
 [(0, 176, 131), (1, 157, 89), (5, 209, 141), (6, 282, 26)],
 [4, 4, 4, 4])
reedy part           #
=============================================
(1.2018265108471127,
 [(1, 34, 160), (7, 131, 5), (6, 41, 76), (5, 287, 123)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.2018265108471127,
 [(1, 34, 160), (7, 131, 5), (6, 41, 76), (5, 287, 123)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.2018265108471127,
 {(1, 34, 160): 4, (5, 287, 123): 4, (6, 41, 76): 4, (7, 131, 5): 4},
 [(1, 34, 160), (7, 131, 5), (6, 41, 76), (5, 287, 123)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.2018265108471127,
 {(1, 34, 160): 4, (5, 287, 123): 4, (6, 41, 76): 4, (7, 131, 5): 4},
 [(1, 34, 160), (7, 131, 5), (6, 41, 76), (5, 287, 123)],
 [4, 4, 4, 4])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.2018265108471127,
 [(1, 34, 160), (6, 41, 76), (7, 131, 5), (5, 287, 123)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[1, 1, 0, 1, 4, 1, 2, 2]
=============================================
#               solution Ran                #
=============================================
(0.56293412130757425,
 [(0, 101, 290),
  (1, 34, 160),
  (3, 45, 273),
  (4, 107, 13),
  (5, 287, 123),
  (6, 41, 76),
  (7, 131, 5)],
 [1, 1, 1, 4, 1, 2, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.2018265108471127,
 [(1, 34, 160), (5, 287, 123), (6, 41, 76), (7, 131, 5)],
 [4, 4, 4, 4])
  result of greedy part           #
=============================================
(1.9384405971470748,
 [(1, 225, 146), (3, 192, 182), (2, 180, 104), (6, 49, 18)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.9384405971470748,
 [(1, 225, 146), (3, 192, 182), (2, 180, 104), (6, 49, 18)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(2.0435053196690744,
 {(1, 225, 146): 4, (2, 180, 104): 4, (3, 192, 182): 4},
 [(1, 225, 146), (3, 192, 182), (2, 180, 104), (1, 225, 146), (1, 225, 146)],
 [4, 4, 4, 3, 1])
=============================================
#           result of greedy part           #
=============================================
(2.0435053196690744,
 {(1, 225, 146): 4, (2, 180, 104): 4, (3, 192, 182): 4},
 [(1, 225, 146), (3, 192, 182), (2, 180, 104), (1, 225, 146), (1, 225, 146)],
 [4, 4, 4, 3, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.9384405971470753,
 [(2, 180, 104), (6, 49, 18), (3, 192, 182), (1, 225, 146)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 2, 0, 0, 3, 4, 2, 2]
=============================================
#               solution Ran                #
=============================================
(0.96692138445710063,
 [(0, 239, 57),
  (1, 225, 146),
  (4, 97, 248),
  (5, 25, 234),
  (6, 49, 18),
  (7, 71, 68)],
 [3, 2, 3, 4, 2, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.9384405971470748,
 [(1, 225, 146), (2, 180, 104), (3, 192, 182), (6, 49, 18)],
 [4, 4, 4, 4])
{'B': 800,
 'M': 70,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
[{'A': (1.8108205827240673,
        [(0, 176, 131), (6, 282, 26), (5, 209, 141), (1, 157, 89)],
        [4, 4, 4, 4]),
  'B': (1.8108205827240673,
        [(5, 209, 141), (1, 157, 89), (6, 282, 26), (0, 176, 131)],
        [4, 4, 4, 4]),
  'Opt': (1.8108205827240673,
          [(0, 176, 131), (1, 157, 89), (5, 209, 141), (6, 282, 26)],
          [4, 4, 4, 4]),
  'Random': (1.4780014887011974,
             [(1, 157, 89),
              (2, 258, 12),
              (3, 228, 10),
              (4, 148, 237),
              (7, 142, 190)],
             [4, 2, 2, 4, 4])},
 {'A': (1.2995593678007618,
        [(7, 139, 168), (4, 183, 277), (6, 267, 136), (0, 261, 273)],
        [4, 4, 4, 4]),
  'B': (1.2995593678007618,
        [(6, 267, 136), (4, 183, 277), (7, 139, 168), (0, 261, 273)],
        [4, 4, 4, 4]),
  'Opt': (1.2995593678007618,
          [(0, 261, 273), (4, 183, 277), (6, 267, 136), (7, 139, 168)],
          [4, 4, 4, 4]),
  'Random': (0.60738073439043361,
             [(1, 54, 6),
              (2, 8, 12),
              (3, 297, 266),
              (4, 183, 277),
              (7, 139, 168)],
             [3, 4, 3, 3, 3])},
 {'A': (1.6176241530155486,
        [(3, 109, 91), (1, 184, 74), (6, 229, 97), (4, 232, 98)],
        [4, 4, 4, 4]),
  'B': (1.6176241530155486,
        [(4, 232, 98), (3, 109, 91), (6, 229, 97), (1, 184, 74)],
        [4, 4, 4, 4]),
  'Opt': (1.6176241530155486,
          [(1, 184, 74), (3, 109, 91), (4, 232, 98), (6, 229, 97)],
          [4, 4, 4, 4]),
  'Random': (0.83573222813618586,
             [(0, 98, 2),
              (3, 109, 91),
              (4, 232, 98),
              (5, 35, 127),
              (6, 229, 97),
              (7, 267, 16)],
             [3, 2, 1, 3, 4, 2])},
 {'A': (1.6975963358161892,
        [(1, 160, 68), (0, 66, 56), (2, 48, 48), (7, 233, 127)],
        [4, 4, 4, 4]),
  'B': (1.6975963358161892,
        [(0, 66, 56), (1, 160, 68), (2, 48, 48), (7, 233, 127)],
        [4, 4, 4, 4]),
  'Opt': (1.6975963358161892,
          [(0, 66, 56), (1, 160, 68), (2, 48, 48), (7, 233, 127)],
          [4, 4, 4, 4]),
  'Random': (1.1793457091814921,
             [(0, 66, 56),
              (2, 48, 48),
              (4, 285, 127),
              (5, 88, 217),
              (6, 53, 230),
              (7, 233, 127)],
             [3, 2, 1, 3, 4, 3])},
 {'A': (1.5639734969893584,
        [(4, 221, 198), (7, 176, 90), (1, 218, 57), (3, 73, 233)],
        [4, 4, 4, 4]),
  'B': (1.4241729385328064,
        [(5, 29, 247), (7, 176, 90), (0, 60, 4), (4, 221, 198)],
        [4, 4, 4, 4]),
  'Opt': (1.5639734969893584,
          [(1, 218, 57), (3, 73, 233), (4, 221, 198), (7, 176, 90)],
          [4, 4, 4, 4]),
  'Random': (1.0765000260137567,
             [(1, 218, 57),
              (2, 94, 232),
              (4, 221, 198),
              (5, 29, 247),
              (6, 124, 249),
              (7, 176, 90)],
             [4, 1, 3, 4, 2, 2])},
 {'A': (1.0359527508867146,
        [(4, 108, 171), (2, 154, 66), (0, 196, 70), (5, 115, 255)],
        [4, 4, 4, 4]),
  'B': (0.97848261539415504,
        [(2, 154, 66), (3, 209, 2), (4, 108, 171), (1, 270, 295)],
        [4, 4, 4, 4]),
  'Opt': (1.0359527508867146,
          [(0, 196, 70), (2, 154, 66), (4, 108, 171), (5, 115, 255)],
          [4, 4, 4, 4]),
  'Random': (0.67931112546378247,
             [(1, 270, 295),
              (2, 154, 66),
              (3, 209, 2),
              (4, 108, 171),
              (5, 115, 255),
              (6, 49, 280),
              (7, 66, 290)],
             [2, 3, 1, 3, 2, 4, 1])},
 {'A': (1.9384405971470748,
        [(1, 225, 146), (3, 192, 182), (2, 180, 104), (6, 49, 18)],
        [4, 4, 4, 4]),
  'B': (1.9384405971470753,
        [(2, 180, 104), (6, 49, 18), (3, 192, 182), (1, 225, 146)],
        [4, 4, 4, 4]),
  'Opt': (1.9384405971470748,
          [(1, 225, 146), (2, 180, 104), (3, 192, 182), (6, 49, 18)],
          [4, 4, 4, 4]),
  'Random': (0.96692138445710063,
             [(0, 239, 57),
              (1, 225, 146),
              (4, 97, 248),
              (5, 25, 234),
              (6, 49, 18),
              (7, 71, 68)],
             [3, 2, 3, 4, 2, 2])},
 {'A': (1.686735489822061,
        [(2, 211, 126), (5, 179, 94), (6, 163, 267), (4, 52, 278)],
        [4, 4, 4, 4]),
  'B': (1.686735489822061,
        [(2, 211, 126), (4, 52, 278), (5, 179, 94), (6, 163, 267)],
        [4, 4, 4, 4]),
  'Opt': (1.686735489822061,
          [(2, 211, 126), (4, 52, 278), (5, 179, 94), (6, 163, 267)],
          [4, 4, 4, 4]),
  'Random': (1.2321068620112454,
             [(1, 41, 88),
              (3, 45, 258),
              (4, 52, 278),
              (5, 179, 94),
              (6, 163, 267),
              (7, 277, 205)],
             [1, 3, 3, 4, 1, 4])},
 {'A': (1.5627524797789343,
        [(4, 197, 134), (7, 102, 87), (6, 45, 193), (1, 85, 200)],
        [4, 4, 4, 4]),
  'B': (1.4537990416115616,
        [(6, 45, 193), (4, 197, 134), (7, 102, 87), (5, 251, 46)],
        [4, 4, 4, 4]),
  'Opt': (1.5627524797789343,
          [(1, 85, 200), (4, 197, 134), (6, 45, 193), (7, 102, 87)],
          [4, 4, 4, 4]),
  'Random': (0.90603792017688534,
             [(0, 214, 53),
              (1, 85, 200),
              (2, 166, 78),
              (3, 108, 206),
              (5, 251, 46),
              (7, 102, 87)],
             [4, 1, 2, 4, 2, 3])},
 {'A': (1.2018265108471127,
        [(1, 34, 160), (7, 131, 5), (6, 41, 76), (5, 287, 123)],
        [4, 4, 4, 4]),
  'B': (1.2018265108471127,
        [(1, 34, 160), (6, 41, 76), (7, 131, 5), (5, 287, 123)],
        [4, 4, 4, 4]),
  'Opt': (1.2018265108471127,
          [(1, 34, 160), (5, 287, 123), (6, 41, 76), (7, 131, 5)],
          [4, 4, 4, 4]),
  'Random': (0.56293412130757425,
             [(0, 101, 290),
              (1, 34, 160),
              (3, 45, 273),
              (4, 107, 13),
              (5, 287, 123),
              (6, 41, 76),
              (7, 131, 5)],
             [1, 1, 1, 4, 1, 2, 2])}]
{'A': 1.5415281764827822,
 'B': 1.510905763271134,
 'Opt': 1.5415281764827822,
 'Random': 0.95242715998396543}

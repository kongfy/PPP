=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 10,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
10 chargers generated:
[(0, 82, 264),
 (1, 133, 102),
 (2, 299, 46),
 (3, 290, 105),
 (4, 191, 84),
 (5, 268, 188),
 (6, 296, 167),
 (7, 152, 140),
 (8, 19, 300),
 (9, 71, 125)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 127, 247),
 (1, 107, 52),
 (2, 139, 289),
 (3, 207, 165),
 (4, 12, 36),
 (5, 88, 105),
 (6, 155, 282),
 (7, 282, 74),
 (8, 214, 300),
 (9, 11, 126),
 (10, 40, 295),
 (11, 154, 163),
 (12, 128, 60),
 (13, 126, 246),
 (14, 117, 21),
 (15, 176, 54),
 (16, 3, 212),
 (17, 120, 184),
 (18, 151, 7),
 (19, 125, 258),
 (20, 251, 17),
 (21, 125, 148),
 (22, 42, 194),
 (23, 65, 232),
 (24, 150, 190),
 (25, 273, 16),
 (26, 83, 151),
 (27, 75, 123),
 (28, 145, 204),
 (29, 32, 295),
 (30, 113, 96),
 (31, 148, 41),
 (32, 239, 201),
 (33, 121, 73),
 (34, 146, 61),
 (35, 145, 140),
 (36, 57, 225),
 (37, 245, 144),
 (38, 92, 222),
 (39, 61, 190),
 (40, 42, 234),
 (41, 85, 282),
 (42, 138, 293),
 (43, 169, 102),
 (44, 175, 198),
 (45, 238, 5),
 (46, 25, 160),
 (47, 72, 253),
 (48, 144, 17),
 (49, 163, 277)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.1204167286953317,
 0.14483356313942827,
 0.1453642624139764,
 0.17440672249382566,
 0.19510255921435141,
 0.14382804118010051,
 0.13252625172119281,
 0.17819092473849804,
 0.17440897599570582,
 0.10841317519974271,
 0.10540748640414305,
 0.18339246588444624,
 0.12841677833180479,
 0.14626029128579512,
 0.13124559132226329,
 0.11778539316461471,
 0.10065509496408515,
 0.16330932514680677,
 0.14181372913214194,
 0.17284799493704936,
 0.15016547296546753,
 0.12542025769180179,
 0.10320213890733244,
 0.13271375251526343,
 0.15031183915763974,
 0.17183491436350753,
 0.11646592116433623,
 0.13591983376002176,
 0.15602287086930919,
 0.1985054727343698,
 0.11477230739954375,
 0.16370778857822715,
 0.15753556310642947,
 0.17797003401399963,
 0.15549746377370685,
 0.11211661295263321,
 0.10788815330375491,
 0.12041099071115063,
 0.10636284594336838,
 0.12174163031448315,
 0.18985672020695968,
 0.11698031130482978,
 0.16140050937618403,
 0.16912682624497583,
 0.17648834715524184,
 0.19035338922693507,
 0.15631363911330814,
 0.14867051150490496,
 0.10491560212335053,
 0.16581023202503831]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.4126157175165373,
 [(0, 82, 264), (7, 152, 140), (1, 133, 102), (9, 71, 125)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.4126157175165373,
 [(0, 82, 264), (7, 152, 140), (1, 133, 102), (9, 71, 125)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.4126157175165373,
 [(0, 82, 264), (7, 152, 140), (1, 133, 102), (9, 71, 125)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.4126157175165373,
 {(0, 82, 264): 4, (1, 133, 102): 4, (7, 152, 140): 4, (9, 71, 125): 4},
 [(0, 82, 264), (7, 152, 140), (1, 133, 102), (9, 71, 125)],
 [4, 4, 4, 4])
=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 10,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
10 chargers generated:
[(0, 143, 43),
 (1, 21, 178),
 (2, 276, 190),
 (3, 206, 157),
 (4, 25, 268),
 (5, 178, 263),
 (6, 170, 283),
 (7, 176, 149),
 (8, 231, 239),
 (9, 39, 97)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 97, 267),
 (1, 77, 197),
 (2, 175, 260),
 (3, 118, 39),
 (4, 269, 95),
 (5, 292, 62),
 (6, 6, 207),
 (7, 111, 174),
 (8, 144, 212),
 (9, 171, 105),
 (10, 237, 7),
 (11, 184, 34),
 (12, 278, 25),
 (13, 29, 39),
 (14, 267, 114),
 (15, 18, 112),
 (16, 170, 128),
 (17, 188, 10),
 (18, 108, 36),
 (19, 252, 255),
 (20, 46, 47),
 (21, 263, 257),
 (22, 20, 135),
 (23, 261, 118),
 (24, 259, 146),
 (25, 296, 112),
 (26, 134, 20),
 (27, 32, 263),
 (28, 59, 187),
 (29, 130, 277),
 (30, 43, 181),
 (31, 74, 163),
 (32, 278, 173),
 (33, 24, 79),
 (34, 176, 81),
 (35, 217, 201),
 (36, 100, 52),
 (37, 24, 206),
 (38, 176, 163),
 (39, 28, 69),
 (40, 79, 254),
 (41, 55, 153),
 (42, 133, 268),
 (43, 296, 34),
 (44, 195, 136),
 (45, 278, 155),
 (46, 25, 169),
 (47, 151, 160),
 (48, 58, 107),
 (49, 179, 53)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.14531268956626317,
 0.12737900897786866,
 0.14407201226862745,
 0.112715447134901,
 0.1357305050047414,
 0.11656264270463414,
 0.18365135327648408,
 0.11593342773941269,
 0.12621986779815997,
 0.14229600969518441,
 0.12429235361831534,
 0.13032003877966045,
 0.12489049893997128,
 0.11653885063283762,
 0.11341295186349717,
 0.12212732866971564,
 0.14028998515939242,
 0.14672369784540262,
 0.19941842425073869,
 0.1827622256509826,
 0.13731993950174365,
 0.15404083324052059,
 0.18635077446473985,
 0.16365964406131622,
 0.16804709282380076,
 0.18252323095104633,
 0.12652354464961854,
 0.16217639647680968,
 0.1306828144228078,
 0.14233042557714543,
 0.18352222309532246,
 0.18898816781345229,
 0.19724052010037785,
 0.11729941517265516,
 0.19927216667763178,
 0.15125546480099744,
 0.16847563834669127,
 0.15579186659045069,
 0.10611269672878251,
 0.19581538621031827,
 0.17269946372605499,
 0.18370889507666338,
 0.14116843582621352,
 0.13204984943169457,
 0.18654908017733304,
 0.16157711308452588,
 0.113748508943883,
 0.17152423421978263,
 0.1193892005503676,
 0.18688404678642073]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.1415178525340055,
 [(1, 21, 178), (7, 176, 149), (9, 39, 97), (3, 206, 157)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1415178525340055,
 [(1, 21, 178), (7, 176, 149), (9, 39, 97), (3, 206, 157)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.1415178525340055,
 [(1, 21, 178), (7, 176, 149), (9, 39, 97), (3, 206, 157)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1415178525340055,
 {(1, 21, 178): 4, (3, 206, 157): 4, (7, 176, 149): 4, (9, 39, 97): 4},
 [(1, 21, 178), (7, 176, 149), (9, 39, 97), (3, 206, 157)],
 [4, 4, 4, 4])
=========================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 10,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
10 chargers generated:
[(0, 188, 277),
 (1, 95, 51),
 (2, 96, 234),
 (3, 56, 8),
 (4, 216, 52),
 (5, 181, 154),
 (6, 152, 36),
 (7, 168, 225),
 (8, 69, 176),
 (9, 144, 126)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 259, 251),
 (1, 277, 76),
 (2, 152, 107),
 (3, 7, 271),
 (4, 215, 295),
 (5, 85, 37),
 (6, 68, 236),
 (7, 281, 31),
 (8, 61, 253),
 (9, 172, 19),
 (10, 2, 79),
 (11, 119, 283),
 (12, 243, 134),
 (13, 167, 290),
 (14, 266, 201),
 (15, 181, 88),
 (16, 15, 229),
 (17, 291, 217),
 (18, 144, 143),
 (19, 269, 281),
 (20, 266, 198),
 (21, 268, 291),
 (22, 99, 96),
 (23, 183, 214),
 (24, 41, 101),
 (25, 187, 48),
 (26, 160, 63),
 (27, 248, 115),
 (28, 285, 267),
 (29, 182, 64),
 (30, 220, 255),
 (31, 149, 260),
 (32, 130, 212),
 (33, 147, 37),
 (34, 82, 10),
 (35, 106, 1),
 (36, 182, 288),
 (37, 259, 23),
 (38, 56, 158),
 (39, 151, 7),
 (40, 24, 6),
 (41, 71, 123),
 (42, 165, 135),
 (43, 215, 13),
 (44, 182, 15),
 (45, 260, 62),
 (46, 102, 216),
 (47, 99, 47),
 (48, 269, 34),
 (49, 273, 286)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.19250116865935399,
 0.12827182659208916,
 0.18255951682916061,
 0.14405490085925815,
 0.18604883491817351,
 0.16486556274085074,
 0.15379932507880018,
 0.1287319593585603,
 0.15902887623906117,
 0.10631538421812992,
 0.13458737537133383,
 0.17223552928056779,
 0.10691667541451602,
 0.11632994978954841,
 0.19932096361380447,
 0.15325377994079811,
 0.13085212267435034,
 0.13848629136897059,
 0.17746812234701267,
 0.10123036841471611,
 0.13551758674030456,
 0.14688480262708856,
 0.13722239518634866,
 0.11880333252233251,
 0.15116565459031431,
 0.11759213280604874,
 0.14392127818458297,
 0.19686024262839169,
 0.10989255132228432,
 0.17775777314822008,
 0.14869735505441556,
 0.17022354109387511,
 0.16191772488755365,
 0.15878783798849705,
 0.11636245096902263,
 0.11638332339529973,
 0.11531539126239325,
 0.10544837065926266,
 0.19183297273678721,
 0.1109709641303884,
 0.16740534028309823,
 0.12473593698174991,
 0.11519266552901511,
 0.18059525585385722,
 0.11829272822813042,
 0.13308543965374217,
 0.12149481223286079,
 0.19249043211774175,
 0.11716078121184148,
 0.1768173343062745]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.2640429017744712,
 [(6, 152, 36), (1, 95, 51), (4, 216, 52), (0, 188, 277)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.2640429017744712,
 [(6, 152, 36), (1, 95, 51), (4, 216, 52), (0, 188, 277)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.2640429017744712,
 [(6, 152, 36), (1, 95, 51), (4, 216, 52), (0, 188, 277)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.3305750316231375,
 {(1, 95, 51): 4, (4, 216, 52): 4, (6, 152, 36): 4},
 [(6, 152, 36), (1, 95, 51), (4, 216, 52), (6, 152, 36), (1, 95, 51)],
 [4, 4, 4, 3, 1])
==================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 10,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
10 chargers generated:
[(0, 211, 91),
 (1, 19, 103),
 (2, 100, 131),
 (3, 284, 148),
 (4, 208, 190),
 (5, 187, 280),
 (6, 46, 271),
 (7, 263, 236),
 (8, 239, 184),
 (9, 47, 81)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 232, 151),
 (1, 114, 186),
 (2, 189, 210),
 (3, 279, 85),
 (4, 231, 2),
 (5, 257, 66),
 (6, 283, 195),
 (7, 69, 149),
 (8, 11, 6),
 (9, 70, 31),
 (10, 218, 6),
 (11, 193, 226),
 (12, 179, 196),
 (13, 110, 291),
 (14, 190, 31),
 (15, 233, 218),
 (16, 224, 210),
 (17, 157, 31),
 (18, 234, 193),
 (19, 147, 242),
 (20, 183, 223),
 (21, 0, 281),
 (22, 125, 81),
 (23, 130, 52),
 (24, 61, 46),
 (25, 232, 272),
 (26, 131, 128),
 (27, 202, 159),
 (28, 232, 171),
 (29, 221, 210),
 (30, 151, 23),
 (31, 207, 186),
 (32, 36, 258),
 (33, 26, 21),
 (34, 66, 262),
 (35, 140, 112),
 (36, 135, 28),
 (37, 119, 244),
 (38, 37, 55),
 (39, 241, 222),
 (40, 125, 251),
 (41, 74, 266),
 (42, 154, 256),
 (43, 49, 43),
 (44, 8, 172),
 (45, 299, 162),
 (46, 67, 12),
 (47, 224, 217),
 (48, 168, 189),
 (49, 58, 148)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.17019368807549262,
 0.12872790778856447,
 0.11207714661878992,
 0.12597906042305429,
 0.12943478255943891,
 0.14402695956218356,
 0.15819241111333723,
 0.16469479626985406,
 0.16410889333796591,
 0.1185330913340288,
 0.10494180112045129,
 0.18089997228552274,
 0.111269836729467,
 0.18627008269410819,
 0.12684086739189337,
 0.11191389041174135,
 0.19089358341950038,
 0.10790034464643662,
 0.16965214917360102,
 0.17121299786264255,
 0.17314464932060852,
 0.10210807961706682,
 0.15245741942428218,
 0.13548143900947407,
 0.10679144953290862,
 0.19510367359733966,
 0.18392092338363003,
 0.14502173328244161,
 0.13713927249859259,
 0.19497086911089509,
 0.10916608588232786,
 0.19833453326569753,
 0.160881874326334,
 0.11556687454884076,
 0.11334174701168898,
 0.15718350415333068,
 0.17228365111292893,
 0.102364667963186,
 0.15544916671914061,
 0.11924212635741038,
 0.13182655502137733,
 0.15122722090307303,
 0.11643364935821636,
 0.13459348203467156,
 0.1610902485055542,
 0.13337136893156393,
 0.1263154983881988,
 0.11279423147808833,
 0.10160327368946324,
 0.18514121608871162]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.5552809281181341,
 [(4, 208, 190), (8, 239, 184), (7, 263, 236), (5, 187, 280)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.5552809281181341,
 [(4, 208, 190), (8, 239, 184), (7, 263, 236), (5, 187, 280)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.5552809281181341,
 [(4, 208, 190), (8, 239, 184), (7, 263, 236), (5, 187, 280)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(2.142252202519646,
 {(4, 208, 190): 4, (8, 239, 184): 4},
 [(4, 208, 190), (8, 239, 184), (4, 208, 190), (8, 239, 184), (4, 208, 190)],
 [4, 4, 3, 3, 2])
=============================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 10,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
10 chargers generated:
[(0, 139, 181),
 (1, 296, 296),
 (2, 127, 274),
 (3, 30, 298),
 (4, 134, 97),
 (5, 152, 36),
 (6, 264, 206),
 (7, 264, 42),
 (8, 269, 197),
 (9, 235, 143)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 72, 24),
 (1, 129, 282),
 (2, 285, 264),
 (3, 145, 76),
 (4, 32, 144),
 (5, 12, 214),
 (6, 297, 272),
 (7, 243, 61),
 (8, 172, 286),
 (9, 152, 138),
 (10, 147, 219),
 (11, 147, 54),
 (12, 153, 191),
 (13, 173, 26),
 (14, 262, 17),
 (15, 117, 45),
 (16, 168, 163),
 (17, 219, 106),
 (18, 128, 104),
 (19, 160, 148),
 (20, 132, 64),
 (21, 19, 182),
 (22, 84, 146),
 (23, 285, 183),
 (24, 209, 178),
 (25, 205, 224),
 (26, 49, 29),
 (27, 209, 191),
 (28, 181, 81),
 (29, 26, 212),
 (30, 218, 99),
 (31, 250, 18),
 (32, 229, 271),
 (33, 237, 296),
 (34, 22, 136),
 (35, 218, 75),
 (36, 60, 129),
 (37, 230, 212),
 (38, 242, 268),
 (39, 139, 84),
 (40, 49, 221),
 (41, 45, 170),
 (42, 250, 122),
 (43, 21, 95),
 (44, 214, 42),
 (45, 258, 179),
 (46, 193, 107),
 (47, 26, 265),
 (48, 10, 115),
 (49, 166, 187)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.13094191234247723,
 0.10478750912119054,
 0.16873289395425717,
 0.18983392757020429,
 0.10267398596596233,
 0.11038401391238416,
 0.19202724639009294,
 0.17471833699208777,
 0.14332090153080462,
 0.15681107472967917,
 0.17602837310634672,
 0.16898709801461514,
 0.17934647227787731,
 0.10353457159970959,
 0.1776012333711306,
 0.15441402616901112,
 0.16578590576419427,
 0.19568218009453148,
 0.10334700711477166,
 0.13462019139726134,
 0.16696346882471624,
 0.19773830060695857,
 0.11274429752182358,
 0.13517985651947137,
 0.17835994076703643,
 0.19420354397598472,
 0.18336683067415771,
 0.16192752400796021,
 0.14794322813435018,
 0.13683349908608658,
 0.15791180362992963,
 0.14983854826604132,
 0.1714720250927434,
 0.16547968620431805,
 0.11014461195448752,
 0.11616244523556679,
 0.11550110413667301,
 0.16295603409687986,
 0.15270515771207877,
 0.13958807798562389,
 0.16541078039137125,
 0.18768103605553998,
 0.18111645276495519,
 0.13638737359230166,
 0.15702645969126222,
 0.11788652428300769,
 0.16958839843216683,
 0.15708001000740107,
 0.13802679719991687,
 0.12191842088671805]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.2025260224125702,
 [(4, 134, 97), (5, 152, 36), (9, 235, 143), (0, 139, 181)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.2025260224125702,
 [(4, 134, 97), (5, 152, 36), (9, 235, 143), (0, 139, 181)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.2025260224125702,
 [(4, 134, 97), (5, 152, 36), (9, 235, 143), (0, 139, 181)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.2025260224125702,
 {(0, 139, 181): 4, (4, 134, 97): 4, (5, 152, 36): 4, (9, 235, 143): 4},
 [(4, 134, 97), (5, 152, 36), (9, 235, 143), (0, 139, 181)],
 [4, 4, =============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 10,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
10 chargers generated:
[(0, 256, 33),
 (1, 100, 90),
 (2, 148, 104),
 (3, 272, 129),
 (4, 71, 239),
 (5, 115, 222),
 (6, 70, 179),
 (7, 35, 137),
 (8, 8, 182),
 (9, 272, 232)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 142, 85),
 (1, 16, 156),
 (2, 113, 150),
 (3, 215, 195),
 (4, 89, 175),
 (5, 46, 268),
 (6, 220, 141),
 (7, 57, 142),
 (8, 227, 181),
 (9, 253, 69),
 (10, 156, 271),
 (11, 148, 172),
 (12, 185, 71),
 (13, 44, 106),
 (14, 295, 241),
 (15, 201, 300),
 (16, 283, 196),
 (17, 258, 104),
 (18, 263, 200),
 (19, 20, 165),
 (20, 249, 135),
 (21, 86, 178),
 (22, 34, 233),
 (23, 228, 291),
 (24, 246, 94),
 (25, 244, 249),
 (26, 107, 83),
 (27, 291, 254),
 (28, 300, 124),
 (29, 25, 22),
 (30, 277, 128),
 (31, 294, 164),
 (32, 290, 142),
 (33, 175, 285),
 (34, 64, 169),
 (35, 286, 87),
 (36, 132, 160),
 (37, 17, 259),
 (38, 193, 270),
 (39, 191, 56),
 (40, 29, 260),
 (41, 166, 193),
 (42, 214, 25),
 (43, 89, 66),
 (44, 157, 126),
 (45, 124, 43),
 (46, 109, 190),
 (47, 136, 21),
 (48, 280, 238),
 (49, 149, 197)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.1098875264117458,
 0.14423830024965656,
 0.10686070547048361,
 0.18036212492673032,
 0.14648073420746324,
 0.17354897971083835,
 0.11444180088856117,
 0.1622968672684012,
 0.17538836634116306,
 0.17928337293886465,
 0.17816439543743393,
 0.12600313208132619,
 0.11657641562361624,
 0.11659522952575425,
 0.17774111774690898,
 0.19165753285560796,
 0.19800325058721832,
 0.16374193378766436,
 0.16569278817297603,
 0.16424484152763705,
 0.12735654902447271,
 0.11185502749481441,
 0.17885425416633471,
 0.11072320756953158,
 0.13854814211790378,
 0.12420136987556554,
 0.19075641286435741,
 0.13685769374977885,
 0.1884079146449513,
 0.19876619080171717,
 0.12981670857303021,
 0.15533623320013487,
 0.18318736288704204,
 0.17567809577413954,
 0.10611815480757013,
 0.14580872176176332,
 0.15707687503306605,
 0.19188431749762974,
 0.12249386520035911,
 0.13075145546308059,
 0.12568496903064066,
 0.12880121845427328,
 0.10375993322438266,
 0.16425647607906108,
 0.1170841213188131,
 0.14923421805245379,
 0.16396864718909648,
 0.15777466145440777,
 0.139080774390546,
 0.13846167335100451]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.3159118095861095,
 [(3, 272, 129), (6, 70, 179), (9, 272, 232), (1, 100, 90)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.3159118095861095,
 [(3, 272, 129), (6, 70, 179), (9, 272, 232), (1, 100, 90)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.3159118095861095,
 [(3, 272, 129), (6, 70, 179), (9, 272, 232), (1, 100, 90)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.4112659229392484,
 {(3, 272, 129): 4, (6, 70, 179): 4, (9, 272, 232): 4},
 [(3, 272, 129), (6, 70, 179), (9, 272, 232), (3, 272, 129), (3, 272, 129)],
 [4, 4, 4, =============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 10,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
10 chargers generated:
[(0, 278, 217),
 (1, 260, 255),
 (2, 85, 160),
 (3, 237, 204),
 (4, 14, 222),
 (5, 107, 293),
 (6, 142, 244),
 (7, 90, 165),
 (8, 289, 74),
 (9, 71, 23)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 17, 91),
 (1, 132, 232),
 (2, 130, 105),
 (3, 254, 64),
 (4, 265, 235),
 (5, 153, 153),
 (6, 90, 288),
 (7, 34, 166),
 (8, 224, 229),
 (9, 75, 185),
 (10, 78, 167),
 (11, 135, 138),
 (12, 156, 225),
 (13, 28, 200),
 (14, 81, 208),
 (15, 271, 256),
 (16, 93, 12),
 (17, 87, 128),
 (18, 261, 234),
 (19, 120, 59),
 (20, 164, 173),
 (21, 61, 129),
 (22, 43, 36),
 (23, 105, 194),
 (24, 257, 21),
 (25, 211, 292),
 (26, 46, 15),
 (27, 42, 2),
 (28, 151, 239),
 (29, 266, 4),
 (30, 10, 129),
 (31, 284, 101),
 (32, 235, 188),
 (33, 31, 262),
 (34, 22, 2),
 (35, 20, 85),
 (36, 26, 72),
 (37, 93, 297),
 (38, 46, 232),
 (39, 128, 74),
 (40, 264, 58),
 (41, 175, 107),
 (42, 197, 214),
 (43, 85, 137),
 (44, 226, 76),
 (45, 11, 70),
 (46, 76, 106),
 (47, 38, 199),
 (48, 144, 174),
 (49, 165, 163)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.18456717698462749,
 0.12073449422972381,
 0.19965364637738983,
 0.1003875777520679,
 0.17746968688127535,
 0.12383638349363106,
 0.12036046805021239,
 0.12030245541542151,
 0.18980956800813578,
 0.1232819538941978,
 0.15493573537526342,
 0.17287580319995904,
 0.19863660144325268,
 0.17808996871957303,
 0.12386298230526327,
 0.15252223078856486,
 0.10047986749747954,
 0.18141959993277823,
 0.1798687027323938,
 0.17945637733811329,
 0.11252108019654321,
 0.15754028394347749,
 0.1189590704652269,
 0.129591803831685,
 0.16117753357117709,
 0.15248530038271932,
 0.13395266933259453,
 0.11241957639565037,
 0.16610343629543245,
 0.1747280932738321,
 0.19000087404176758,
 0.18529754988044536,
 0.18921020314894943,
 0.17383511538945734,
 0.18495443416184104,
 0.11345633106803393,
 0.18488182764024852,
 0.10142612913076876,
 0.12770634344842036,
 0.1125203286499801,
 0.12090025799759467,
 0.18785128971296253,
 0.10974010438001519,
 0.1831842640201492,
 0.11025349949606954,
 0.17192278616213813,
 0.12915249372593712,
 0.18614288744695029,
 0.17575425006466441,
 0.1195022011855284]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.3811612115991407,
 [(2, 85, 160), (7, 90, 165), (6, 142, 244), (1, 260, 255)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.3811612115991407,
 [(2, 85, 160), (7, 90, 165), (6, 142, 244), (1, 260, 255)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.3811612115991407,
 [(2, 85, 160), (7, 90, 165), (6, 142, 244), (1, 260, 255)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.4590675580864463,
 {(2, 85, 160): 4, (6, 142, 244): 4, (7, 90, 165): 4},
 [(2, 85, 160), (7, 90, 165), (6, 142, 244), (2, 85, 160), (6, 142, 244)],
 [4, 4, 4, 3, 1])
==============================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 10,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
10 chargers generated:
[(0, 108, 285),
 (1, 142, 131),
 (2, 210, 233),
 (3, 172, 295),
 (4, 158, 43),
 (5, 2, 13),
 (6, 279, 141),
 (7, 252, 45),
 (8, 50, 210),
 (9, 245, 246)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 98, 227),
 (1, 9, 205),
 (2, 84, 22),
 (3, 112, 252),
 (4, 15, 58),
 (5, 96, 9),
 (6, 125, 72),
 (7, 75, 220),
 (8, 263, 299),
 (9, 122, 136),
 (10, 178, 103),
 (11, 164, 5),
 (12, 152, 293),
 (13, 181, 248),
 (14, 4, 70),
 (15, 162, 179),
 (16, 4, 128),
 (17, 149, 59),
 (18, 223, 147),
 (19, 108, 171),
 (20, 257, 114),
 (21, 221, 192),
 (22, 184, 173),
 (23, 136, 128),
 (24, 239, 197),
 (25, 215, 169),
 (26, 80, 113),
 (27, 77, 231),
 (28, 95, 184),
 (29, 27, 81),
 (30, 152, 243),
 (31, 240, 71),
 (32, 20, 176),
 (33, 84, 86),
 (34, 264, 19),
 (35, 14, 42),
 (36, 268, 2),
 (37, 224, 228),
 (38, 194, 102),
 (39, 269, 207),
 (40, 141, 48),
 (41, 274, 120),
 (42, 142, 296),
 (43, 27, 220),
 (44, 20, 271),
 (45, 103, 250),
 (46, 67, 189),
 (47, 255, 112),
 (48, 144, 26),
 (49, 289, 76)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.13194045698793577,
 0.17498676012252004,
 0.11257930384367287,
 0.15709875406908655,
 0.17074009813975355,
 0.19829341219212476,
 0.19547379293428102,
 0.1023472338125155,
 0.15538859435433483,
 0.14396341979701777,
 0.16147303960912654,
 0.10958017791193297,
 0.1771497380202301,
 0.1788918929546725,
 0.19075395182486937,
 0.10049986237904893,
 0.1417677592412209,
 0.12964331656813002,
 0.10897559021778187,
 0.12920668078826153,
 0.11605458134911599,
 0.17612183412638663,
 0.16216262446586807,
 0.13394920765213192,
 0.11365576063751461,
 0.1028435215087984,
 0.13952885792138711,
 0.17618937860096848,
 0.14367269590265141,
 0.19064818920282112,
 0.12721263176758932,
 0.18017399410813623,
 0.19195593102066927,
 0.11243663006215077,
 0.11352016590818872,
 0.19793813915570638,
 0.15014124986186705,
 0.14607125144526875,
 0.18618785708084243,
 0.15041193230314084,
 0.10073631936917127,
 0.17733442597178453,
 0.16362614228770125,
 0.14242602326842366,
 0.169025297646133,
 0.17529176795502277,
 0.19922948479219821,
 0.14041950324397434,
 0.17015651611955279,
 0.1598206492126894]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.0982985383201356,
 [(1, 142, 131), (8, 50, 210), (4, 158, 43), (2, 210, 233)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0982985383201356,
 [(1, 142, 131), (8, 50, 210), (4, 158, 43), (2, 210, 233)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.0982985383201356,
 [(1, 142, 131), (8, 50, 210), (4, 158, 43), (2, 210, 233)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0982985383201356,
 {(1, 142, 131): 4, (2, 210, 233): 4, (4, 158, 43): 4, (8, 50, 210): 4},
 [(1, 142, 131), (8, 50, 210), (4, 158, 43), (2, 210, 233)],
 [4, 4, 4, 4])
========================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 10,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
10 chargers generated:
[(0, 123, 105),
 (1, 189, 277),
 (2, 7, 287),
 (3, 146, 266),
 (4, 202, 150),
 (5, 6, 2),
 (6, 192, 221),
 (7, 246, 93),
 (8, 189, 88),
 (9, 156, 180)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 55, 29),
 (1, 36, 230),
 (2, 255, 1),
 (3, 295, 160),
 (4, 194, 111),
 (5, 68, 86),
 (6, 262, 163),
 (7, 288, 255),
 (8, 270, 235),
 (9, 148, 225),
 (10, 246, 3),
 (11, 209, 116),
 (12, 239, 287),
 (13, 259, 143),
 (14, 144, 233),
 (15, 136, 297),
 (16, 113, 6),
 (17, 18, 275),
 (18, 41, 15),
 (19, 29, 81),
 (20, 276, 292),
 (21, 28, 251),
 (22, 36, 130),
 (23, 281, 55),
 (24, 289, 187),
 (25, 178, 96),
 (26, 71, 115),
 (27, 247, 5),
 (28, 20, 176),
 (29, 146, 178),
 (30, 261, 273),
 (31, 183, 93),
 (32, 263, 276),
 (33, 143, 258),
 (34, 31, 151),
 (35, 162, 233),
 (36, 4, 16),
 (37, 135, 146),
 (38, 229, 151),
 (39, 258, 267),
 (40, 161, 214),
 (41, 208, 45),
 (42, 117, 90),
 (43, 13, 3),
 (44, 200, 15),
 (45, 131, 150),
 (46, 87, 89),
 (47, 169, 110),
 (48, 162, 198),
 (49, 278, 226)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.17407956089903703,
 0.13943802964727478,
 0.15080214577752279,
 0.18492536510666657,
 0.18199113145684928,
 0.16462720033594533,
 0.12268088698786375,
 0.18745359939420231,
 0.15055889854081697,
 0.17180895619885994,
 0.13313630270986093,
 0.14659930466827653,
 0.1549553751270569,
 0.12380655807475657,
 0.13724092835012555,
 0.14208252881021491,
 0.17990347627073588,
 0.1222052511818713,
 0.15486032097589192,
 0.190302810726204,
 0.1332438581151125,
 0.1422618708957657,
 0.12234304571587315,
 0.13286734825180119,
 0.15317689510725657,
 0.16835749496721136,
 0.12833409635405202,
 0.19959169581696287,
 0.17455917063314075,
 0.15916549992108586,
 0.1741004392847626,
 0.1820840951509127,
 0.19381012943042064,
 0.19826519147213051,
 0.19754934028831242,
 0.1756206413677405,
 0.18368178252063938,
 0.15853357134222379,
 0.1769080749638767,
 0.14192286117028657,
 0.18689770827791066,
 0.10337668559567313,
 0.12601381734203232,
 0.14373051777898765,
 0.1784904468773727,
 0.11262981482514547,
 0.10835475600070331,
 0.12610023383908375,
 0.12261530000100462,
 0.10128239301071283]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.1601086904942872,
 [(8, 189, 88), (9, 156, 180), (0, 123, 105), (4, 202, 150)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1601086904942872,
 [(8, 189, 88), (9, 156, 180), (0, 123, 105), (4, 202, 150)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.1601086904942872,
 [(8, 189, 88), (9, 156, 180), (0, 123, 105), (4, 202, 150)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1601086904942872,
 {(0, 123, 105): 4, (4, 202, 150): 4, (8, 189, 88): 4, (9, 156, 180): 4},
 [(8, 189, 88), (9, 156, 180), (0, 123, 105), (4, 202, 150)],
 [4, 4, 4, 4])
=====================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 10,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
10 chargers generated:
[(0, 232, 115),
 (1, 286, 58),
 (2, 40, 231),
 (3, 42, 239),
 (4, 229, 261),
 (5, 136, 251),
 (6, 0, 37),
 (7, 147, 18),
 (8, 63, 294),
 (9, 147, 203)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 147, 218),
 (1, 172, 166),
 (2, 226, 160),
 (3, 41, 150),
 (4, 235, 143),
 (5, 235, 273),
 (6, 5, 161),
 (7, 79, 7),
 (8, 260, 63),
 (9, 136, 49),
 (10, 273, 280),
 (11, 188, 124),
 (12, 282, 69),
 (13, 217, 224),
 (14, 85, 71),
 (15, 119, 123),
 (16, 34, 126),
 (17, 248, 281),
 (18, 114, 33),
 (19, 71, 200),
 (20, 207, 61),
 (21, 142, 166),
 (22, 23, 252),
 (23, 50, 28),
 (24, 202, 163),
 (25, 261, 48),
 (26, 105, 124),
 (27, 156, 119),
 (28, 53, 159),
 (29, 255, 99),
 (30, 230, 12),
 (31, 38, 198),
 (32, 197, 12),
 (33, 31, 125),
 (34, 159, 227),
 (35, 273, 32),
 (36, 107, 94),
 (37, 288, 250),
 (38, 291, 56),
 (39, 99, 221),
 (40, 6, 19),
 (41, 79, 121),
 (42, 280, 175),
 (43, 253, 255),
 (44, 207, 37),
 (45, 217, 44),
 (46, 281, 262),
 (47, 114, 258),
 (48, 76, 105),
 (49, 288, 171)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.11821346776724188,
 0.18529419976217756,
 0.12078937171312316,
 0.19607010988145904,
 0.12610283676347173,
 0.14877864920991918,
 0.14767339565521378,
 0.17548652688731045,
 0.1556221725940547,
 0.11196862592751883,
 0.13570559931134929,
 0.16941519375038766,
 0.13470956564048725,
 0.18495780385889213,
 0.14200048845542179,
 0.13924680490688102,
 0.1584256177581031,
 0.19088893695227024,
 0.19090701461692305,
 0.17619034343181469,
 0.15390265570843351,
 0.10385789410876628,
 0.15643993218529639,
 0.19573107339262766,
 0.12007792063007298,
 0.13947401197490025,
 0.1543787303363047,
 0.14396870804118758,
 0.16046912367559249,
 0.12216390992610825,
 0.15685921791486371,
 0.16141041862039771,
 0.11221113357130147,
 0.10318076777254588,
 0.13557240276261989,
 0.19402006212623923,
 0.15210634477974924,
 0.1312623206681357,
 0.15698416671852125,
 0.15411867025052867,
 0.18281352130881476,
 0.10451081352745242,
 0.17727090464591388,
 0.12963840421998835,
 0.18494661062803264,
 0.13681553333027885,
 0.17922035088022126,
 0.16057702890897979,
 0.1596541140481384,
 0.18776997894378519]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 3, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.0873836210397316,
 [(1, 286, 58), (0, 232, 115), (4, 229, 261), (9, 147, 203)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0873836210397316,
 [(1, 286, 58), (0, 232, 115), (4, 229, 261), (9, 147, 203)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.0873836210397316,
 [(1, 286, 58), (0, 232, 115), (4, 229, 261), (9, 147, 203)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1503499218658244,
 {(0, 232, 115): 4, (1, 286, 58): 4, (4, 229, 261): 4},
 [(1, 286, 58), (0, 232, 115), (4, 229, 261), (1, 286, 58), (1, 286, 58)],
 [4, 4, 4, 3, 1])
===3, 1])
=============================================
#           result of greedy part           #
=============================================
(1.4718480835116283,
 {(3, 272, 129): 4, (6, 70, 179): 4},
 [(3, 272, 129), (3, 272, 129), (6, 70, 179), (3, 272, 129), (6, 70, 179)],
 [4, 3, 4, 2, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.3159118095861095,
 [(9, 272, 232), (3, 272, 129), (6, 70, 179), (1, 100, 90)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 0, 1, 4, 4, 0, 0, 4, 0, 0]
=============================================
#               solution Ran                #
=============================================
(0.86605978954376317,
 [(0, 256, 33), (2, 148, 104), (3, 272, 129), (4, 71, 239), (7, 35, 137)],
 [3, 1, 4, 4, 4])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.3159118095861095,
 [(1, 100, 90), (3, 272, 129), (6, 70, 179), (9, 272, 232)],
 [4, 4, 4, 4])
========================
#           result of greedy part           #
=============================================
(1.3446589604188111,
 {(1, 95, 51): 4, (6, 152, 36): 4},
 [(6, 152, 36), (6, 152, 36), (1, 95, 51), (6, 152, 36), (1, 95, 51)],
 [4, 3, 4, 2, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.2033997413379602,
 [(1, 95, 51), (0, 188, 277), (6, 152, 36), (9, 144, 126)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[1, 3, 1, 2, 0, 0, 2, 4, 0, 3]
=============================================
#               solution Ran                #
=============================================
(0.76371977519688539,
 [(0, 188, 277),
  (1, 95, 51),
  (2, 96, 234),
  (3, 56, 8),
  (6, 152, 36),
  (7, 168, 225),
  (9, 144, 126)],
 [1, 3, 1, 2, 2, 4, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.2640429017744712,
 [(0, 188, 277), (1, 95, 51), (4, 216, 52), (6, 152, 36)],
 [4, 4, 4, 4])
==========================================
#           result of greedy part           #
=============================================
(1.1733959830485019,
 {(0, 232, 115): 4, (1, 286, 58): 4, (4, 229, 261): 3},
 [(1, 286, 58), (1, 286, 58), (1, 286, 58), (0, 232, 115), (4, 229, 261)],
 [4, 3, 2, 4, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.0873836210397316,
 [(9, 147, 203), (1, 286, 58), (4, 229, 261), (0, 232, 115)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[2, 3, 3, 0, 0, 0, 1, 1, 0, 3]
=============================================
#               solution Ran                #
=============================================
(0.53159491920711832,
 [(0, 232, 115),
  (1, 286, 58),
  (2, 40, 231),
  (6, 0, 37),
  (7, 147, 18),
  (9, 147, 203)],
 [2, 3, 3, 1, 1, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.0873836210397316,
 [(0, 232, 115), (1, 286, 58), (4, 229, 261), (9, 147, 203)],
 [4, 4, 4, 4])
=====================================
#           result of greedy part           #
=============================================
(1.2353169711944909,
 {(8, 189, 88): 4, (9, 156, 180): 4},
 [(8, 189, 88), (9, 156, 180), (8, 189, 88), (8, 189, 88), (9, 156, 180)],
 [4, 4, 3, 2, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.117257293464218,
 [(9, 156, 180), (5, 6, 2), (3, 146, 266), (8, 189, 88)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[2, 1, 2, 2, 2, 4, 1, 1, 0, 1]
=============================================
#               solution Ran                #
=============================================
(0.51832469779510748,
 [(0, 123, 105),
  (1, 189, 277),
  (2, 7, 287),
  (3, 146, 266),
  (4, 202, 150),
  (5, 6, 2),
  (6, 192, 221),
  (7, 246, 93),
  (9, 156, 180)],
 [2, 1, 2, 2, 2, 4, 1, 1, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.1601086904942872,
 [(0, 123, 105), (4, 202, 150), (8, 189, 88), (9, 156, 180)],
 [4, 4, 4, 4])
=============================
#           result of greedy part           #
=============================================
(2.142252202519646,
 {(4, 208, 190): 4, (8, 239, 184): 4},
 [(4, 208, 190), (4, 208, 190), (4, 208, 190), (8, 239, 184), (8, 239, 184)],
 [4, 2, 3, 4, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.4304375501519981,
 [(3, 284, 148), (8, 239, 184), (4, 208, 190), (6, 46, 271)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[1, 2, 2, 0, 0, 0, 4, 3, 4, 0]
=============================================
#               solution Ran                #
=============================================
(0.9028610116455319,
 [(0, 211, 91),
  (1, 19, 103),
  (2, 100, 131),
  (6, 46, 271),
  (7, 263, 236),
  (8, 239, 184)],
 [1, 2, 2, 4, 3, 4])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.5552809281181341,
 [(4, 208, 190), (5, 187, 280), (7, 263, 236), (8, 239, 184)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.3836400042163066,
 {(0, 82, 264): 4, (1, 133, 102): 4, (7, 152, 140): 4, (9, 71, 125): 1},
 [(0, 82, 264), (7, 152, 140), (0, 82, 264), (1, 133, 102), (9, 71, 125)],
 [4, 4, 3, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.4126157175165373,
 [(0, 82, 264), (7, 152, 140), (9, 71, 125), (1, 133, 102)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 2, 0, 2, 2, 0, 2, 0, 4, 4]
=============================================
#               solution Ran                #
=============================================
(0.65498006549975429,
 [(1, 133, 102),
  (3, 290, 105),
  (4, 191, 84),
  (6, 296, 167),
  (8, 19, 300),
  (9, 71, 125)],
 [2, 2, 2, 2, 4, 4])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.4126157175165373,
 [(0, 82, 264), (1, 133, 102), (7, 152, 140), (9, 71, 125)],
 [4, 4, 4, 4])
=================================
#           result of greedy part           #
=============================================
(1.1780182443374343,
 {(1, 21, 178): 4, (7, 176, 149): 4, (9, 39, 97): 4},
 [(1, 21, 178), (1, 21, 178), (7, 176, 149), (9, 39, 97), (7, 176, 149)],
 [4, 3, 4, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.0985971744261795,
 [(9, 39, 97), (7, 176, 149), (1, 21, 178), (5, 178, 263)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 0, 2, 3, 0, 3, 0, 4, 0, 4]
=============================================
#               solution Ran                #
=============================================
(0.88670618260928769,
 [(2, 276, 190), (3, 206, 157), (5, 178, 263), (7, 176, 149), (9, 39, 97)],
 [2, 3, 3, 4, 4])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.1415178525340055,
 [(1, 21, 178), (3, 206, 157), (7, 176, 149), (9, 39, 97)],
 [4, 4, 4, 4])
==================================
#           result of greedy part           #
=============================================
(1.1276093095855886,
 {(1, 142, 131): 4, (4, 158, 43): 2, (8, 50, 210): 4},
 [(1, 142, 131), (8, 50, 210), (1, 142, 131), (8, 50, 210), (4, 158, 43)],
 [4, 4, 3, 3, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.0982985383201356,
 [(4, 158, 43), (2, 210, 233), (1, 142, 131), (8, 50, 210)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 3, 4, 4, 0, 0, 1, 0, 1, 3]
=============================================
#               solution Ran                #
=============================================
(0.68043305016534328,
 [(1, 142, 131),
  (2, 210, 233),
  (3, 172, 295),
  (6, 279, 141),
  (8, 50, 210),
  (9, 245, 246)],
 [3, 4, 4, 1, 1, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.0982985383201356,
 [(1, 142, 131), (2, 210, 233), (4, 158, 43), (8, 50, 210)],
 [4, 4, 4, 4])
4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.2521846948181694,
 {(4, 134, 97): 4, (5, 152, 36): 4},
 [(4, 134, 97), (4, 134, 97), (4, 134, 97), (5, 152, 36), (5, 152, 36)],
 [4, 3, 2, 4, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.008365778017414,
 [(5, 152, 36), (8, 269, 197), (4, 134, 97), (2, 127, 274)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 2, 0, 2, 4, 0, 0, 3, 3, 2]
=============================================
#               solution Ran                #
=============================================
(0.74095825590791187,
 [(1, 296, 296),
  (3, 30, 298),
  (4, 134, 97),
  (7, 264, 42),
  (8, 269, 197),
  (9, 235, 143)],
 [2, 2, 4, 3, 3, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.2025260224125702,
 [(0, 139, 181), (4, 134, 97), (5, 152, 36), (9, 235, 143)],
 [4, 4, 4, 4])
============================
#           result of greedy part           #
=============================================
(1.5397313057585706,
 {(2, 85, 160): 4, (7, 90, 165): 4},
 [(2, 85, 160), (7, 90, 165), (2, 85, 160), (7, 90, 165), (2, 85, 160)],
 [4, 4, 3, 3, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.381161211599141,
 [(2, 85, 160), (1, 260, 255), (6, 142, 244), (7, 90, 165)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 2, 0, 2, 3, 1, 2, 2, 1, 3]
=============================================
#               solution Ran                #
=============================================
(0.69305693925723411,
 [(1, 260, 255),
  (3, 237, 204),
  (4, 14, 222),
  (5, 107, 293),
  (6, 142, 244),
  (7, 90, 165),
  (8, 289, 74),
  (9, 71, 23)],
 [2, 2, 3, 1, 2, 2, 1, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.381161211599141,
 [(1, 260, 255), (2, 85, 160), (6, 142, 244), (7, 90, 165)],
 [4, 4, 4, 4])
{'B': 800,
 'M': 50,
 'N': 10,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
[{'A': (1.0982985383201356,
        [(1, 142, 131), (8, 50, 210), (4, 158, 43), (2, 210, 233)],
        [4, 4, 4, 4]),
  'B': (1.0982985383201356,
        [(4, 158, 43), (2, 210, 233), (1, 142, 131), (8, 50, 210)],
        [4, 4, 4, 4]),
  'Opt': (1.0982985383201356,
          [(1, 142, 131), (2, 210, 233), (4, 158, 43), (8, 50, 210)],
          [4, 4, 4, 4]),
  'Random': (0.68043305016534328,
             [(1, 142, 131),
              (2, 210, 233),
              (3, 172, 295),
              (6, 279, 141),
              (8, 50, 210),
              (9, 245, 246)],
             [3, 4, 4, 1, 1, 3])},
 {'A': (1.2640429017744712,
        [(6, 152, 36), (1, 95, 51), (4, 216, 52), (0, 188, 277)],
        [4, 4, 4, 4]),
  'B': (1.2033997413379602,
        [(1, 95, 51), (0, 188, 277), (6, 152, 36), (9, 144, 126)],
        [4, 4, 4, 4]),
  'Opt': (1.2640429017744712,
          [(0, 188, 277), (1, 95, 51), (4, 216, 52), (6, 152, 36)],
          [4, 4, 4, 4]),
  'Random': (0.76371977519688539,
             [(0, 188, 277),
              (1, 95, 51),
              (2, 96, 234),
              (3, 56, 8),
              (6, 152, 36),
              (7, 168, 225),
              (9, 144, 126)],
             [1, 3, 1, 2, 2, 4, 3])},
 {'A': (1.2025260224125702,
        [(4, 134, 97), (5, 152, 36), (9, 235, 143), (0, 139, 181)],
        [4, 4, 4, 4]),
  'B': (1.008365778017414,
        [(5, 152, 36), (8, 269, 197), (4, 134, 97), (2, 127, 274)],
        [4, 4, 4, 4]),
  'Opt': (1.2025260224125702,
          [(0, 139, 181), (4, 134, 97), (5, 152, 36), (9, 235, 143)],
          [4, 4, 4, 4]),
  'Random': (0.74095825590791187,
             [(1, 296, 296),
              (3, 30, 298),
              (4, 134, 97),
              (7, 264, 42),
              (8, 269, 197),
              (9, 235, 143)],
             [2, 2, 4, 3, 3, 2])},
 {'A': (1.3159118095861095,
        [(3, 272, 129), (6, 70, 179), (9, 272, 232), (1, 100, 90)],
        [4, 4, 4, 4]),
  'B': (1.3159118095861095,
        [(9, 272, 232), (3, 272, 129), (6, 70, 179), (1, 100, 90)],
        [4, 4, 4, 4]),
  'Opt': (1.3159118095861095,
          [(1, 100, 90), (3, 272, 129), (6, 70, 179), (9, 272, 232)],
          [4, 4, 4, 4]),
  'Random': (0.86605978954376317,
             [(0, 256, 33),
              (2, 148, 104),
              (3, 272, 129),
              (4, 71, 239),
              (7, 35, 137)],
             [3, 1, 4, 4, 4])},
 {'A': (1.5552809281181341,
        [(4, 208, 190), (8, 239, 184), (7, 263, 236), (5, 187, 280)],
        [4, 4, 4, 4]),
  'B': (1.4304375501519981,
        [(3, 284, 148), (8, 239, 184), (4, 208, 190), (6, 46, 271)],
        [4, 4, 4, 4]),
  'Opt': (1.5552809281181341,
          [(4, 208, 190), (5, 187, 280), (7, 263, 236), (8, 239, 184)],
          [4, 4, 4, 4]),
  'Random': (0.9028610116455319,
             [(0, 211, 91),
              (1, 19, 103),
              (2, 100, 131),
              (6, 46, 271),
              (7, 263, 236),
              (8, 239, 184)],
             [1, 2, 2, 4, 3, 4])},
 {'A': (1.0873836210397316,
        [(1, 286, 58), (0, 232, 115), (4, 229, 261), (9, 147, 203)],
        [4, 4, 4, 4]),
  'B': (1.0873836210397316,
        [(9, 147, 203), (1, 286, 58), (4, 229, 261), (0, 232, 115)],
        [4, 4, 4, 4]),
  'Opt': (1.0873836210397316,
          [(0, 232, 115), (1, 286, 58), (4, 229, 261), (9, 147, 203)],
          [4, 4, 4, 4]),
  'Random': (0.53159491920711832,
             [(0, 232, 115),
              (1, 286, 58),
              (2, 40, 231),
              (6, 0, 37),
              (7, 147, 18),
              (9, 147, 203)],
             [2, 3, 3, 1, 1, 3])},
 {'A': (1.1601086904942872,
        [(8, 189, 88), (9, 156, 180), (0, 123, 105), (4, 202, 150)],
        [4, 4, 4, 4]),
  'B': (1.117257293464218,
        [(9, 156, 180), (5, 6, 2), (3, 146, 266), (8, 189, 88)],
        [4, 4, 4, 4]),
  'Opt': (1.1601086904942872,
          [(0, 123, 105), (4, 202, 150), (8, 189, 88), (9, 156, 180)],
          [4, 4, 4, 4]),
  'Random': (0.51832469779510748,
             [(0, 123, 105),
              (1, 189, 277),
              (2, 7, 287),
              (3, 146, 266),
              (4, 202, 150),
              (5, 6, 2),
              (6, 192, 221),
              (7, 246, 93),
              (9, 156, 180)],
             [2, 1, 2, 2, 2, 4, 1, 1, 1])},
 {'A': (1.4126157175165373,
        [(0, 82, 264), (7, 152, 140), (1, 133, 102), (9, 71, 125)],
        [4, 4, 4, 4]),
  'B': (1.4126157175165373,
        [(0, 82, 264), (7, 152, 140), (9, 71, 125), (1, 133, 102)],
        [4, 4, 4, 4]),
  'Opt': (1.4126157175165373,
          [(0, 82, 264), (1, 133, 102), (7, 152, 140), (9, 71, 125)],
          [4, 4, 4, 4]),
  'Random': (0.65498006549975429,
             [(1, 133, 102),
              (3, 290, 105),
              (4, 191, 84),
              (6, 296, 167),
              (8, 19, 300),
              (9, 71, 125)],
             [2, 2, 2, 2, 4, 4])},
 {'A': (1.1415178525340055,
        [(1, 21, 178), (7, 176, 149), (9, 39, 97), (3, 206, 157)],
        [4, 4, 4, 4]),
  'B': (1.0985971744261795,
        [(9, 39, 97), (7, 176, 149), (1, 21, 178), (5, 178, 263)],
        [4, 4, 4, 4]),
  'Opt': (1.1415178525340055,
          [(1, 21, 178), (3, 206, 157), (7, 176, 149), (9, 39, 97)],
          [4, 4, 4, 4]),
  'Random': (0.88670618260928769,
             [(2, 276, 190),
              (3, 206, 157),
              (5, 178, 263),
              (7, 176, 149),
              (9, 39, 97)],
             [2, 3, 3, 4, 4])},
 {'A': (1.3811612115991407,
        [(2, 85, 160), (7, 90, 165), (6, 142, 244), (1, 260, 255)],
        [4, 4, 4, 4]),
  'B': (1.381161211599141,
        [(2, 85, 160), (1, 260, 255), (6, 142, 244), (7, 90, 165)],
        [4, 4, 4, 4]),
  'Opt': (1.381161211599141,
          [(1, 260, 255), (2, 85, 160), (6, 142, 244), (7, 90, 165)],
          [4, 4, 4, 4]),
  'Random': (0.69305693925723411,
             [(1, 260, 255),
              (3, 237, 204),
              (4, 14, 222),
              (5, 107, 293),
              (6, 142, 244),
              (7, 90, 165),
              (8, 289, 74),
              (9, 71, 23)],
             [2, 2, 3, 1, 2, 2, 1, 3])}]
{'A': 1.2618847293395121,
 'B': 1.2153428435459426,
 'Opt': 1.2618847293395121,
 'Random': 0.72386946868279378}

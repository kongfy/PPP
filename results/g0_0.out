=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 30,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 255, 20),
 (1, 75, 146),
 (2, 229, 52),
 (3, 51, 200),
 (4, 274, 191),
 (5, 182, 277),
 (6, 139, 275),
 (7, 162, 70)]
=============================================
#                 sensors                   #
=============================================
30 sensors generated.
[(0, 93, 262),
 (1, 161, 262),
 (2, 50, 167),
 (3, 152, 25),
 (4, 114, 66),
 (5, 14, 182),
 (6, 273, 204),
 (7, 106, 47),
 (8, 146, 275),
 (9, 270, 71),
 (10, 230, 297),
 (11, 269, 70),
 (12, 249, 69),
 (13, 211, 48),
 (14, 246, 85),
 (15, 88, 148),
 (16, 17, 177),
 (17, 123, 145),
 (18, 225, 20),
 (19, 116, 100),
 (20, 246, 157),
 (21, 300, 78),
 (22, 296, 104),
 (23, 146, 268),
 (24, 117, 60),
 (25, 74, 264),
 (26, 179, 128),
 (27, 171, 69),
 (28, 204, 278),
 (29, 202, 231)]
=============================================
#                sensor's P                 #
=============================================
30 sensor's P generated.
[0.17475487766806697,
 0.13530463486904326,
 0.18555750014818775,
 0.13300085892302604,
 0.11140355321037373,
 0.16393634570760918,
 0.16290806522737589,
 0.11038454243505295,
 0.17144701807803037,
 0.13656060004864878,
 0.18634240794903012,
 0.17967576797602067,
 0.10519166699878912,
 0.10190089489147038,
 0.17380264688537084,
 0.12968666236720061,
 0.13027952215325825,
 0.1261333472770737,
 0.10752761582892208,
 0.18452347148414325,
 0.19576029672161857,
 0.15940733494023959,
 0.10967585238773241,
 0.18223971654236371,
 0.12102846654645409,
 0.12291293637508625,
 0.19601393149670401,
 0.14204862495246404,
 0.15649458765427784,
 0.17326842427577199]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.92772692738436047,
 [(6, 139, 275), (2, 229, 52), (7, 162, 70), (5, 182, 277)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.92772692738436047,
 [(6, 139, 275), (2, 229, 52), (7, 162, 70), (5, 182, 277)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.92772692738436047,
 [(6, 139, 275), (2, 229, 52), (7, 162, 70), (5, 182, 277)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.99490867750794931,
 {(2, 229, 52): 4, (6, 139, 275): 4, (7, 162, 70): 4},
 [(6, 139, 275), (2, 229, 52), (7, 162, 70), (6, 139, 275), (6, 139, 275)],
 [4, 4, 4, 3, 1])
=============================================
#           result of greedy part           #
=============================================
(0.9961298876152318,
 {(2, 229, 52): 4, (6, 139, 275): 4},
 [(6, 139, 275), (6, 139, 275), (2, 229, 52), (6, 139, 275), (2, 229, 52)],
 [4, 3, 4, 2, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.92772692738436047,
 [(7, 162, 70), (2, 229, 52), (5, 182, 277), (6, 139, 275)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 30,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 246, 207),
 (1, 108, 79),
 (2, 45, 229),
 (3, 12, 170),
 (4, 249, 238),
 (5, 214, 142),
 (6, 18, 130),
 (7, 160, 56)]
=============================================
#                 sensors                   #
=============================================
30 sensors generated.
[(0, 72, 148),
 (1, 152, 118),
 (2, 80, 275),
 (3, 226, 19),
 (4, 182, 92),
 (5, 212, 139),
 (6, 165, 105),
 (7, 187, 207),
 (8, 189, 133),
 (9, 299, 186),
 (10, 99, 66),
 (11, 217, 51),
 (12, 259, 277),
 (13, 63, 173),
 (14, 181, 13),
 (15, 96, 238),
 (16, 154, 65),
 (17, 76, 226),
 (18, 270, 220),
 (19, 85, 156),
 (20, 44, 269),
 (21, 257, 72),
 (22, 257, 137),
 (23, 34, 252),
 (24, 168, 48),
 (25, 283, 128),
 (26, 66, 184),
 (27, 286, 267),
 (28, 184, 120),
 (29, 163, 144)]
=============================================
#                sensor's P                 #
=============================================
30 sensor's P generated.
[0.11637645704784706,
 0.14127271094939142,
 0.13896903273190142,
 0.16393411617698228,
 0.12431303770975552,
 0.13845287543945312,
 0.14836216124432303,
 0.11959740100959421,
 0.11609188207688741,
 0.1926117995242515,
 0.14822926612301393,
 0.17615631835799872,
 0.14026784396054759,
 0.15657444234414528,
 0.16110403895121417,
 0.17945693221098041,
 0.14476870307136144,
 0.10451000382321385,
 0.17863868807963212,
 0.12990983087395144,
 0.17380333405722589,
 0.1630868691492941,
 0.13472683503999436,
 0.10504454607900759,
 0.1725544333121285,
 0.19778297754384225,
 0.15898646914053627,
 0.12607487672719539,
 0.12601382412246806,
 0.14669044319727981]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.93910587192513373,
 [(5, 214, 142), (7, 160, 56), (2, 45, 229), (1, 108, 79)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.93910587192513373,
 [(5, 214, 142), (7, 160, 56), (2, 45, 229), (1, 108, 79)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.93910587192513373,
 [(5, 214, 142), (7, 160, 56), (2, 45, 229), (1, 108, 79)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1155270513655433,
 {(5, 214, 142): 4, (7, 160, 56): 4},
 [(5, 214, 142), (7, 160, 56), (5, 214, 142), (7, 160, 56), (7, 160, 56)],
 [4, 4, 3, 3, 2])
=============================================
#           result of greedy part           #
=============================================
(1.1155270513655433,
 {(5, 214, 142): 4, (7, 160, 56): 4},
 [(5, 214, 142), (7, 160, 56), (5, 214, 142), (7, 160, 56), (7, 160, 56)],
 [4, 4, 3, 3, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.93910587192513373,
 [(1, 108, 79), (2, 45, 229), (5, 214, 142), (7, 160, 56)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 30,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 220, 84),
 (1, 288, 273),
 (2, 86, 93),
 (3, 116, 103),
 (4, 92, 118),
 (5, 197, 253),
 (6, 257, 110),
 (7, 215, 58)]
=============================================
#                 sensors                   #
=============================================
30 sensors generated.
[(0, 277, 59),
 (1, 2, 143),
 (2, 235, 289),
 (3, 124, 90),
 (4, 180, 104),
 (5, 94, 188),
 (6, 267, 46),
 (7, 159, 213),
 (8, 167, 270),
 (9, 67, 142),
 (10, 85, 94),
 (11, 182, 212),
 (12, 275, 132),
 (13, 284, 91),
 (14, 184, 226),
 (15, 278, 116),
 (16, 131, 6),
 (17, 214, 122),
 (18, 37, 8),
 (19, 3, 229),
 (20, 46, 183),
 (21, 92, 269),
 (22, 43, 186),
 (23, 268, 91),
 (24, 142, 78),
 (25, 118, 7),
 (26, 141, 60),
 (27, 234, 248),
 (28, 259, 182),
 (29, 119, 81)]
=============================================
#                sensor's P                 #
=============================================
30 sensor's P generated.
[0.10023206323678571,
 0.13988537308088295,
 0.19195416035494292,
 0.15067378602722231,
 0.17586079559310031,
 0.1579622547510369,
 0.1523841489853153,
 0.17830125228559451,
 0.12067205462740663,
 0.16879311411605397,
 0.14321832229048403,
 0.13737855725422909,
 0.10832017709912253,
 0.10927500973711834,
 0.19819972931772817,
 0.12302596531009237,
 0.19833334248858903,
 0.11159359794485378,
 0.19462696724556658,
 0.11065343039197091,
 0.19431232933224921,
 0.1437045637525019,
 0.11081097150351195,
 0.16191458583374455,
 0.16905487190749383,
 0.11532733016796762,
 0.17405504922396109,
 0.17039959434810437,
 0.1337398279422122,
 0.16330616995170744]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 3, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.87065793364750033,
 [(6, 257, 110), (2, 86, 93), (3, 116, 103), (4, 92, 118)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.87065793364750033,
 [(6, 257, 110), (2, 86, 93), (3, 116, 103), (4, 92, 118)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.87065793364750033,
 [(6, 257, 110), (2, 86, 93), (3, 116, 103), (4, 92, 118)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.91214296797917571,
 {(2, 86, 93): 4, (3, 116, 103): 4, (6, 257, 110): 4},
 [(6, 257, 110), (2, 86, 93), (3, 116, 103), (2, 86, 93), (2, 86, 93)],
 [4, 4, 4, 3, 1])
=============================================
#           result of greedy part           #
=============================================
(0.91214296797917571,
 {(2, 86, 93): 4, (3, 116, 103): 4, (6, 257, 110): 4},
 [(6, 257, 110), (2, 86, 93), (2, 86, 93), (3, 116, 103), (2, 86, 93)],
 [4, 3, 4, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.87065793364750022,
 [(2, 86, 93), (4, 92, 118), (6, 257, 110), (3, 116, 103)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
======================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 30,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 207, 235),
 (1, 219, 243),
 (2, 165, 262),
 (3, 90, 147),
 (4, 299, 286),
 (5, 272, 230),
 (6, 15, 66),
 (7, 37, 185)]
=============================================
#                 sensors                   #
=============================================
30 sensors generated.
[(0, 96, 41),
 (1, 3, 47),
 (2, 122, 225),
 (3, 162, 76),
 (4, 281, 95),
 (5, 273, 253),
 (6, 101, 82),
 (7, 106, 68),
 (8, 266, 87),
 (9, 20, 120),
 (10, 182, 231),
 (11, 47, 272),
 (12, 38, 71),
 (13, 123, 99),
 (14, 74, 225),
 (15, 35, 88),
 (16, 33, 117),
 (17, 61, 176),
 (18, 166, 263),
 (19, 234, 286),
 (20, 186, 231),
 (21, 264, 158),
 (22, 234, 279),
 (23, 81, 115),
 (24, 132, 298),
 (25, 144, 125),
 (26, 123, 118),
 (27, 24, 244),
 (28, 218, 165),
 (29, 121, 53)]
=============================================
#                sensor's P                 #
=============================================
30 sensor's P generated.
[0.19744232681291107,
 0.17609598891771916,
 0.17014335750748349,
 0.14500223578693489,
 0.1318880630814005,
 0.12989819347303572,
 0.1258062837932396,
 0.14661556268525855,
 0.12809750478190296,
 0.18308075416939784,
 0.16225706397636452,
 0.11451060219884412,
 0.17330232500418657,
 0.14631222053249437,
 0.12915901622728104,
 0.17151230634259007,
 0.18495624672933333,
 0.11405771134062814,
 0.18688659812808361,
 0.11160776657858948,
 0.12710337625065843,
 0.18395038742329473,
 0.1403512535396291,
 0.17855943571333455,
 0.16201818720056652,
 0.18940546559186114,
 0.17842947651781105,
 0.15988925091116421,
 0.13031778321216186,
 0.17680621149314193]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.78059019993384637,
 [(2, 165, 262), (3, 90, 147), (6, 15, 66), (0, 207, 235)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.78059019993384637,
 [(2, 165, 262), (3, 90, 147), (6, 15, 66), (0, 207, 235)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.78059019993384637,
 [(2, 165, 262), (3, 90, 147), (6, 15, 66), (0, 207, 235)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.78059019993384637,
 {(0, 207, 235): 4, (2, 165, 262): 4, (3, 90, 147): 4, (6, 15, 66): 4},
 [(2, 165, 262), (3, 90, 147), (6, 15, 66), (0, 207, 235)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.83075475693051137,
 {(2, 165, 262): 4, (3, 90, 147): 4, (6, 15, 66): 3},
 [(2, 165, 262), (2, 165, 262), (2, 165, 262), (3, 90, 147), (6, 15, 66)],
 [4, 3, 2, 4, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.78059019993384637,
 [(3, 90, 147), (6, 15, 66), (0, 207, 235), (2, 165, 262)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 30,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 260, 73),
 (1, 261, 130),
 (2, 213, 222),
 (3, 45, 45),
 (4, 284, 76),
 (5, 176, 204),
 (6, 218, 98),
 (7, 150, 11)]
=============================================
#                 sensors                   #
=============================================
30 sensors generated.
[(0, 36, 20),
 (1, 179, 70),
 (2, 13, 179),
 (3, 179, 165),
 (4, 185, 235),
 (5, 223, 171),
 (6, 197, 143),
 (7, 112, 189),
 (8, 232, 115),
 (9, 92, 104),
 (10, 250, 179),
 (11, 166, 99),
 (12, 43, 62),
 (13, 102, 244),
 (14, 27, 23),
 (15, 119, 186),
 (16, 53, 16),
 (17, 25, 145),
 (18, 282, 249),
 (19, 22, 266),
 (20, 9, 223),
 (21, 114, 288),
 (22, 211, 130),
 (23, 259, 294),
 (24, 111, 8),
 (25, 263, 62),
 (26, 265, 248),
 (27, 205, 300),
 (28, 294, 97),
 (29, 65, 221)]
=============================================
#                sensor's P                 #
=============================================
30 sensor's P generated.
[0.1392411561287587,
 0.15146389921651088,
 0.13308601579959911,
 0.16313409198405471,
 0.12358425854518389,
 0.11339638832014311,
 0.10892875228956156,
 0.16958588687055401,
 0.17220965483400758,
 0.12104817281371598,
 0.19820595997317442,
 0.16249382848384936,
 0.11209675762879434,
 0.17737316542626685,
 0.13552577150809808,
 0.17867021672050282,
 0.17885808844174106,
 0.18817055083427178,
 0.1350203748929083,
 0.14453075125721029,
 0.12825497864888846,
 0.10274632955056789,
 0.14591055065154945,
 0.17365090814930823,
 0.17043701418719431,
 0.13223633973049781,
 0.10104699709827436,
 0.14972892164797177,
 0.14168575969378633,
 0.11796626236867208]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 3, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.66802352817139921,
 [(3, 45, 45), (6, 218, 98), (5, 176, 204), (0, 260, 73)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.66802352817139921,
 [(3, 45, 45), (6, 218, 98), (5, 176, 204), (0, 260, 73)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.66802352817139921,
 [(3, 45, 45), (6, 218, 98), (5, 176, 204), (0, 260, 73)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.66802352817139921,
 {(0, 260, 73): 4, (3, 45, 45): 4, (5, 176, 204): 4, (6, 218, 98): 4},
 [(3, 45, 45), (6, 218, 98), (5, 176, 204), (0, 260, 73)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.71556617949974122,
 {(3, 45, 45): 4, (6, 218, 98): 4},
 [(3, 45, 45), (6, 218, 98), (3, 45, 45), (3, 45, 45), (6, 218, 98)],
 [4, 4, 2, 3, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.62738024706916351,
 [(0, 260, 73), (3, 45, 45), (6, 218, 98), (4, 284, 76)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
==========================================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 30,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 283, 63),
 (1, 135, 274),
 (2, 21, 277),
 (3, 221, 150),
 (4, 125, 175),
 (5, 23, 201),
 (6, 27, 93),
 (7, 65, 34)]
=============================================
#                 sensors                   #
=============================================
30 sensors generated.
[(0, 241, 193),
 (1, 2, 237),
 (2, 21, 122),
 (3, 282, 59),
 (4, 208, 111),
 (5, 57, 288),
 (6, 189, 253),
 (7, 226, 9),
 (8, 121, 247),
 (9, 82, 84),
 (10, 293, 285),
 (11, 142, 110),
 (12, 286, 208),
 (13, 94, 38),
 (14, 2, 279),
 (15, 126, 170),
 (16, 207, 216),
 (17, 210, 110),
 (18, 50, 148),
 (19, 81, 248),
 (20, 225, 268),
 (21, 225, 179),
 (22, 264, 31),
 (23, 209, 147),
 (24, 103, 20),
 (25, 11, 259),
 (26, 26, 177),
 (27, 277, 176),
 (28, 293, 59),
 (29, 219, 181)]
=============================================
#                sensor's P                 #
=============================================
30 sensor's P generated.
[0.11171044248162842,
 0.11703186408235512,
 0.19919376971582381,
 0.19808249826928501,
 0.19611262206167501,
 0.16729099492205957,
 0.13773178947542816,
 0.19226847815801329,
 0.18591391353274647,
 0.18765400332073046,
 0.17514342203053004,
 0.16893755271539579,
 0.16303445860198612,
 0.18599637397496505,
 0.12436398145146776,
 0.11831273548404424,
 0.10740211676671357,
 0.15083159596464091,
 0.13112541932508404,
 0.1983960944279613,
 0.11766656758238282,
 0.17555432465189119,
 0.168943079764867,
 0.13119938621832683,
 0.15382735252675761,
 0.19602196489764828,
 0.1410236714730472,
 0.10242854156402008,
 0.12323837401365149,
 0.15019384954546211]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.77692720047994546,
 [(3, 221, 150), (0, 283, 63), (2, 21, 277), (4, 125, 175)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.77692720047994546,
 [(3, 221, 150), (0, 283, 63), (2, 21, 277), (4, 125, 175)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.77692720047994546,
 [(3, 221, 150), (0, 283, 63), (2, 21, 277), (4, 125, 175)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.86514093134638514,
 {(0, 283, 63): 4, (2, 21, 277): 4, (3, 221, 150): 4},
 [(3, 221, 150), (0, 283, 63), (3, 221, 150), (2, 21, 277), (0, 283, 63)],
 [4, 4, 3, 4, 1])
=============================================
#           result of greedy part           #
=============================================
(0.91951954385309032,
 {(0, 283, 63): 4, (3, 221, 150): 4},
 [(3, 221, 150), (3, 221, 150), (0, 283, 63), (0, 283, 63), (0, 283, 63)],
 [4, 3, 4, 3, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.77692720047994546,
 [(2, 21, 277), (4, 125, 175), (3, 221, 150), (0, 283, 63)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=========================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 30,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 170, 246),
 (1, 174, 89),
 (2, 232, 258),
 (3, 236, 196),
 (4, 104, 153),
 (5, 185, 53),
 (6, 39, 216),
 (7, 200, 31)]
=============================================
#                 sensors                   #
=============================================
30 sensors generated.
[(0, 165, 266),
 (1, 63, 149),
 (2, 32, 128),
 (3, 12, 98),
 (4, 3, 59),
 (5, 17, 160),
 (6, 24, 201),
 (7, 221, 12),
 (8, 253, 138),
 (9, 76, 149),
 (10, 129, 245),
 (11, 11, 28),
 (12, 73, 51),
 (13, 25, 110),
 (14, 9, 135),
 (15, 193, 290),
 (16, 84, 167),
 (17, 178, 168),
 (18, 36, 275),
 (19, 141, 8),
 (20, 62, 220),
 (21, 189, 95),
 (22, 31, 263),
 (23, 164, 203),
 (24, 148, 84),
 (25, 111, 142),
 (26, 71, 149),
 (27, 96, 200),
 (28, 120, 206),
 (29, 131, 171)]
=============================================
#                sensor's P                 #
=============================================
30 sensor's P generated.
[0.11270316940580877,
 0.12099775839462039,
 0.18102745162747591,
 0.16274615215916735,
 0.15006670842978437,
 0.11639003125316837,
 0.17838545328376881,
 0.17978503193312617,
 0.11464613318884688,
 0.12210838972957412,
 0.10663859395472854,
 0.16001210079300326,
 0.12414482131824892,
 0.16808307275067702,
 0.13723193653633073,
 0.10400604978564426,
 0.17129458378338186,
 0.11431187788196516,
 0.18298252175789498,
 0.19545413138270545,
 0.16558165775502964,
 0.12643848296278762,
 0.15026506505961579,
 0.14592681862985749,
 0.18124412050710664,
 0.13950287323902402,
 0.17848070327501042,
 0.18181966211418807,
 0.106639224940177,
 0.14846416593112102]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.82194703100478406,
 [(4, 104, 153), (6, 39, 216), (0, 170, 246), (1, 174, 89)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.82194703100478406,
 [(4, 104, 153), (6, 39, 216), (0, 170, 246), (1, 174, 89)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.82194703100478406,
 [(4, 104, 153), (6, 39, 216), (0, 170, 246), (1, 174, 89)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.93807235044880055,
 {(0, 170, 246): 4, (4, 104, 153): 4, (6, 39, 216): 4},
 [(4, 104, 153), (6, 39, 216), (4, 104, 153), (0, 170, 246), (4, 104, 153)],
 [4, 4, 3, 4, 1])
=============================================
#           result of greedy part           #
=============================================
(1.0285272365973812,
 {(4, 104, 153): 4, (6, 39, 216): 4},
 [(4, 104, 153), (4, 104, 153), (4, 104, 153), (6, 39, 216), (6, 39, 216)],
 [4, 3, 2, 4, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.82194703100478406,
 [(4, 104, 153), (0, 170, 246), (1, 174, 89), (6, 39, 216)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=========================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 30,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 33, 157),
 (1, 151, 44),
 (2, 256, 203),
 (3, 122, 13),
 (4, 142, 261),
 (5, 90, 32),
 (6, 193, 234),
 (7, 156, 105)]
=============================================
#                 sensors                   #
=============================================
30 sensors generated.
[(0, 284, 101),
 (1, 80, 101),
 (2, 143, 272),
 (3, 61, 32),
 (4, 10, 85),
 (5, 4, 256),
 (6, 269, 79),
 (7, 196, 37),
 (8, 287, 153),
 (9, 189, 283),
 (10, 23, 298),
 (11, 94, 34),
 (12, 31, 26),
 (13, 55, 239),
 (14, 297, 101),
 (15, 0, 169),
 (16, 139, 297),
 (17, 151, 252),
 (18, 232, 28),
 (19, 194, 33),
 (20, 129, 228),
 (21, 33, 191),
 (22, 69, 52),
 (23, 111, 275),
 (24, 179, 52),
 (25, 297, 129),
 (26, 295, 68),
 (27, 116, 67),
 (28, 100, 23),
 (29, 6, 85)]
=============================================
#                sensor's P                 #
=============================================
30 sensor's P generated.
[0.13372914676143738,
 0.10139468303465485,
 0.15849044581613247,
 0.11737670994795307,
 0.16501769161771718,
 0.19922430486568263,
 0.1517770685513295,
 0.16132013429062783,
 0.14432152472001047,
 0.11522031668963099,
 0.18404352011837374,
 0.17517733924836723,
 0.11515996217325729,
 0.10956868259136482,
 0.11010984202478241,
 0.11728239744202563,
 0.14045371915608235,
 0.18185799434613151,
 0.16431839888733982,
 0.19818632128162275,
 0.10392747991701706,
 0.17582793619325679,
 0.19639877049173593,
 0.12347627471701375,
 0.125394860199735,
 0.10347857760847201,
 0.18578252212086582,
 0.12617152324132669,
 0.15850530606405613,
 0.17143879992205885]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.87468322196167692,
 [(5, 90, 32), (4, 142, 261), (1, 151, 44), (3, 122, 13)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.87468322196167692,
 [(5, 90, 32), (4, 142, 261), (1, 151, 44), (3, 122, 13)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.87468322196167692,
 [(5, 90, 32), (4, 142, 261), (1, 151, 44), (3, 122, 13)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1016835772131564,
 {(4, 142, 261): 4, (5, 90, 32): 4},
 [(5, 90, 32), (4, 142, 261), (5, 90, 32), (4, 142, 261), (5, 90, 32)],
 [4, 4, 3, 3, 2])
=============================================
#           result of greedy part           #
=============================================
(1.1016835772131564,
 {(4, 142, 261): 4, (5, 90, 32): 4},
 [(5, 90, 32), (5, 90, 32), (5, 90, 32), (4, 142, 261), (4, 142, 261)],
 [4, 3, 2, 3, 4])
Warning: remaining budget can not be full filled.
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 650.000000
=============================================
#                solution B                 #
=============================================
(0.71325909774010077,
 [(3, 122, 13), (4, 142, 261), (5, 90, 32), (0, 33, 157)],
 [4, 4, 4, 1])
=============================================
#               random h list               #
================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 30,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 188, 204),
 (1, 161, 82),
 (2, 156, 246),
 (3, 210, 226),
 (4, 25, 4),
 (5, 165, 169),
 (6, 129, 59),
 (7, 76, 165)]
=============================================
#                 sensors                   #
=============================================
30 sensors generated.
[(0, 88, 239),
 (1, 292, 112),
 (2, 224, 29),
 (3, 156, 202),
 (4, 288, 279),
 (5, 54, 225),
 (6, 202, 256),
 (7, 56, 296),
 (8, 188, 37),
 (9, 115, 299),
 (10, 11, 275),
 (11, 205, 222),
 (12, 159, 249),
 (13, 180, 98),
 (14, 4, 126),
 (15, 69, 251),
 (16, 248, 233),
 (17, 220, 264),
 (18, 148, 55),
 (19, 8, 268),
 (20, 162, 62),
 (21, 144, 229),
 (22, 259, 191),
 (23, 152, 237),
 (24, 278, 131),
 (25, 57, 291),
 (26, 2, 193),
 (27, 184, 22),
 (28, 138, 46),
 (29, 226, 48)]
=============================================
#                sensor's P                 #
=============================================
30 sensor's P generated.
[0.18771705561502333,
 0.17579470759903679,
 0.1048903313513586,
 0.18747680121450569,
 0.17507377958989981,
 0.18069662381041535,
 0.11904544315133531,
 0.15136256797024131,
 0.12066978053863793,
 0.19928354329997722,
 0.13071270263280921,
 0.13447065639045169,
 0.15788344000783494,
 0.16511397623152885,
 0.15397567047586497,
 0.14576630226889875,
 0.18213009702536295,
 0.14441572945410408,
 0.11457435104136603,
 0.14115926095042913,
 0.11234900168470247,
 0.10507378373545653,
 0.14363070503236208,
 0.10273922117242371,
 0.16806399738913508,
 0.18343255044746856,
 0.12264727127633004,
 0.14027707360027009,
 0.16662942582130813,
 0.16212191940021506]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 3, 4]
=============================================
#           result of greedy part           #
=============================================
(1.0076332079894794,
 [(2, 156, 246), (3, 210, 226), (1, 161, 82), (0, 188, 204)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0076332079894794,
 [(2, 156, 246), (3, 210, 226), (1, 161, 82), (0, 188, 204)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.0076332079894794,
 [(2, 156, 246), (3, 210, 226), (1, 161, 82), (0, 188, 204)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1225632945391684,
 {(1, 161, 82): 4, (2, 156, 246): 4, (3, 210, 226): 4},
 [(2, 156, 246), (3, 210, 226), (2, 156, 246), (1, 161, 82), (2, 156, 246)],
 [4, 4, 3, 4, 1])
=============================================
#           result of greedy part           #
=============================================
(1.1939704624471559,
 {(2, 156, 246): 4, (3, 210, 226): 4},
 [(2, 156, 246), (2, 156, 246), (2, 156, 246), (3, 210, 226), (3, 210, 226)],
 [4, 3, 2, 3, 4])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.0041359050781209,
 [(6, 129, 59), (3, 210, 226), (2, 156, 246), (1, 161, 82)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 30,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 152, 165),
 (1, 22, 192),
 (2, 185, 296),
 (3, 185, 42),
 (4, 30, 275),
 (5, 43, 48),
 (6, 291, 237),
 (7, 15, 150)]
=============================================
#                 sensors                   #
=============================================
30 sensors generated.
[(0, 7, 36),
 (1, 210, 149),
 (2, 49, 11),
 (3, 262, 212),
 (4, 17, 103),
 (5, 84, 28),
 (6, 70, 268),
 (7, 124, 105),
 (8, 296, 250),
 (9, 293, 218),
 (10, 260, 75),
 (11, 34, 136),
 (12, 145, 71),
 (13, 113, 153),
 (14, 1, 108),
 (15, 241, 243),
 (16, 91, 64),
 (17, 65, 7),
 (18, 297, 226),
 (19, 178, 167),
 (20, 199, 15),
 (21, 37, 95),
 (22, 264, 261),
 (23, 146, 107),
 (24, 230, 119),
 (25, 133, 168),
 (26, 103, 292),
 (27, 38, 262),
 (28, 5, 140),
 (29, 297, 108)]
=============================================
#                sensor's P                 #
=============================================
30 sensor's P generated.
[0.10502638059292091,
 0.11248349367636046,
 0.18087566493679935,
 0.12697271236465199,
 0.14036336008997718,
 0.15488327802985355,
 0.12639175188862856,
 0.12306223839103657,
 0.19362739416372751,
 0.18864248127762467,
 0.12592696415319996,
 0.11670989652475205,
 0.13663562232095883,
 0.18292713876188507,
 0.17834055171902258,
 0.14327642806493648,
 0.13817105843397293,
 0.15827124339426857,
 0.19765318396298698,
 0.13081477396899435,
 0.14063684729895834,
 0.17948098797158021,
 0.14936552622474522,
 0.14227082833707982,
 0.13699370347162088,
 0.12940943574761832,
 0.13372666600380267,
 0.11387071570878797,
 0.17071535583912897,
 0.14200684911774816]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 3]
=============================================
#           result of greedy part           #
=============================================
(0.7287388321403605,
 [(6, 291, 237), (5, 43, 48), (0, 152, 165), (7, 15, 150)],
 [4, 4, 4, 3])
=============================================
#           result of greedy part           #
=============================================
(0.7287388321403605,
 [(6, 291, 237), (7, 15, 150), (5, 43, 48), (0, 152, 165)],
 [4, 3, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.7287388321403605,
 [(6, 291, 237), (7, 15, 150), (5, 43, 48), (0, 152, 165)],
 [4, 3, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.85407368209349765,
 {(5, 43, 48): 4, (6, 291, 237): 4, (7, 15, 150): 4},
 [(6, 291, 237), (6, 291, 237), (7, 15, 150), (5, 43, 48), (6, 291, 237)],
 [4, 3, 4, 4, 1])
=============================================
#           result of greedy part           #
=============================================
(0.88984624815902891,
 {(0, 152, 165): 3, (6, 291, 237): 4, (7, 15, 150): 3},
 [(6, 291, 237),
  (6, 291, 237),
  (6, 291, 237),
  (6, 291, 237),
  (7, 15, 150),
  (0, 152, 165)],
 [3, 4, 2, 1, 3, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.70260298782553599,
 [(0, 152, 165), (4, 30, 275), (7, 15, 150), (6, 291, 237)],
 [4, 4, 4, 4])
=============================================
#               random h list    =============================
[2, 0, 1, 2, 0, 2, 0, 1]
=============================================
#               solution Ran                #
=============================================
(0.16118207795118625,
 [(0, 207, 235), (2, 165, 262), (3, 90, 147), (5, 272, 230), (7, 37, 185)],
 [2, 1, 2, 2, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.78059019993384637,
 [(0, 207, 235), (2, 165, 262), (3, 90, 147), (6, 15, 66)],
 [4, 4, 4, 4])
           #
=============================================
[4, 1, 2, 0, 3, 0, 0, 3]
=============================================
#               solution Ran                #
=============================================
(0.35944998973059195,
 [(0, 152, 165), (1, 22, 192), (2, 185, 296), (4, 30, 275), (7, 15, 150)],
 [4, 1, 2, 3, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.77151016926620064,
 [(0, 152, 165), (5, 43, 48), (6, 291, 237), (7, 15, 150)],
 [4, 4, 4, 4])
=========================
[1, 1, 1, 1, 4, 0, 1, 4]
=============================================
#               solution Ran                #
=============================================
(0.42421738213899501,
 [(0, 255, 20),
  (1, 75, 146),
  (2, 229, 52),
  (3, 51, 200),
  (4, 274, 191),
  (6, 139, 275),
  (7, 162, 70)],
 [1, 1, 1, 1, 4, 1, 4])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.92772692738436047,
 [(2, 229, 52), (5, 182, 277), (6, 139, 275), (7, 162, 70)],
 [4, 4, 4, 4])
=========================
[2, 1, 0, 3, 2, 4, 4, 0]
=============================================
#               solution Ran                #
=============================================
(0.55335698340362249,
 [(0, 188, 204),
  (1, 161, 82),
  (3, 210, 226),
  (4, 25, 4),
  (5, 165, 169),
  (6, 129, 59)],
 [2, 1, 3, 2, 4, 4])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.0076332079894794,
 [(0, 188, 204), (1, 161, 82), (2, 156, 246), (3, 210, 226)],
 [4, 4, 4, 4])
=================
[2, 3, 0, 2, 3, 1, 2, 3]
=============================================
#               solution Ran                #
=============================================
(0.44274257583723231,
 [(0, 283, 63),
  (1, 135, 274),
  (3, 221, 150),
  (4, 125, 175),
  (5, 23, 201),
  (6, 27, 93),
  (7, 65, 34)],
 [2, 3, 2, 3, 1, 2, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.77692720047994546,
 [(0, 283, 63), (2, 21, 277), (3, 221, 150), (4, 125, 175)],
 [4, 4, 4, 4])
==========================
[3, 2, 2, 3, 2, 2, 0, 0]
=============================================
#               solution Ran                #
=============================================
(0.44441747050062375,
 [(0, 33, 157),
  (1, 151, 44),
  (2, 256, 203),
  (3, 122, 13),
  (4, 142, 261),
  (5, 90, 32)],
 [3, 2, 2, 3, 2, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.87468322196167692,
 [(1, 151, 44), (3, 122, 13), (4, 142, 261), (5, 90, 32)],
 [4, 4, 4, 4])
====================
[4, 0, 2, 4, 0, 2, 4, 0]
=============================================
#               solution Ran                #
=============================================
(0.7803528438436802,
 [(0, 220, 84), (2, 86, 93), (3, 116, 103), (5, 197, 253), (6, 257, 110)],
 [4, 2, 4, 2, 4])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.87065793364750033,
 [(2, 86, 93), (3, 116, 103), (4, 92, 118), (6, 257, 110)],
 [4, 4, 4, 4])
=================
[0, 3, 0, 4, 2, 4, 3, 0]
=============================================
#               solution Ran                #
=============================================
(0.45874572774558975,
 [(1, 174, 89), (3, 236, 196), (4, 104, 153), (5, 185, 53), (6, 39, 216)],
 [3, 4, 2, 4, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.82194703100478406,
 [(0, 170, 246), (1, 174, 89), (4, 104, 153), (6, 39, 216)],
 [4, 4, 4, 4])
[2, 0, 3, 0, 3, 2, 2, 4]
=============================================
#               solution Ran                #
=============================================
(0.61699429056662913,
 [(0, 246, 207),
  (2, 45, 229),
  (4, 249, 238),
  (5, 214, 142),
  (6, 18, 130),
  (7, 160, 56)],
 [2, 3, 3, 2, 2, 4])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.93910587192513373,
 [(1, 108, 79), (2, 45, 229), (5, 214, 142), (7, 160, 56)],
 [4, 4, 4, 4])

[1, 1, 3, 1, 2, 0, 2, 0]
=============================================
#               solution Ran                #
=============================================
(0.21277486816216531,
 [(0, 260, 73),
  (1, 261, 130),
  (2, 213, 222),
  (3, 45, 45),
  (4, 284, 76),
  (6, 218, 98)],
 [1, 1, 3, 1, 2, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.66802352817139921,
 [(0, 260, 73), (3, 45, 45), (5, 176, 204), (6, 218, 98)],
 [4, 4, 4, 4])
{'B': 800,
 'M': 30,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
[{'A': (0.7287388321403605,
        [(6, 291, 237), (7, 15, 150), (5, 43, 48), (0, 152, 165)],
        [4, 3, 4, 4]),
  'B': (0.70260298782553599,
        [(0, 152, 165), (4, 30, 275), (7, 15, 150), (6, 291, 237)],
        [4, 4, 4, 4]),
  'Opt': (0.77151016926620064,
          [(0, 152, 165), (5, 43, 48), (6, 291, 237), (7, 15, 150)],
          [4, 4, 4, 4]),
  'Random': (0.35944998973059195,
             [(0, 152, 165),
              (1, 22, 192),
              (2, 185, 296),
              (4, 30, 275),
              (7, 15, 150)],
             [4, 1, 2, 3, 3])},
 {'A': (0.87468322196167692,
        [(5, 90, 32), (4, 142, 261), (1, 151, 44), (3, 122, 13)],
        [4, 4, 4, 4]),
  'B': (0.71325909774010077,
        [(3, 122, 13), (4, 142, 261), (5, 90, 32), (0, 33, 157)],
        [4, 4, 4, 1]),
  'Opt': (0.87468322196167692,
          [(1, 151, 44), (3, 122, 13), (4, 142, 261), (5, 90, 32)],
          [4, 4, 4, 4]),
  'Random': (0.44441747050062375,
             [(0, 33, 157),
              (1, 151, 44),
              (2, 256, 203),
              (3, 122, 13),
              (4, 142, 261),
              (5, 90, 32)],
             [3, 2, 2, 3, 2, 2])},
 {'A': (0.77692720047994546,
        [(3, 221, 150), (0, 283, 63), (2, 21, 277), (4, 125, 175)],
        [4, 4, 4, 4]),
  'B': (0.77692720047994546,
        [(2, 21, 277), (4, 125, 175), (3, 221, 150), (0, 283, 63)],
        [4, 4, 4, 4]),
  'Opt': (0.77692720047994546,
          [(0, 283, 63), (2, 21, 277), (3, 221, 150), (4, 125, 175)],
          [4, 4, 4, 4]),
  'Random': (0.44274257583723231,
             [(0, 283, 63),
              (1, 135, 274),
              (3, 221, 150),
              (4, 125, 175),
              (5, 23, 201),
              (6, 27, 93),
              (7, 65, 34)],
             [2, 3, 2, 3, 1, 2, 3])},
 {'A': (0.78059019993384637,
        [(2, 165, 262), (3, 90, 147), (6, 15, 66), (0, 207, 235)],
        [4, 4, 4, 4]),
  'B': (0.78059019993384637,
        [(3, 90, 147), (6, 15, 66), (0, 207, 235), (2, 165, 262)],
        [4, 4, 4, 4]),
  'Opt': (0.78059019993384637,
          [(0, 207, 235), (2, 165, 262), (3, 90, 147), (6, 15, 66)],
          [4, 4, 4, 4]),
  'Random': (0.16118207795118625,
             [(0, 207, 235),
              (2, 165, 262),
              (3, 90, 147),
              (5, 272, 230),
              (7, 37, 185)],
             [2, 1, 2, 2, 1])},
 {'A': (0.92772692738436047,
        [(6, 139, 275), (2, 229, 52), (7, 162, 70), (5, 182, 277)],
        [4, 4, 4, 4]),
  'B': (0.92772692738436047,
        [(7, 162, 70), (2, 229, 52), (5, 182, 277), (6, 139, 275)],
        [4, 4, 4, 4]),
  'Opt': (0.92772692738436047,
          [(2, 229, 52), (5, 182, 277), (6, 139, 275), (7, 162, 70)],
          [4, 4, 4, 4]),
  'Random': (0.42421738213899501,
             [(0, 255, 20),
              (1, 75, 146),
              (2, 229, 52),
              (3, 51, 200),
              (4, 274, 191),
              (6, 139, 275),
              (7, 162, 70)],
             [1, 1, 1, 1, 4, 1, 4])},
 {'A': (0.87065793364750033,
        [(6, 257, 110), (2, 86, 93), (3, 116, 103), (4, 92, 118)],
        [4, 4, 4, 4]),
  'B': (0.87065793364750022,
        [(2, 86, 93), (4, 92, 118), (6, 257, 110), (3, 116, 103)],
        [4, 4, 4, 4]),
  'Opt': (0.87065793364750033,
          [(2, 86, 93), (3, 116, 103), (4, 92, 118), (6, 257, 110)],
          [4, 4, 4, 4]),
  'Random': (0.7803528438436802,
             [(0, 220, 84),
              (2, 86, 93),
              (3, 116, 103),
              (5, 197, 253),
              (6, 257, 110)],
             [4, 2, 4, 2, 4])},
 {'A': (0.66802352817139921,
        [(3, 45, 45), (6, 218, 98), (5, 176, 204), (0, 260, 73)],
        [4, 4, 4, 4]),
  'B': (0.62738024706916351,
        [(0, 260, 73), (3, 45, 45), (6, 218, 98), (4, 284, 76)],
        [4, 4, 4, 4]),
  'Opt': (0.66802352817139921,
          [(0, 260, 73), (3, 45, 45), (5, 176, 204), (6, 218, 98)],
          [4, 4, 4, 4]),
  'Random': (0.21277486816216531,
             [(0, 260, 73),
              (1, 261, 130),
              (2, 213, 222),
              (3, 45, 45),
              (4, 284, 76),
              (6, 218, 98)],
             [1, 1, 3, 1, 2, 2])},
 {'A': (0.93910587192513373,
        [(5, 214, 142), (7, 160, 56), (2, 45, 229), (1, 108, 79)],
        [4, 4, 4, 4]),
  'B': (0.93910587192513373,
        [(1, 108, 79), (2, 45, 229), (5, 214, 142), (7, 160, 56)],
        [4, 4, 4, 4]),
  'Opt': (0.93910587192513373,
          [(1, 108, 79), (2, 45, 229), (5, 214, 142), (7, 160, 56)],
          [4, 4, 4, 4]),
  'Random': (0.61699429056662913,
             [(0, 246, 207),
              (2, 45, 229),
              (4, 249, 238),
              (5, 214, 142),
              (6, 18, 130),
              (7, 160, 56)],
             [2, 3, 3, 2, 2, 4])},
 {'A': (1.0076332079894794,
        [(2, 156, 246), (3, 210, 226), (1, 161, 82), (0, 188, 204)],
        [4, 4, 4, 4]),
  'B': (1.0041359050781209,
        [(6, 129, 59), (3, 210, 226), (2, 156, 246), (1, 161, 82)],
        [4, 4, 4, 4]),
  'Opt': (1.0076332079894794,
          [(0, 188, 204), (1, 161, 82), (2, 156, 246), (3, 210, 226)],
          [4, 4, 4, 4]),
  'Random': (0.55335698340362249,
             [(0, 188, 204),
              (1, 161, 82),
              (3, 210, 226),
              (4, 25, 4),
              (5, 165, 169),
              (6, 129, 59)],
             [2, 1, 3, 2, 4, 4])},
 {'A': (0.82194703100478406,
        [(4, 104, 153), (6, 39, 216), (0, 170, 246), (1, 174, 89)],
        [4, 4, 4, 4]),
  'B': (0.82194703100478406,
        [(4, 104, 153), (0, 170, 246), (1, 174, 89), (6, 39, 216)],
        [4, 4, 4, 4]),
  'Opt': (0.82194703100478406,
          [(0, 170, 246), (1, 174, 89), (4, 104, 153), (6, 39, 216)],
          [4, 4, 4, 4]),
  'Random': (0.45874572774558975,
             [(1, 174, 89),
              (3, 236, 196),
              (4, 104, 153),
              (5, 185, 53),
              (6, 39, 216)],
             [3, 4, 2, 4, 3])}]
{'A': 0.83960339546384843,
 'B': 0.81643334020884917,
 'Opt': 0.84388052917643253,
 'Random': 0.44542342098803162}

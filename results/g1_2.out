=============================================
#                  args                     #
=============================================
{'B': 700,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 125, 288),
 (1, 71, 65),
 (2, 130, 157),
 (3, 204, 57),
 (4, 123, 15),
 (5, 287, 256),
 (6, 100, 266),
 (7, 210, 30)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 252, 297),
 (1, 80, 266),
 (2, 168, 141),
 (3, 196, 162),
 (4, 167, 273),
 (5, 283, 35),
 (6, 248, 15),
 (7, 77, 206),
 (8, 172, 144),
 (9, 271, 83),
 (10, 230, 253),
 (11, 208, 148),
 (12, 268, 238),
 (13, 233, 87),
 (14, 83, 263),
 (15, 148, 133),
 (16, 179, 225),
 (17, 207, 98),
 (18, 4, 279),
 (19, 85, 46),
 (20, 232, 31),
 (21, 6, 139),
 (22, 154, 150),
 (23, 48, 232),
 (24, 104, 54),
 (25, 156, 67),
 (26, 65, 64),
 (27, 75, 104),
 (28, 263, 200),
 (29, 183, 173),
 (30, 198, 180),
 (31, 49, 84),
 (32, 65, 94),
 (33, 33, 109),
 (34, 285, 245),
 (35, 277, 42),
 (36, 15, 194),
 (37, 166, 216),
 (38, 224, 14),
 (39, 44, 22),
 (40, 59, 160),
 (41, 232, 100),
 (42, 265, 149),
 (43, 155, 136),
 (44, 300, 101),
 (45, 197, 283),
 (46, 93, 222),
 (47, 191, 62),
 (48, 68, 25),
 (49, 22, 160)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.19254794593020347,
 0.14808947734275157,
 0.1934628832037614,
 0.16067579383128081,
 0.15450731987088248,
 0.17050820084736396,
 0.17366342876627142,
 0.15945191795642663,
 0.13509733315283021,
 0.13841776949454421,
 0.16715159667336987,
 0.12919440632147361,
 0.15654691041547847,
 0.14143074600043395,
 0.155794410055034,
 0.1479700289160357,
 0.17373038424696619,
 0.16571323972386159,
 0.11980249567290434,
 0.17652803161537339,
 0.149660475694189,
 0.18526454956248006,
 0.15815825769916317,
 0.12945638069861465,
 0.16946471252105078,
 0.18262100593555408,
 0.19399799856613695,
 0.19527491805619693,
 0.1881060099092467,
 0.13265358395060489,
 0.15416750829843417,
 0.17855895134937977,
 0.17080493705978247,
 0.1129893277492114,
 0.18634620343707864,
 0.13529362350329149,
 0.19241006704899408,
 0.11137882089619229,
 0.17556209652147331,
 0.13115320004995484,
 0.11642505376281094,
 0.14095734387439177,
 0.15064685930470681,
 0.11969815223414029,
 0.10529733518560355,
 0.17428162252278007,
 0.10018759600143112,
 0.1506015094763834,
 0.19520585495176132,
 0.17572278119352291]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.8644561238472066, [(1, 71, 65), (2, 130, 157), (3, 204, 57)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.8644561238472066, [(1, 71, 65), (2, 130, 157), (3, 204, 57)], [4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.8644561238472066, [(1, 71, 65), (2, 130, 157), (3, 204, 57)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0138710370778004,
 {(1, 71, 65): 4, (2, 130, 157): 4, (3, 204, 57): 4},
 [(1, 71, 65), (2, 130, 157), (3, 204, 57), (1, 71, 65)],
 [4, 4, 4, 2])
=============================================
#           result of greedy part           #
======================================================================================
#                  args                     #
=============================================
{'B': 700,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 46, 158),
 (1, 258, 29),
 (2, 108, 211),
 (3, 76, 282),
 (4, 141, 149),
 (5, 53, 188),
 (6, 200, 251),
 (7, 228, 15)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 141, 175),
 (1, 16, 99),
 (2, 199, 223),
 (3, 35, 103),
 (4, 3, 271),
 (5, 278, 115),
 (6, 98, 84),
 (7, 188, 103),
 (8, 19, 46),
 (9, 39, 246),
 (10, 84, 126),
 (11, 286, 121),
 (12, 92, 298),
 (13, 246, 226),
 (14, 38, 177),
 (15, 281, 247),
 (16, 191, 76),
 (17, 96, 150),
 (18, 12, 148),
 (19, 222, 63),
 (20, 139, 63),
 (21, 237, 79),
 (22, 171, 64),
 (23, 66, 146),
 (24, 64, 248),
 (25, 125, 92),
 (26, 70, 68),
 (27, 28, 38),
 (28, 112, 208),
 (29, 189, 289),
 (30, 208, 36),
 (31, 14, 84),
 (32, 234, 175),
 (33, 218, 227),
 (34, 230, 159),
 (35, 15, 296),
 (36, 275, 39),
 (37, 40, 44),
 (38, 208, 189),
 (39, 245, 268),
 (40, 163, 292),
 (41, 171, 147),
 (42, 244, 151),
 (43, 86, 57),
 (44, 172, 72),
 (45, 170, 278),
 (46, 247, 121),
 (47, 15, 36),
 (48, 128, 107),
 (49, 176, 163)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.15927789707365483,
 0.16995768075043577,
 0.18837284254243178,
 0.16248218931652494,
 0.16717748676015126,
 0.12707847830778249,
 0.13463849389799104,
 0.12209795178515954,
 0.1919545046025041,
 0.17571679259980316,
 0.13297151139498334,
 0.14253032347041872,
 0.1039444934402107,
 0.10114840895441468,
 0.19027755916601577,
 0.12758788700634771,
 0.10407890014255297,
 0.15121350161843269,
 0.17818941512887354,
 0.12893049363272047,
 0.10543701095903364,
 0.18758579735983158,
 0.1358801741976689,
 0.16011970165025402,
 0.18900965487379201,
 0.12402852629142637,
 0.12628890128887976,
 0.18240396505279766,
 0.16065498338867626,
 0.18370465409869458,
 0.16608177620645334,
 0.18864826801089812,
 0.17668651801163932,
 0.18616938668868172,
 0.16543719314290062,
 0.16282037007783517,
 0.10647532703955929,
 0.14670645410357697,
 0.19436130239142282,
 0.16227546116491598,
 0.17387882539955996,
 0.14739852908819026,
 0.15065078035830176,
 0.15521380210723904,
 0.17106972489960878,
 0.10227219940865483,
 0.16143485845336619,
 0.1833200787316179,
 0.18440287883865775,
 0.14412001941833572]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.67828492855001277, [(4, 141, 149), (0, 46, 158), (6, 200, 251)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.67828492855001277, [(4, 141, 149), (0, 46, 158), (6, 200, 251)], [4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.67828492855001277, [(4, 141, 149), (0, 46, 158), (6, 200, 251)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.75346937890128141,
 {(0, 46, 158): 4, (4, 141, 149): 4, (6, 200, 251): 4},
 [(4, 141, 149), (0, 46, 158), (6, 200, 251), (4, 141, 149)],
 [4, 4, 4, 2])
=============================================
#           result of greedy part           #
===================================================================
#                  args                     #
=============================================
{'B': 700,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 124, 123),
 (1, 22, 40),
 (2, 23, 120),
 (3, 91, 62),
 (4, 87, 159),
 (5, 173, 296),
 (6, 157, 143),
 (7, 144, 191)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 205, 44),
 (1, 69, 79),
 (2, 132, 63),
 (3, 212, 91),
 (4, 244, 257),
 (5, 53, 263),
 (6, 56, 13),
 (7, 260, 90),
 (8, 110, 292),
 (9, 81, 109),
 (10, 200, 177),
 (11, 67, 8),
 (12, 227, 187),
 (13, 139, 264),
 (14, 139, 89),
 (15, 154, 268),
 (16, 64, 169),
 (17, 107, 235),
 (18, 299, 37),
 (19, 14, 215),
 (20, 210, 270),
 (21, 232, 78),
 (22, 128, 133),
 (23, 62, 116),
 (24, 166, 93),
 (25, 169, 87),
 (26, 257, 121),
 (27, 26, 287),
 (28, 89, 187),
 (29, 71, 105),
 (30, 192, 179),
 (31, 13, 7),
 (32, 287, 262),
 (33, 97, 109),
 (34, 292, 20),
 (35, 153, 67),
 (36, 177, 63),
 (37, 262, 60),
 (38, 134, 87),
 (39, 81, 187),
 (40, 156, 59),
 (41, 32, 57),
 (42, 235, 60),
 (43, 269, 256),
 (44, 39, 249),
 (45, 283, 47),
 (46, 202, 266),
 (47, 258, 144),
 (48, 115, 243),
 (49, 51, 300)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.16240324181237273,
 0.18844799022591355,
 0.11628996152940493,
 0.10361769273376192,
 0.13468219587573299,
 0.17702500741443095,
 0.10296997312422222,
 0.1378903920849002,
 0.19147648947886717,
 0.14271664688422886,
 0.15814352033749671,
 0.11079479840072944,
 0.19134528615531893,
 0.13731909159315914,
 0.1359604787215791,
 0.18090542332353196,
 0.11293861731979714,
 0.17505429554921384,
 0.18961168875834239,
 0.13210029993677486,
 0.14664704290390485,
 0.14455159279244562,
 0.10126393200798497,
 0.13899963671093835,
 0.10647918786598938,
 0.1186274660537564,
 0.1268528900636251,
 0.19351824053114156,
 0.1310262530886791,
 0.17690889193345219,
 0.19269410482512234,
 0.16636955692819866,
 0.15373830107799552,
 0.19927752643840949,
 0.12757733129616,
 0.19215527450667122,
 0.1413545628174453,
 0.1155577277333857,
 0.19701396701331511,
 0.15223772963764404,
 0.10724360857281803,
 0.18118666564864341,
 0.19513456977068203,
 0.1231755369465979,
 0.13010937640915315,
 0.15007490303005619,
 0.18508488965022685,
 0.14234753655892962,
 0.14162637849794577,
 0.16011491344555548]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.88499674573433751, [(0, 124, 123), (3, 91, 62), (4, 87, 159)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.88499674573433751, [(0, 124, 123), (3, 91, 62), (4, 87, 159)], [4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.88499674573433751, [(0, 124, 123), (3, 91, 62), (4, 87, 159)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.98063761774880598,
 {(0, 124, 123): 4, (3, 91, 62): 4, (4, 87, 159): 4},
 [(0, 124, 123), (3, 91, 62), (4, 87, 159), (0, 124, 123)],
 [4, 4, 4, 2])
=============================================
#           result of greedy part           #
=======================================================================================
#                  args                     #
=============================================
{'B': 700,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 179, 210),
 (1, 210, 40),
 (2, 58, 115),
 (3, 225, 220),
 (4, 28, 156),
 (5, 263, 57),
 (6, 96, 199),
 (7, 17, 109)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 59, 49),
 (1, 126, 48),
 (2, 81, 18),
 (3, 251, 7),
 (4, 286, 241),
 (5, 4, 13),
 (6, 236, 73),
 (7, 0, 251),
 (8, 63, 201),
 (9, 70, 184),
 (10, 224, 5),
 (11, 242, 143),
 (12, 6, 286),
 (13, 270, 106),
 (14, 117, 106),
 (15, 177, 135),
 (16, 61, 10),
 (17, 28, 176),
 (18, 48, 213),
 (19, 171, 71),
 (20, 141, 49),
 (21, 277, 111),
 (22, 42, 76),
 (23, 290, 22),
 (24, 106, 203),
 (25, 29, 181),
 (26, 63, 34),
 (27, 185, 2),
 (28, 293, 25),
 (29, 133, 271),
 (30, 246, 256),
 (31, 103, 243),
 (32, 239, 214),
 (33, 137, 285),
 (34, 45, 160),
 (35, 15, 212),
 (36, 282, 233),
 (37, 209, 130),
 (38, 100, 148),
 (39, 8, 216),
 (40, 121, 255),
 (41, 181, 289),
 (42, 129, 126),
 (43, 40, 106),
 (44, 206, 11),
 (45, 4, 36),
 (46, 297, 43),
 (47, 221, 269),
 (48, 13, 58),
 (49, 172, 171)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.1520515913316012,
 0.11992097913502958,
 0.17569707226594738,
 0.12608796046906012,
 0.12664971121927682,
 0.19350075687221394,
 0.12949572662003281,
 0.13549533564068561,
 0.14956469194908448,
 0.13410301288102439,
 0.11462732081847887,
 0.11083487602070911,
 0.18805814336187029,
 0.147227163193307,
 0.16109059182085095,
 0.1090310430541514,
 0.15441820112398674,
 0.10597572154139259,
 0.19166012158461943,
 0.19408617544870962,
 0.17699898126973745,
 0.17555589002096583,
 0.1908337696387114,
 0.19958515808746738,
 0.11848948573030529,
 0.12793295779384062,
 0.14875163038398329,
 0.15345819360600738,
 0.19580561830152013,
 0.16894590170545457,
 0.17966640859215413,
 0.14175739477788021,
 0.16847602797025751,
 0.14732524800286606,
 0.11598041647771494,
 0.12324479892088386,
 0.16268033528048648,
 0.16691354630660482,
 0.15838621818127341,
 0.13836129279277537,
 0.1647203976650739,
 0.11996354242965801,
 0.18108937116554366,
 0.19678832910466387,
 0.18272205038531117,
 0.19742399796894197,
 0.13124551769697543,
 0.19834662935241421,
 0.12460443463286255,
 0.16451004790279783]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.7984190234415065, [(6, 96, 199), (4, 28, 156), (2, 58, 115)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.7984190234415065, [(6, 96, 199), (4, 28, 156), (2, 58, 115)], [4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.7984190234415065, [(6, 96, 199), (4, 28, 156), (2, 58, 115)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.89229819747757577,
 {(2, 58, 115): 4, (4, 28, 156): 4, (6, 96, 199): 4},
 [(6, 96, 199), (4, 28, 156), (2, 58, 115), (6, 96, 199)],
 [4, 4, 4, 2])
=============================================
#           result of greedy part           #
=============================================
=============================================
#                  args                     #
=============================================
{'B': 700,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 118, 210),
 (1, 181, 169),
 (2, 101, 45),
 (3, 75, 271),
 (4, 121, 238),
 (5, 268, 7),
 (6, 36, 270),
 (7, 248, 212)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 165, 11),
 (1, 1, 262),
 (2, 43, 89),
 (3, 102, 20),
 (4, 52, 40),
 (5, 26, 272),
 (6, 284, 108),
 (7, 195, 107),
 (8, 99, 91),
 (9, 180, 295),
 (10, 14, 3),
 (11, 247, 45),
 (12, 113, 81),
 (13, 110, 241),
 (14, 99, 205),
 (15, 158, 260),
 (16, 64, 55),
 (17, 181, 193),
 (18, 206, 249),
 (19, 166, 223),
 (20, 173, 138),
 (21, 298, 135),
 (22, 50, 53),
 (23, 255, 4),
 (24, 171, 297),
 (25, 213, 56),
 (26, 287, 108),
 (27, 156, 270),
 (28, 148, 285),
 (29, 7, 298),
 (30, 149, 240),
 (31, 147, 89),
 (32, 274, 154),
 (33, 193, 235),
 (34, 165, 33),
 (35, 146, 17),
 (36, 187, 146),
 (37, 241, 259),
 (38, 118, 150),
 (39, 257, 183),
 (40, 31, 299),
 (41, 226, 282),
 (42, 182, 253),
 (43, 163, 102),
 (44, 15, 104),
 (45, 87, 152),
 (46, 59, 19),
 (47, 239, 196),
 (48, 13, 12),
 (49, 193, 258)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.15696055724264901,
 0.12919864825093591,
 0.17925815185490981,
 0.11802557455908605,
 0.19136889073617294,
 0.19170684672072155,
 0.19243116928010801,
 0.11094907260127501,
 0.14550397288974579,
 0.17728991785362466,
 0.17451802025230018,
 0.15935721497620381,
 0.18953797548012846,
 0.16507985553703264,
 0.13104134849818588,
 0.10029646776964714,
 0.12476352936422766,
 0.19721485241868658,
 0.10122361603562952,
 0.12344056116104013,
 0.19209767642897813,
 0.12285785468447286,
 0.17275651610176501,
 0.1456993552745405,
 0.11622512270781676,
 0.11490944222948529,
 0.13036890201140588,
 0.1744095783516067,
 0.16460890689745059,
 0.18140774548246202,
 0.15230737615341811,
 0.16317438895737291,
 0.17504150300604546,
 0.18005882462586772,
 0.17139653081244546,
 0.17367861495957942,
 0.18624334087993832,
 0.12164761178707965,
 0.14119660079031982,
 0.14697534015798136,
 0.15355981748407796,
 0.15271356632347369,
 0.14604430703338311,
 0.12577603551709704,
 0.15328009214654359,
 0.16926693899225004,
 0.15490505053237766,
 0.12765954613862235,
 0.17593668579105087,
 0.13478726511916544]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.77907878160712141, [(4, 121, 238), (2, 101, 45), (0, 118, 210)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.77907878160712141, [(4, 121, 238), (2, 101, 45), (0, 118, 210)], [4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.77907878160712141, [(4, 121, 238), (2, 101, 45), (0, 118, 210)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.88192770556111244,
 {(0, 118, 210): 4, (2, 101, 45): 4, (4, 121, 238): 4},
 [(4, 121, 238), (2, 101, 45), (0, 118, 210), (4, 121, 238)],
 [4, 4, 4, 2])
=============================================
#           result of greedy part           #
==============================================================
#                  args                     #
=============================================
{'B': 700,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 12, 90),
 (1, 150, 145),
 (2, 246, 20),
 (3, 1, 110),
 (4, 219, 100),
 (5, 149, 104),
 (6, 189, 284),
 (7, 223, 200)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 139, 25),
 (1, 226, 146),
 (2, 193, 162),
 (3, 227, 88),
 (4, 212, 11),
 (5, 30, 83),
 (6, 72, 180),
 (7, 279, 91),
 (8, 275, 48),
 (9, 276, 190),
 (10, 74, 274),
 (11, 1, 197),
 (12, 194, 26),
 (13, 143, 190),
 (14, 113, 5),
 (15, 291, 36),
 (16, 82, 143),
 (17, 214, 258),
 (18, 245, 26),
 (19, 84, 184),
 (20, 65, 159),
 (21, 209, 234),
 (22, 28, 50),
 (23, 229, 81),
 (24, 196, 197),
 (25, 206, 139),
 (26, 211, 280),
 (27, 16, 142),
 (28, 29, 104),
 (29, 123, 56),
 (30, 255, 213),
 (31, 41, 13),
 (32, 169, 128),
 (33, 207, 300),
 (34, 128, 26),
 (35, 142, 219),
 (36, 236, 14),
 (37, 103, 37),
 (38, 300, 256),
 (39, 73, 170),
 (40, 231, 257),
 (41, 125, 146),
 (42, 127, 82),
 (43, 8, 14),
 (44, 286, 36),
 (45, 161, 127),
 (46, 131, 257),
 (47, 51, 291),
 (48, 105, 163),
 (49, 89, 19)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.10113205114082678,
 0.12208561727505191,
 0.12900873603102472,
 0.18361342477310763,
 0.17061262549863543,
 0.16020177107575728,
 0.1222481815257476,
 0.13122254558378837,
 0.10981801197659964,
 0.14900991785531759,
 0.12289252214016605,
 0.15091956179988525,
 0.18944957034128984,
 0.12032084369356004,
 0.18778693387680229,
 0.1282907313623835,
 0.14252757069878111,
 0.13248306460660694,
 0.18224990861763987,
 0.1224678221485892,
 0.19298119057674479,
 0.14628555177520228,
 0.13126392375081744,
 0.14582116526337827,
 0.18884845483201104,
 0.10272884624775663,
 0.12723459161326434,
 0.1004813341901928,
 0.12281009759929021,
 0.12649933017256038,
 0.12745233544559736,
 0.18108887670185927,
 0.1530909827561629,
 0.14952361309887938,
 0.16890459015377224,
 0.15389417469504141,
 0.14557744136480139,
 0.11311624819689671,
 0.1355565000146581,
 0.11016104512560093,
 0.18397690764350641,
 0.1377437368028262,
 0.14845869313022403,
 0.18021459698420056,
 0.1684767862120003,
 0.18083463067609862,
 0.1432020731454888,
 0.16248878021953067,
 0.19731529138201431,
 0.18749438144871283]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.88416409302253152, [(2, 246, 20), (1, 150, 145), (4, 219, 100)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.88416409302253152, [(2, 246, 20), (1, 150, 145), (4, 219, 100)], [4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.88416409302253152, [(2, 246, 20), (1, 150, 145), (4, 219, 100)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0207748519859414,
 {(1, 150, 145): 4, (2, 246, 20): 4, (4, 219, 100): 4},
 [(2, 246, 20), (1, 150, 145), (4, 219, 100), (2, 246, 20)],
 [4, 4, 4, 2])
=============================================
#           result of greedy part           #
==========================================================================
#                  args                     #
=============================================
{'B': 700,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 178, 213),
 (1, 235, 157),
 (2, 169, 256),
 (3, 147, 114),
 (4, 13, 20),
 (5, 2, 228),
 (6, 288, 288),
 (7, 114, 50)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 59, 186),
 (1, 6, 90),
 (2, 274, 278),
 (3, 299, 240),
 (4, 130, 93),
 (5, 155, 2),
 (6, 291, 182),
 (7, 283, 88),
 (8, 87, 51),
 (9, 225, 198),
 (10, 163, 281),
 (11, 165, 288),
 (12, 140, 144),
 (13, 97, 289),
 (14, 195, 11),
 (15, 121, 226),
 (16, 264, 170),
 (17, 277, 67),
 (18, 146, 262),
 (19, 140, 151),
 (20, 82, 248),
 (21, 263, 281),
 (22, 217, 252),
 (23, 252, 169),
 (24, 213, 26),
 (25, 150, 89),
 (26, 247, 274),
 (27, 62, 86),
 (28, 65, 258),
 (29, 136, 213),
 (30, 51, 3),
 (31, 5, 166),
 (32, 197, 120),
 (33, 133, 205),
 (34, 51, 161),
 (35, 26, 134),
 (36, 20, 295),
 (37, 161, 93),
 (38, 284, 272),
 (39, 210, 65),
 (40, 171, 179),
 (41, 119, 187),
 (42, 36, 129),
 (43, 49, 57),
 (44, 268, 203),
 (45, 149, 164),
 (46, 92, 170),
 (47, 151, 244),
 (48, 229, 95),
 (49, 52, 286)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.15589364268497172,
 0.1526340536197005,
 0.16698833129366814,
 0.12942581030110195,
 0.11056095072114104,
 0.13552118304636715,
 0.11375209242723267,
 0.1782495573733249,
 0.16050625641659838,
 0.11715575658827486,
 0.1252365041245494,
 0.1650509133734801,
 0.15380715390458216,
 0.11686453458890496,
 0.13781847643955727,
 0.16422712019597163,
 0.13844345404279459,
 0.11679489329162809,
 0.15869456613031857,
 0.14461704163479203,
 0.15760212336713553,
 0.15935565696749687,
 0.1339964519025803,
 0.11471233597366887,
 0.11184025803169004,
 0.17334394569077133,
 0.11589853295084747,
 0.13548196393068346,
 0.10013366343665624,
 0.17145920104378953,
 0.13166084569705963,
 0.14693544342785053,
 0.19839893877629319,
 0.15425765468703934,
 0.1522582924118627,
 0.11424265321942967,
 0.18274061836879896,
 0.14046350384039696,
 0.13768300351341284,
 0.11617126152343896,
 0.10590094679531895,
 0.1343668744234135,
 0.16636961582022042,
 0.19425680460560735,
 0.13565094203433053,
 0.16026309299540242,
 0.11487727895653577,
 0.17426004303704579,
 0.11695537182244037,
 0.18834217029930372]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.80377159943533727, [(2, 169, 256), (3, 147, 114), (0, 178, 213)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.80377159943533727, [(2, 169, 256), (3, 147, 114), (0, 178, 213)], [4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.80377159943533727, [(2, 169, 256), (3, 147, 114), (0, 178, 213)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.9046333882504678,
 {(0, 178, 213): 4, (2, 169, 256): 4, (3, 147, 114): 4, (6, 288, 288): 2},
 [(2, 169, 256), (3, 147, 114), (0, 178, 213), (6, 288, 288)],
 [4, 4, 4, 2])
=============================================
#           result of greedy part           #=============================================
#                  args                     #
=============================================
{'B': 700,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 269, 236),
 (1, 272, 162),
 (2, 177, 27),
 (3, 241, 121),
 (4, 168, 175),
 (5, 114, 16),
 (6, 2, 254),
 (7, 29, 47)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 251, 176),
 (1, 34, 118),
 (2, 152, 138),
 (3, 170, 116),
 (4, 27, 30),
 (5, 99, 128),
 (6, 78, 290),
 (7, 147, 220),
 (8, 118, 242),
 (9, 113, 295),
 (10, 98, 73),
 (11, 58, 128),
 (12, 290, 289),
 (13, 108, 131),
 (14, 104, 15),
 (15, 246, 78),
 (16, 160, 78),
 (17, 188, 78),
 (18, 269, 37),
 (19, 107, 47),
 (20, 122, 85),
 (21, 242, 177),
 (22, 185, 66),
 (23, 71, 166),
 (24, 126, 233),
 (25, 153, 29),
 (26, 179, 49),
 (27, 197, 291),
 (28, 184, 192),
 (29, 23, 245),
 (30, 56, 190),
 (31, 200, 212),
 (32, 116, 300),
 (33, 161, 98),
 (34, 7, 22),
 (35, 39, 10),
 (36, 54, 44),
 (37, 233, 37),
 (38, 36, 93),
 (39, 147, 84),
 (40, 154, 286),
 (41, 135, 150),
 (42, 241, 224),
 (43, 39, 286),
 (44, 189, 234),
 (45, 56, 44),
 (46, 242, 185),
 (47, 200, 269),
 (48, 79, 26),
 (49, 12, 25)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.12107091279502082,
 0.19375410502492779,
 0.12193624226399588,
 0.16255966464909574,
 0.14926271905367403,
 0.19692107938504538,
 0.19225151441819704,
 0.16164797863052466,
 0.19452199532660058,
 0.1752433774936363,
 0.12134570110175848,
 0.18099391957088978,
 0.15920952641436231,
 0.13749869877806317,
 0.19912894227339012,
 0.13097120525048464,
 0.17960070123334326,
 0.14667162509953532,
 0.19763765223633287,
 0.10510626236120921,
 0.17086358906116714,
 0.14189977831461104,
 0.11301428289476639,
 0.13569600461703865,
 0.11979539749953054,
 0.13072045958372497,
 0.1394962632249879,
 0.18298718280459547,
 0.15220785660249,
 0.1500080999623303,
 0.16530670048443302,
 0.15243398943262312,
 0.19974077543856744,
 0.16601771556402148,
 0.10486526540858848,
 0.15124518283178945,
 0.10904731103507563,
 0.19610244498316626,
 0.15898828276520841,
 0.16798015036227804,
 0.18921518457376391,
 0.18371228385296093,
 0.13817063941802479,
 0.17331561705150444,
 0.18566209372642692,
 0.11274518637006004,
 0.13634436926575189,
 0.1594952575045836,
 0.10271330466378187,
 0.11615912791161037]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.82981227764454246, [(7, 29, 47), (5, 114, 16), (4, 168, 175)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.82981227764454246, [(7, 29, 47), (5, 114, 16), (4, 168, 175)], [4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.82981227764454246, [(7, 29, 47), (5, 114, 16), (4, 168, 175)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.95900697106233923,
 {(4, 168, 175): 4, (5, 114, 16): 4, (7, 29, 47): 4},
 [(7, 29, 47), (5, 114, 16), (4, 168, 175), (7, 29, 47)],
 [4, 4, 4, 2])
=============================================
#           result of greedy part           #
====================================================================================
#                  args                     #
=============================================
{'B': 700,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 79, 293),
 (1, 136, 212),
 (2, 290, 200),
 (3, 149, 57),
 (4, 101, 228),
 (5, 226, 220),
 (6, 55, 272),
 (7, 56, 141)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 176, 254),
 (1, 276, 13),
 (2, 114, 205),
 (3, 226, 200),
 (4, 39, 59),
 (5, 20, 120),
 (6, 131, 184),
 (7, 87, 32),
 (8, 263, 296),
 (9, 257, 12),
 (10, 161, 10),
 (11, 200, 104),
 (12, 148, 278),
 (13, 46, 221),
 (14, 278, 153),
 (15, 100, 296),
 (16, 86, 148),
 (17, 194, 53),
 (18, 253, 68),
 (19, 110, 153),
 (20, 225, 168),
 (21, 272, 233),
 (22, 195, 125),
 (23, 254, 60),
 (24, 148, 34),
 (25, 161, 71),
 (26, 287, 228),
 (27, 129, 68),
 (28, 231, 198),
 (29, 168, 225),
 (30, 204, 207),
 (31, 278, 127),
 (32, 10, 292),
 (33, 206, 283),
 (34, 121, 297),
 (35, 64, 9),
 (36, 174, 155),
 (37, 291, 94),
 (38, 272, 225),
 (39, 189, 289),
 (40, 170, 297),
 (41, 181, 280),
 (42, 265, 200),
 (43, 230, 37),
 (44, 61, 116),
 (45, 110, 159),
 (46, 239, 192),
 (47, 206, 273),
 (48, 115, 225),
 (49, 214, 149)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.13041200206129611,
 0.18813144605172336,
 0.1885671788014972,
 0.1969086686817576,
 0.18166932023372101,
 0.19148154624344252,
 0.10579147994363135,
 0.13541440144276951,
 0.10204032265488923,
 0.14427878478905948,
 0.18099626458749382,
 0.14040737328124325,
 0.13666223283885107,
 0.11577157030237593,
 0.12517709399072191,
 0.19241228085993223,
 0.15016668308053172,
 0.14718906422820155,
 0.10702794003794268,
 0.17177761642821968,
 0.15348086758924459,
 0.15639943412633495,
 0.1625078822771972,
 0.14616565748337645,
 0.1027869011714322,
 0.19135368450704268,
 0.14031851263373024,
 0.14147802241101654,
 0.12282867615004789,
 0.18149355495869743,
 0.10405846287467697,
 0.10142761205229213,
 0.12755424268058768,
 0.19732459608224745,
 0.1826554446820296,
 0.1734055750896985,
 0.19969147542629617,
 0.18588588238174397,
 0.16917736274154344,
 0.12633530424268635,
 0.1204930355576485,
 0.15804631099789632,
 0.18478327103814171,
 0.16911857698899146,
 0.12475470639576494,
 0.10613348934083461,
 0.18519232311849854,
 0.11916165642600181,
 0.11293035804584202,
 0.19483700698924736]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.87563998273717936, [(5, 226, 220), (1, 136, 212), (4, 101, 228)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.87563998273717936, [(5, 226, 220), (1, 136, 212), (4, 101, 228)], [4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.87563998273717936, [(5, 226, 220), (1, 136, 212), (4, 101, 228)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0523070918878505,
 {(1, 136, 212): 4, (5, 226, 220): 4},
 [(5, 226, 220), (1, 136, 212), (5, 226, 220), (1, 136, 212)],
 [4, 4, 3, 3])
=============================================
#           result of greedy part           #
===================================================================
#                  args                     #
=============================================
{'B': 700,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 123, 31),
 (1, 279, 87),
 (2, 120, 129),
 (3, 242, 179),
 (4, 131, 85),
 (5, 259, 178),
 (6, 77, 17),
 (7, 82, 159)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 173, 178),
 (1, 174, 166),
 (2, 84, 59),
 (3, 29, 42),
 (4, 5, 190),
 (5, 101, 263),
 (6, 246, 94),
 (7, 197, 62),
 (8, 117, 30),
 (9, 84, 293),
 (10, 29, 69),
 (11, 114, 241),
 (12, 176, 206),
 (13, 278, 185),
 (14, 229, 280),
 (15, 185, 106),
 (16, 74, 159),
 (17, 84, 256),
 (18, 33, 82),
 (19, 159, 288),
 (20, 18, 209),
 (21, 78, 91),
 (22, 149, 33),
 (23, 260, 265),
 (24, 166, 247),
 (25, 45, 129),
 (26, 219, 175),
 (27, 183, 240),
 (28, 150, 31),
 (29, 194, 217),
 (30, 250, 131),
 (31, 114, 8),
 (32, 223, 190),
 (33, 168, 216),
 (34, 162, 84),
 (35, 274, 77),
 (36, 18, 68),
 (37, 179, 21),
 (38, 165, 263),
 (39, 279, 94),
 (40, 51, 55),
 (41, 182, 239),
 (42, 219, 66),
 (43, 147, 10),
 (44, 46, 41),
 (45, 24, 146),
 (46, 151, 293),
 (47, 151, 109),
 (48, 160, 165),
 (49, 25, 294)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.10535233413245676,
 0.12251802275597704,
 0.18924882294937342,
 0.1203844793100685,
 0.15928602616060877,
 0.14714484794093385,
 0.19004626868055882,
 0.14592421732895727,
 0.17353302434361073,
 0.16753040422039173,
 0.15000739585009554,
 0.16530323847229872,
 0.19890584637383804,
 0.16426793594789119,
 0.14820882477787473,
 0.15523878570197627,
 0.12071017206938894,
 0.17583690112303468,
 0.14885558844448998,
 0.17685512137836717,
 0.14940957955240522,
 0.13356133992063204,
 0.10945391139699334,
 0.18850418701737914,
 0.19209015045005232,
 0.10633991752740786,
 0.1918155486656036,
 0.16402206024006655,
 0.12980766728747475,
 0.17762998812810848,
 0.19162115965746607,
 0.12689905498930554,
 0.13394555809459513,
 0.17386515874213787,
 0.10211429375123932,
 0.11616630590884702,
 0.15259135113578512,
 0.19376451510929732,
 0.1004486868119379,
 0.12662618529713385,
 0.1865493098878567,
 0.11392632846373828,
 0.11063590526419143,
 0.1989214858340442,
 0.16435862961762868,
 0.14244774187679046,
 0.1629024262644348,
 0.18373850982003678,
 0.13861708019293231,
 0.1401511825196694]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.82119386955038398, [(0, 123, 31), (1, 279, 87), (6, 77, 17)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.82119386955038398, [(0, 123, 31), (1, 279, 87), (6, 77, 17)], [4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.82119386955038398, [(0, 123, 31), (1, 279, 87), (6, 77, 17)], [4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0003069264308535,
 {(0, 123, 31): 4, (1, 279, 87): 4},
 [(0, 123, 31), (1, 279, 87), (0, 123, 31), (1, 279, 87)],
 [4, 4, 3, 3])
=============================================
#           result of greedy part           #
=============================================
(1.00821025====
(1.0457684748494731,
 {(1, 71, 65): 4, (2, 130, 157): 4},
 [(1, 71, 65), (1, 71, 65), (1, 71, 65), (2, 130, 157), (1, 71, 65)],
 [4, 3, 2, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 700.000000
=============================================
#                solution B                 #
=============================================
(0.84179789094117918,
 [(1, 71, 65), (5, 287, 256), (2, 130, 157), (6, 100, 266)],
 [4, 4, 4, 2])
=============================================
#               random h list               #
=============================================
[3, 2, 0, 3, 1, 0, 3, 2]
=============================================
#               solution Ran                #
=============================================
(0.56844193786778585,
 [(0, 125, 288),
  (1, 71, 65),
  (3, 204, 57),
  (4, 123, 15),
  (6, 100, 266),
  (7, 210, 30)],
 [3, 2, 3, 1, 3, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.94261693301099381,
 [(1, 71, 65), (2, 130, 157), (3, 204, 57), (7, 210, 30)],
 [4, 4, 2, 4])
=======================
(1.0461346470785584,
 {(1, 136, 212): 4, (3, 149, 57): 1, (5, 226, 220): 4},
 [(5, 226, 220), (5, 226, 220), (1, 136, 212), (5, 226, 220), (3, 149, 57)],
 [4, 3, 4, 2, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 700.000000
=============================================
#                solution B                 #
=============================================
(0.91529097896790046,
 [(3, 149, 57), (5, 226, 220), (1, 136, 212), (4, 101, 228)],
 [4, 4, 4, 2])
=============================================
#               random h list               #
=============================================
[0, 0, 4, 2, 1, 1, 0, 4]
=============================================
#               solution Ran                #
=============================================
(0.53930377164600829,
 [(2, 290, 200), (3, 149, 57), (4, 101, 228), (5, 226, 220), (7, 56, 141)],
 [4, 2, 1, 1, 4])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.97032433876552771,
 [(1, 136, 212), (3, 149, 57), (4, 101, 228), (5, 226, 220)],
 [4, 2, 4, 4])
9282345,
 {(0, 123, 31): 4, (1, 279, 87): 4},
 [(0, 123, 31), (0, 123, 31), (0, 123, 31), (1, 279, 87), (0, 123, 31)],
 [4, 3, 2, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 700.000000
=============================================
#                solution B                 #
=============================================
(0.85598222123234347,
 [(3, 242, 179), (0, 123, 31), (1, 279, 87), (7, 82, 159)],
 [4, 4, 4, 2])
=============================================
#               random h list               #
=============================================
[4, 2, 0, 2, 1, 2, 2, 1]
=============================================
#               solution Ran                #
=============================================
(0.68012456854815262,
 [(0, 123, 31),
  (1, 279, 87),
  (3, 242, 179),
  (4, 131, 85),
  (5, 259, 178),
  (6, 77, 17),
  (7, 82, 159)],
 [4, 2, 2, 1, 2, 2, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.90635178605726674,
 [(0, 123, 31), (1, 279, 87), (4, 131, 85), (6, 77, 17)],
 [4, 2, 4, 4])
================
(1.0400016445451188,
 {(1, 150, 145): 4, (2, 246, 20): 4},
 [(2, 246, 20), (2, 246, 20), (1, 150, 145), (2, 246, 20), (2, 246, 20)],
 [4, 3, 4, 2, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 700.000000
=============================================
#                solution B                 #
=============================================
(0.9461131481375219,
 [(4, 219, 100), (0, 12, 90), (1, 150, 145), (2, 246, 20)],
 [4, 2, 4, 4])
=============================================
#               random h list               #
=============================================
[2, 0, 0, 2, 3, 4, 3, 0]
=============================================
#               solution Ran                #
=============================================
(0.64253745945620666,
 [(0, 12, 90), (3, 1, 110), (4, 219, 100), (5, 149, 104), (6, 189, 284)],
 [2, 2, 3, 4, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.95406725873162401,
 [(1, 150, 145), (2, 246, 20), (4, 219, 100), (6, 189, 284)],
 [4, 4, 4, 2])
=======================
(0.77559077617897343,
 {(0, 46, 158): 4, (4, 141, 149): 4, (6, 200, 251): 3},
 [(4, 141, 149), (0, 46, 158), (4, 141, 149), (6, 200, 251)],
 [4, 4, 3, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 700.000000
=============================================
#                solution B                 #
=============================================
(0.73598943935499306,
 [(6, 200, 251), (2, 108, 211), (4, 141, 149), (0, 46, 158)],
 [3, 3, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 0, 1, 4, 4, 1, 3, 1]
=============================================
#               solution Ran                #
=============================================
(0.57338405278236038,
 [(2, 108, 211),
  (3, 76, 282),
  (4, 141, 149),
  (5, 53, 188),
  (6, 200, 251),
  (7, 228, 15)],
 [1, 4, 4, 1, 3, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.74082718244019274,
 [(0, 46, 158), (2, 108, 211), (4, 141, 149), (6, 200, 251)],
 [4, 2, 4, 4])
======
(0.95469602292118505,
 {(5, 114, 16): 4, (7, 29, 47): 4},
 [(7, 29, 47), (7, 29, 47), (5, 114, 16), (7, 29, 47), (7, 29, 47)],
 [4, 3, 4, 2, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 700.000000
=============================================
#                solution B                 #
=============================================
(0.88841059529599231,
 [(7, 29, 47), (4, 168, 175), (5, 114, 16), (2, 177, 27)],
 [4, 4, 4, 2])
=============================================
#               random h list               #
=============================================
[0, 0, 4, 3, 0, 0, 4, 3]
=============================================
#               solution Ran                #
=============================================
(0.56080185442330699,
 [(2, 177, 27), (3, 241, 121), (6, 2, 254), (7, 29, 47)],
 [4, 3, 4, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.89397886682178351,
 [(2, 177, 27), (4, 168, 175), (5, 114, 16), (7, 29, 47)],
 [4, 2, 4, 4])
===
(1.0598983292902437,
 {(0, 124, 123): 4, (3, 91, 62): 4},
 [(0, 124, 123), (0, 124, 123), (3, 91, 62), (3, 91, 62)],
 [4, 3, 4, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 700.000000
=============================================
#                solution B                 #
=============================================
(0.87823817216544164,
 [(0, 124, 123), (3, 91, 62), (4, 87, 159), (1, 22, 40)],
 [4, 4, 2, 4])
=============================================
#               random h list               #
=============================================
[3, 1, 0, 1, 1, 2, 4, 2]
=============================================
#               solution Ran                #
=============================================
(0.50927996162864941,
 [(0, 124, 123),
  (1, 22, 40),
  (3, 91, 62),
  (4, 87, 159),
  (5, 173, 296),
  (6, 157, 143),
  (7, 144, 191)],
 [3, 1, 1, 1, 2, 4, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.93828178722185229,
 [(0, 124, 123), (1, 22, 40), (3, 91, 62), (4, 87, 159)],
 [4, 2, 4, 4])

=============================================
(0.9046333882504678,
 {(0, 178, 213): 4, (2, 169, 256): 4, (3, 147, 114): 4, (6, 288, 288): 2},
 [(2, 169, 256), (3, 147, 114), (0, 178, 213), (6, 288, 288)],
 [4, 4, 4, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 700.000000
=============================================
#                solution B                 #
=============================================
(0.9046333882504678,
 [(6, 288, 288), (2, 169, 256), (0, 178, 213), (3, 147, 114)],
 [2, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[1, 2, 1, 3, 2, 2, 2, 1]
=============================================
#               solution Ran                #
=============================================
(0.36986175631396223,
 [(0, 178, 213),
  (1, 235, 157),
  (2, 169, 256),
  (3, 147, 114),
  (4, 13, 20),
  (5, 2, 228),
  (6, 288, 288),
  (7, 114, 50)],
 [1, 2, 1, 3, 2, 2, 2, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.9046333882504678,
 [(0, 178, 213), (2, 169, 256), (3, 147, 114), (6, 288, 288)],
 [4, 4, 4, 2])
============================
(0.89560407727974978,
 {(2, 101, 45): 4, (4, 121, 238): 4},
 [(4, 121, 238), (2, 101, 45), (4, 121, 238), (2, 101, 45)],
 [4, 4, 3, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 700.000000
=============================================
#                solution B                 #
=============================================
(0.86243855835545113,
 [(4, 121, 238), (2, 101, 45), (1, 181, 169), (6, 36, 270)],
 [4, 4, 4, 2])
=============================================
#               random h list               #
=============================================
[2, 3, 1, 2, 0, 2, 3, 1]
=============================================
#               solution Ran                #
=============================================
(0.43079289873892251,
 [(0, 118, 210),
  (1, 181, 169),
  (2, 101, 45),
  (3, 75, 271),
  (5, 268, 7),
  (6, 36, 270),
  (7, 248, 212)],
 [2, 3, 1, 2, 2, 3, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.86448899781875144,
 [(0, 118, 210), (2, 101, 45), (4, 121, 238), (6, 36, 270)],
 [4, 4, 4, 2])
(0.94751123106409052,
 {(4, 28, 156): 4, (6, 96, 199): 4},
 [(6, 96, 199), (4, 28, 156), (4, 28, 156), (6, 96, 199)],
 [4, 4, 3, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 700.000000
=============================================
#                solution B                 #
=============================================
(0.80024121010677185,
 [(2, 58, 115), (3, 225, 220), (6, 96, 199), (4, 28, 156)],
 [2, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[1, 2, 0, 4, 3, 0, 0, 1]
=============================================
#               solution Ran                #
=============================================
(0.43903136298682865,
 [(0, 179, 210), (1, 210, 40), (3, 225, 220), (4, 28, 156), (7, 17, 109)],
 [1, 2, 4, 3, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.86421846658502877,
 [(1, 210, 40), (2, 58, 115), (4, 28, 156), (6, 96, 199)],
 [2, 4, 4, 4])
{'B': 700,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
[{'A': (0.87563998273717936,
        [(5, 226, 220), (1, 136, 212), (4, 101, 228)],
        [4, 4, 4]),
  'B': (0.91529097896790046,
        [(3, 149, 57), (5, 226, 220), (1, 136, 212), (4, 101, 228)],
        [4, 4, 4, 2]),
  'Opt': (0.97032433876552771,
          [(1, 136, 212), (3, 149, 57), (4, 101, 228), (5, 226, 220)],
          [4, 2, 4, 4]),
  'Random': (0.53930377164600829,
             [(2, 290, 200),
              (3, 149, 57),
              (4, 101, 228),
              (5, 226, 220),
              (7, 56, 141)],
             [4, 2, 1, 1, 4])},
 {'A': (0.77907878160712141,
        [(4, 121, 238), (2, 101, 45), (0, 118, 210)],
        [4, 4, 4]),
  'B': (0.86243855835545113,
        [(4, 121, 238), (2, 101, 45), (1, 181, 169), (6, 36, 270)],
        [4, 4, 4, 2]),
  'Opt': (0.86448899781875144,
          [(0, 118, 210), (2, 101, 45), (4, 121, 238), (6, 36, 270)],
          [4, 4, 4, 2]),
  'Random': (0.43079289873892251,
             [(0, 118, 210),
              (1, 181, 169),
              (2, 101, 45),
              (3, 75, 271),
              (5, 268, 7),
              (6, 36, 270),
              (7, 248, 212)],
             [2, 3, 1, 2, 2, 3, 1])},
 {'A': (0.8644561238472066,
        [(1, 71, 65), (2, 130, 157), (3, 204, 57)],
        [4, 4, 4]),
  'B': (0.84179789094117918,
        [(1, 71, 65), (5, 287, 256), (2, 130, 157), (6, 100, 266)],
        [4, 4, 4, 2]),
  'Opt': (0.94261693301099381,
          [(1, 71, 65), (2, 130, 157), (3, 204, 57), (7, 210, 30)],
          [4, 4, 2, 4]),
  'Random': (0.56844193786778585,
             [(0, 125, 288),
              (1, 71, 65),
              (3, 204, 57),
              (4, 123, 15),
              (6, 100, 266),
              (7, 210, 30)],
             [3, 2, 3, 1, 3, 2])},
 {'A': (0.82981227764454246,
        [(7, 29, 47), (5, 114, 16), (4, 168, 175)],
        [4, 4, 4]),
  'B': (0.88841059529599231,
        [(7, 29, 47), (4, 168, 175), (5, 114, 16), (2, 177, 27)],
        [4, 4, 4, 2]),
  'Opt': (0.89397886682178351,
          [(2, 177, 27), (4, 168, 175), (5, 114, 16), (7, 29, 47)],
          [4, 2, 4, 4]),
  'Random': (0.56080185442330699,
             [(2, 177, 27), (3, 241, 121), (6, 2, 254), (7, 29, 47)],
             [4, 3, 4, 3])},
 {'A': (0.88416409302253152,
        [(2, 246, 20), (1, 150, 145), (4, 219, 100)],
        [4, 4, 4]),
  'B': (0.9461131481375219,
        [(4, 219, 100), (0, 12, 90), (1, 150, 145), (2, 246, 20)],
        [4, 2, 4, 4]),
  'Opt': (0.95406725873162401,
          [(1, 150, 145), (2, 246, 20), (4, 219, 100), (6, 189, 284)],
          [4, 4, 4, 2]),
  'Random': (0.64253745945620666,
             [(0, 12, 90),
              (3, 1, 110),
              (4, 219, 100),
              (5, 149, 104),
              (6, 189, 284)],
             [2, 2, 3, 4, 3])},
 {'A': (0.80377159943533727,
        [(2, 169, 256), (3, 147, 114), (0, 178, 213)],
        [4, 4, 4]),
  'B': (0.9046333882504678,
        [(6, 288, 288), (2, 169, 256), (0, 178, 213), (3, 147, 114)],
        [2, 4, 4, 4]),
  'Opt': (0.9046333882504678,
          [(0, 178, 213), (2, 169, 256), (3, 147, 114), (6, 288, 288)],
          [4, 4, 4, 2]),
  'Random': (0.36986175631396223,
             [(0, 178, 213),
              (1, 235, 157),
              (2, 169, 256),
              (3, 147, 114),
              (4, 13, 20),
              (5, 2, 228),
              (6, 288, 288),
              (7, 114, 50)],
             [1, 2, 1, 3, 2, 2, 2, 1])},
 {'A': (0.82119386955038398,
        [(0, 123, 31), (1, 279, 87), (6, 77, 17)],
        [4, 4, 4]),
  'B': (0.85598222123234347,
        [(3, 242, 179), (0, 123, 31), (1, 279, 87), (7, 82, 159)],
        [4, 4, 4, 2]),
  'Opt': (0.90635178605726674,
          [(0, 123, 31), (1, 279, 87), (4, 131, 85), (6, 77, 17)],
          [4, 2, 4, 4]),
  'Random': (0.68012456854815262,
             [(0, 123, 31),
              (1, 279, 87),
              (3, 242, 179),
              (4, 131, 85),
              (5, 259, 178),
              (6, 77, 17),
              (7, 82, 159)],
             [4, 2, 2, 1, 2, 2, 1])},
 {'A': (0.67828492855001277,
        [(4, 141, 149), (0, 46, 158), (6, 200, 251)],
        [4, 4, 4]),
  'B': (0.73598943935499306,
        [(6, 200, 251), (2, 108, 211), (4, 141, 149), (0, 46, 158)],
        [3, 3, 4, 4]),
  'Opt': (0.74082718244019274,
          [(0, 46, 158), (2, 108, 211), (4, 141, 149), (6, 200, 251)],
          [4, 2, 4, 4]),
  'Random': (0.57338405278236038,
             [(2, 108, 211),
              (3, 76, 282),
              (4, 141, 149),
              (5, 53, 188),
              (6, 200, 251),
              (7, 228, 15)],
             [1, 4, 4, 1, 3, 1])},
 {'A': (0.88499674573433751,
        [(0, 124, 123), (3, 91, 62), (4, 87, 159)],
        [4, 4, 4]),
  'B': (0.87823817216544164,
        [(0, 124, 123), (3, 91, 62), (4, 87, 159), (1, 22, 40)],
        [4, 4, 2, 4]),
  'Opt': (0.93828178722185229,
          [(0, 124, 123), (1, 22, 40), (3, 91, 62), (4, 87, 159)],
          [4, 2, 4, 4]),
  'Random': (0.50927996162864941,
             [(0, 124, 123),
              (1, 22, 40),
              (3, 91, 62),
              (4, 87, 159),
              (5, 173, 296),
              (6, 157, 143),
              (7, 144, 191)],
             [3, 1, 1, 1, 2, 4, 2])},
 {'A': (0.7984190234415065,
        [(6, 96, 199), (4, 28, 156), (2, 58, 115)],
        [4, 4, 4]),
  'B': (0.80024121010677185,
        [(2, 58, 115), (3, 225, 220), (6, 96, 199), (4, 28, 156)],
        [2, 4, 4, 4]),
  'Opt': (0.86421846658502877,
          [(1, 210, 40), (2, 58, 115), (4, 28, 156), (6, 96, 199)],
          [2, 4, 4, 4]),
  'Random': (0.43903136298682865,
             [(0, 179, 210),
              (1, 210, 40),
              (3, 225, 220),
              (4, 28, 156),
              (7, 17, 109)],
             [1, 2, 4, 3, 1])}]
{'A': 0.82198174255701595,
 'B': 0.86291356028080624,
 'Opt': 0.89797890057034913,
 'Random': 0.53135596243921845}

=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 9,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
9 chargers generated:
[(0, 200, 77),
 (1, 150, 105),
 (2, 13, 214),
 (3, 296, 64),
 (4, 111, 173),
 (5, 105, 147),
 (6, 283, 253),
 (7, 42, 150),
 (8, 228, 113)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 231, 139),
 (1, 239, 165),
 (2, 126, 77),
 (3, 69, 279),
 (4, 281, 235),
 (5, 75, 250),
 (6, 162, 119),
 (7, 162, 69),
 (8, 253, 91),
 (9, 177, 134),
 (10, 18, 43),
 (11, 147, 278),
 (12, 2, 108),
 (13, 232, 19),
 (14, 61, 85),
 (15, 177, 13),
 (16, 221, 279),
 (17, 114, 138),
 (18, 5, 210),
 (19, 145, 243),
 (20, 102, 215),
 (21, 40, 237),
 (22, 77, 131),
 (23, 2, 175),
 (24, 5, 230),
 (25, 214, 120),
 (26, 12, 12),
 (27, 71, 14),
 (28, 184, 105),
 (29, 107, 215),
 (30, 163, 74),
 (31, 245, 270),
 (32, 181, 229),
 (33, 233, 76),
 (34, 123, 37),
 (35, 111, 28),
 (36, 25, 77),
 (37, 72, 279),
 (38, 184, 243),
 (39, 199, 35),
 (40, 7, 232),
 (41, 190, 262),
 (42, 113, 173),
 (43, 79, 61),
 (44, 96, 291),
 (45, 216, 140),
 (46, 81, 69),
 (47, 119, 106),
 (48, 13, 256),
 (49, 265, 16)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.11092281853033407,
 0.11936700506100865,
 0.17217089874636543,
 0.19064263108539148,
 0.17135211459650956,
 0.18082450703487885,
 0.15288827772547206,
 0.12647695097935813,
 0.11405256841008435,
 0.13553100813819025,
 0.13708122756735858,
 0.13870791684417366,
 0.12349732214188366,
 0.16688671232040014,
 0.13501329506392495,
 0.13913142020864103,
 0.13868785889395191,
 0.12954462628516597,
 0.19807655749168951,
 0.14719828085631384,
 0.10315034654107032,
 0.12079674272628373,
 0.13194822859383376,
 0.16487902493174467,
 0.16987588160239309,
 0.1138352894710859,
 0.14394407827720668,
 0.16704602141374697,
 0.15169633303203103,
 0.14299622506816728,
 0.10480054165893697,
 0.15200246747330437,
 0.17011688060755675,
 0.18162667241153624,
 0.16593184601970146,
 0.17164854734491286,
 0.12395787428905487,
 0.1688889501476577,
 0.16639685242024346,
 0.15028164048394849,
 0.12227644436089935,
 0.19248804548362858,
 0.13395694045361536,
 0.14870342039665571,
 0.11430493260064849,
 0.1821712251980645,
 0.19672256099011184,
 0.16227000500794272,
 0.1260255571237732,
 0.13454026534297517]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 3, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.1898370767296012,
 [(1, 150, 105), (8, 228, 113), (2, 13, 214), (0, 200, 77)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1898370767296012,
 [(1, 150, 105), (8, 228, 113), (2, 13, 214), (0, 200, 77)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.1898370767296012,
 [(1, 150, 105), (8, 228, 113), (2, 13, 214), (0, 200, 77)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1898370767296012,
 {(0, 200, 77): 4, (1, 150, 105): 4, (2, 13, 214): 4, (8, 228, 113): 4},
 [(1, 150, 105), (8, 228, 113), (2, 13, 214), (0, 200, 77)],
 [4, 4, 4, 4])
=========================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 9,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
9 chargers generated:
[(0, 76, 269),
 (1, 279, 207),
 (2, 277, 279),
 (3, 293, 282),
 (4, 277, 220),
 (5, 60, 31),
 (6, 202, 284),
 (7, 228, 269),
 (8, 185, 238)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 103, 167),
 (1, 102, 234),
 (2, 262, 97),
 (3, 54, 281),
 (4, 282, 249),
 (5, 231, 18),
 (6, 213, 21),
 (7, 86, 125),
 (8, 284, 21),
 (9, 98, 264),
 (10, 59, 181),
 (11, 269, 42),
 (12, 26, 243),
 (13, 167, 134),
 (14, 33, 266),
 (15, 181, 244),
 (16, 269, 230),
 (17, 46, 11),
 (18, 227, 250),
 (19, 146, 101),
 (20, 86, 26),
 (21, 204, 191),
 (22, 48, 290),
 (23, 94, 137),
 (24, 271, 85),
 (25, 83, 13),
 (26, 298, 155),
 (27, 280, 122),
 (28, 276, 156),
 (29, 114, 278),
 (30, 45, 67),
 (31, 204, 237),
 (32, 196, 72),
 (33, 35, 63),
 (34, 117, 290),
 (35, 234, 269),
 (36, 285, 284),
 (37, 123, 234),
 (38, 20, 4),
 (39, 295, 120),
 (40, 3, 76),
 (41, 85, 286),
 (42, 197, 2),
 (43, 129, 80),
 (44, 253, 39),
 (45, 239, 300),
 (46, 47, 178),
 (47, 120, 181),
 (48, 187, 300),
 (49, 106, 246)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.18513040318551766,
 0.16750312006723644,
 0.1123317521776451,
 0.10346378327719478,
 0.16220477947302084,
 0.13413857381179545,
 0.17468729668959074,
 0.16864595708833574,
 0.12578476808483025,
 0.10114754093684096,
 0.10966764869823692,
 0.15348503211886372,
 0.1938851241621366,
 0.17574532389463099,
 0.10832802736051843,
 0.13780450105241632,
 0.15947608045239903,
 0.16862763604172576,
 0.17865717146573798,
 0.1213916768483566,
 0.12472268629675991,
 0.12911842674191545,
 0.10816088798989032,
 0.12115280676205281,
 0.17345126715598513,
 0.14832033730191127,
 0.11082840474069233,
 0.12869755168070446,
 0.16282227820683376,
 0.11797228885247986,
 0.1857385962401038,
 0.12432151487249914,
 0.15871198347272333,
 0.16866800431287721,
 0.18404309933973556,
 0.10112704086160311,
 0.16396728251008991,
 0.16784785817737535,
 0.15117672374013419,
 0.17590710334332671,
 0.11735736449590047,
 0.14146327827958716,
 0.15383164035593389,
 0.11038219873039735,
 0.13445530460955213,
 0.11743449865477074,
 0.14192778613254509,
 0.15945166365834687,
 0.17859721964332026,
 0.12872817582132137]
=============================================
#           optimal power levels            #
=============================================
[3, 4, 3, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.037957292411998,
 [(7, 228, 269), (8, 185, 238), (0, 76, 269), (5, 60, 31)],
 [4, 4, 3, 4])
=============================================
#           result of greedy part           #
=============================================
(1.037957292411998,
 [(0, 76, 269), (7, 228, 269), (8, 185, 238), (5, 60, 31)],
 [3, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.037957292411998,
 [(7, 228, 269), (8, 185, 238), (0, 76, 269), (5, 60, 31)],
 [4, 4, 3, 4])
=============================================
#           result of greedy part           #
=============================================
(1.199985060007829,
 {(0, 76, 269): 4, (7, 228, 269): 4, (8, 185, 238): 4},
 [(0, 76, 269), (7, 228, 269), (8, 185, 238), (0, 76, 269), (7, 228, 269)],
 [4, 4, 4, 3, 1])
=========================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 9,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
9 chargers generated:
[(0, 67, 199),
 (1, 277, 123),
 (2, 242, 291),
 (3, 265, 300),
 (4, 37, 216),
 (5, 165, 36),
 (6, 51, 218),
 (7, 128, 268),
 (8, 251, 261)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 46, 197),
 (1, 115, 17),
 (2, 147, 102),
 (3, 208, 45),
 (4, 198, 276),
 (5, 298, 138),
 (6, 293, 48),
 (7, 145, 195),
 (8, 123, 245),
 (9, 232, 218),
 (10, 94, 35),
 (11, 215, 199),
 (12, 261, 263),
 (13, 105, 85),
 (14, 154, 174),
 (15, 186, 50),
 (16, 75, 220),
 (17, 28, 68),
 (18, 124, 130),
 (19, 172, 252),
 (20, 250, 164),
 (21, 137, 74),
 (22, 145, 278),
 (23, 276, 104),
 (24, 102, 53),
 (25, 256, 15),
 (26, 52, 174),
 (27, 162, 241),
 (28, 48, 123),
 (29, 45, 268),
 (30, 145, 197),
 (31, 137, 260),
 (32, 112, 68),
 (33, 192, 239),
 (34, 253, 212),
 (35, 286, 181),
 (36, 4, 215),
 (37, 287, 220),
 (38, 215, 4),
 (39, 193, 296),
 (40, 36, 225),
 (41, 242, 243),
 (42, 47, 85),
 (43, 27, 138),
 (44, 291, 161),
 (45, 92, 96),
 (46, 188, 28),
 (47, 9, 18),
 (48, 75, 195),
 (49, 217, 241)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.1677875045931837,
 0.11949574157337498,
 0.13623702465771653,
 0.11355772519419219,
 0.14354834193093155,
 0.17438091924435634,
 0.15003552111757362,
 0.17864660669638516,
 0.10123704892751567,
 0.18824238342028249,
 0.16704649398389348,
 0.15836322472431577,
 0.14251398661547413,
 0.17795266112696415,
 0.11179673956227498,
 0.18674841067875303,
 0.17782234216129897,
 0.13954923597967764,
 0.13091980917482574,
 0.15273294525618389,
 0.1156436238552082,
 0.1747876936918259,
 0.15791005903092248,
 0.14118088272606305,
 0.16418795609655651,
 0.14700224833485839,
 0.12414541834648901,
 0.16715886025336457,
 0.19166898645407768,
 0.1044316126542848,
 0.10935056211033338,
 0.12145240307908943,
 0.17201856733706505,
 0.15283555109828695,
 0.14686444270568727,
 0.14161966982511276,
 0.14672735311750418,
 0.13934124563584133,
 0.11449487502710888,
 0.18974332001003535,
 0.15093053810933516,
 0.1662732997452866,
 0.10229698152967685,
 0.19312295513773742,
 0.11930725713478334,
 0.15018896094744122,
 0.11093379527680219,
 0.14717141020882896,
 0.14173185616804035,
 0.11076884303953209]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.1789855590630016,
 [(0, 67, 199), (7, 128, 268), (8, 251, 261), (4, 37, 216)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1789855590630016,
 [(0, 67, 199), (7, 128, 268), (8, 251, 261), (4, 37, 216)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.1789855590630016,
 [(0, 67, 199), (7, 128, 268), (8, 251, 261), (4, 37, 216)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1789855590630016,
 {(0, 67, 199): 4, (4, 37, 216): 4, (7, 128, 268): 4, (8, 251, 261): 4},
 [(0, 67, 199), (7, 128, 268), (8, 251, 261), (4, 37, 216)],
 [4, 4, 4, 4])
=================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 9,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
9 chargers generated:
[(0, 263, 52),
 (1, 112, 241),
 (2, 191, 266),
 (3, 151, 187),
 (4, 274, 236),
 (5, 141, 12),
 (6, 33, 90),
 (7, 157, 23),
 (8, 152, 297)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 74, 198),
 (1, 102, 185),
 (2, 198, 297),
 (3, 218, 288),
 (4, 138, 93),
 (5, 183, 124),
 (6, 205, 297),
 (7, 28, 284),
 (8, 171, 126),
 (9, 205, 236),
 (10, 187, 259),
 (11, 38, 6),
 (12, 179, 224),
 (13, 128, 108),
 (14, 286, 238),
 (15, 183, 283),
 (16, 14, 30),
 (17, 292, 263),
 (18, 282, 86),
 (19, 25, 224),
 (20, 221, 75),
 (21, 186, 227),
 (22, 290, 189),
 (23, 7, 24),
 (24, 86, 212),
 (25, 114, 35),
 (26, 104, 207),
 (27, 102, 116),
 (28, 155, 264),
 (29, 223, 223),
 (30, 5, 295),
 (31, 203, 231),
 (32, 278, 287),
 (33, 118, 77),
 (34, 29, 287),
 (35, 157, 298),
 (36, 144, 219),
 (37, 62, 257),
 (38, 59, 103),
 (39, 150, 112),
 (40, 282, 119),
 (41, 44, 93),
 (42, 261, 214),
 (43, 245, 113),
 (44, 176, 292),
 (45, 153, 91),
 (46, 156, 122),
 (47, 58, 92),
 (48, 166, 241),
 (49, 274, 46)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.14617563644271672,
 0.12848828219073108,
 0.1927529979969696,
 0.12075664306722887,
 0.13360471883198283,
 0.1609728518280191,
 0.10890984434704988,
 0.19817304203401709,
 0.12418817254310312,
 0.13201539886206654,
 0.15258163369863739,
 0.11396556548283808,
 0.17482933219456087,
 0.19225979130293447,
 0.11592537596731439,
 0.14438247700811252,
 0.14490444673858174,
 0.16064553607630869,
 0.19205640792010259,
 0.19258077446624233,
 0.12011152948367582,
 0.10157192747587444,
 0.1264938040956349,
 0.19470665886452923,
 0.16845623133865473,
 0.16655580057935121,
 0.15722772118716186,
 0.18464731878898247,
 0.18386214963630187,
 0.16629412861620863,
 0.17892361997858208,
 0.14906446262570477,
 0.1571274336886489,
 0.10541823166253063,
 0.13846966800308594,
 0.16949921498959414,
 0.15396183629932042,
 0.15665478845618996,
 0.15779119063598845,
 0.11159473389613948,
 0.18128901841842174,
 0.19314757532977644,
 0.12073567886015084,
 0.13020804201120678,
 0.19855693855781734,
 0.15347582828087561,
 0.12723631619106238,
 0.11524614074521791,
 0.17546580077543167,
 0.12204985634583781]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 3, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.2349876868905516,
 [(2, 191, 266), (8, 152, 297), (3, 151, 187), (1, 112, 241)],
 [3, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.2349876868905516,
 [(2, 191, 266), (8, 152, 297), (3, 151, 187), (1, 112, 241)],
 [3, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.2349876868905516,
 [(2, 191, 266), (8, 152, 297), (3, 151, 187), (1, 112, 241)],
 [3, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.5248021340167119,
 {(2, 191, 266): 4, (3, 151, 187): 4, (8, 152, 297): 4},
 [(2, 191, 266), (2, 191, 266), (8, 152, 297), (3, 151, 187), (8, 152, 297)],
 [4, 3, 4, 4, 1])
==================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 9,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
9 chargers generated:
[(0, 165, 295),
 (1, 153, 278),
 (2, 227, 79),
 (3, 37, 264),
 (4, 215, 214),
 (5, 197, 36),
 (6, 113, 237),
 (7, 289, 267),
 (8, 178, 265)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 194, 233),
 (1, 222, 117),
 (2, 10, 230),
 (3, 23, 262),
 (4, 241, 260),
 (5, 297, 197),
 (6, 278, 113),
 (7, 73, 203),
 (8, 95, 149),
 (9, 225, 225),
 (10, 29, 278),
 (11, 84, 52),
 (12, 183, 77),
 (13, 292, 183),
 (14, 114, 66),
 (15, 101, 30),
 (16, 151, 157),
 (17, 157, 28),
 (18, 58, 95),
 (19, 68, 268),
 (20, 127, 149),
 (21, 8, 162),
 (22, 216, 157),
 (23, 222, 86),
 (24, 164, 28),
 (25, 220, 17),
 (26, 262, 226),
 (27, 87, 59),
 (28, 173, 116),
 (29, 72, 18),
 (30, 22, 228),
 (31, 244, 150),
 (32, 277, 218),
 (33, 35, 89),
 (34, 11, 261),
 (35, 153, 292),
 (36, 85, 44),
 (37, 223, 114),
 (38, 278, 129),
 (39, 24, 237),
 (40, 31, 95),
 (41, 46, 21),
 (42, 14, 205),
 (43, 234, 80),
 (44, 284, 150),
 (45, 22, 36),
 (46, 142, 222),
 (47, 230, 26),
 (48, 28, 121),
 (49, 213, 158)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.13669559676114251,
 0.19386751039116643,
 0.1054007344349018,
 0.1878157910702265,
 0.14075093641179018,
 0.17211518702171136,
 0.17532623003013703,
 0.16136955671666497,
 0.13771131129759975,
 0.13034142194515727,
 0.17484028246400507,
 0.16945761818302243,
 0.15962324065404793,
 0.10291417517961554,
 0.13350296678416504,
 0.13231896770879215,
 0.19865590201302932,
 0.19436581531645583,
 0.17859136357482638,
 0.14692246589696059,
 0.18976443869469645,
 0.19978921694981447,
 0.13158694331137105,
 0.19973907881543804,
 0.13120883536335945,
 0.19645431283248363,
 0.14021073797934608,
 0.11769055859653871,
 0.11187293761780837,
 0.11350569440350045,
 0.15342377444260477,
 0.15322457194909311,
 0.18921083048292711,
 0.11901262297628537,
 0.12628221327314512,
 0.14635135727827531,
 0.13902963880394414,
 0.16682463932618921,
 0.15375483920134775,
 0.1348109686187112,
 0.13801462444709911,
 0.11838539215643298,
 0.11806125171475548,
 0.19782936833307724,
 0.12742476458606097,
 0.19539545346921389,
 0.19085582498527109,
 0.15310719100140013,
 0.12980151018604807,
 0.12035171963482229]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.1091693167481331,
 [(2, 227, 79), (3, 37, 264), (4, 215, 214), (5, 197, 36)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1091693167481331,
 [(2, 227, 79), (3, 37, 264), (4, 215, 214), (5, 197, 36)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.1091693167481331,
 [(2, 227, 79), (3, 37, 264), (4, 215, 214), (5, 197, 36)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.3047077367247857,
 {(2, 227, 79): 4, (3, 37, 264): 4},
 [(2, 227, 79), (3, 37, 264), (2, 227, 79), (3, 37, 264), (3, 37, 264)],
 [4, 4, 3, 3, 2])
=============================================
# =============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 9,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
9 chargers generated:
[(0, 169, 42),
 (1, 125, 77),
 (2, 197, 206),
 (3, 202, 131),
 (4, 269, 235),
 (5, 246, 190),
 (6, 173, 132),
 (7, 175, 279),
 (8, 84, 298)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 265, 177),
 (1, 116, 99),
 (2, 1, 28),
 (3, 269, 134),
 (4, 50, 144),
 (5, 136, 202),
 (6, 240, 91),
 (7, 197, 160),
 (8, 153, 207),
 (9, 185, 119),
 (10, 210, 147),
 (11, 26, 218),
 (12, 208, 221),
 (13, 34, 218),
 (14, 222, 191),
 (15, 225, 239),
 (16, 198, 249),
 (17, 3, 249),
 (18, 210, 116),
 (19, 173, 270),
 (20, 79, 287),
 (21, 177, 71),
 (22, 48, 147),
 (23, 8, 37),
 (24, 69, 228),
 (25, 224, 11),
 (26, 282, 248),
 (27, 163, 126),
 (28, 62, 136),
 (29, 92, 241),
 (30, 94, 39),
 (31, 269, 156),
 (32, 52, 55),
 (33, 120, 246),
 (34, 202, 292),
 (35, 45, 256),
 (36, 107, 253),
 (37, 60, 259),
 (38, 91, 275),
 (39, 279, 261),
 (40, 85, 97),
 (41, 22, 280),
 (42, 141, 63),
 (43, 53, 111),
 (44, 7, 243),
 (45, 41, 200),
 (46, 99, 140),
 (47, 123, 285),
 (48, 185, 30),
 (49, 183, 297)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.15727922062185981,
 0.18000305834504346,
 0.17865961713951567,
 0.10373058313740509,
 0.18076171844703834,
 0.117683947268338,
 0.14260915774709967,
 0.15906367923862649,
 0.140850492983502,
 0.17124224514575753,
 0.19999979048911323,
 0.1505856928850404,
 0.19787471329428624,
 0.12933224881012523,
 0.16386753418230859,
 0.18406015484706095,
 0.15356874276598287,
 0.1972400600136372,
 0.14900453312577738,
 0.15185004137669733,
 0.18709041395734011,
 0.11259583756866809,
 0.19513022373130753,
 0.1770435977380857,
 0.16989283179735359,
 0.15029537352191397,
 0.12393672713390021,
 0.11454285602720372,
 0.19410113452837366,
 0.14493271200626229,
 0.14907695628945267,
 0.10766230707583108,
 0.13568665579218242,
 0.16552466830731105,
 0.12596134726172467,
 0.18388410938111549,
 0.11081017570435429,
 0.19386259733255723,
 0.11276246930537374,
 0.11677188062701362,
 0.17811292887488048,
 0.16370955944941223,
 0.15503536330879653,
 0.17020460719878289,
 0.13486870094584621,
 0.12015096306231707,
 0.1618323132111287,
 0.18987365849039078,
 0.11420313732535435,
 0.19646986136019631]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.1587887947820914,
 [(3, 202, 131), (6, 173, 132), (7, 175, 279), (8, 84, 298)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1587887947820914,
 [(3, 202, 131), (6, 173, 132), (7, 175, 279), (8, 84, 298)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.1587887947820914,
 [(3, 202, 131), (6, 173, 132), (7, 175, 279), (8, 84, 298)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1587887947820914,
 {(3, 202, 131): 4, (6, 173, 132): 4, (7, 175, 279): 4, (8, 84, 298): 4},
 [(3, 202, 131), (6, 173, 132), (7, 175, 279), (8, 84, 298)],
 [4, 4, 4, 4])
==================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 9,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
9 chargers generated:
[(0, 205, 238),
 (1, 220, 7),
 (2, 139, 71),
 (3, 277, 219),
 (4, 293, 71),
 (5, 234, 284),
 (6, 119, 97),
 (7, 123, 61),
 (8, 199, 238)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 102, 278),
 (1, 86, 28),
 (2, 31, 151),
 (3, 66, 294),
 (4, 70, 200),
 (5, 257, 243),
 (6, 78, 252),
 (7, 197, 42),
 (8, 181, 144),
 (9, 198, 23),
 (10, 162, 231),
 (11, 71, 186),
 (12, 4, 109),
 (13, 122, 109),
 (14, 257, 202),
 (15, 204, 154),
 (16, 258, 83),
 (17, 195, 62),
 (18, 249, 231),
 (19, 276, 153),
 (20, 109, 297),
 (21, 265, 71),
 (22, 190, 138),
 (23, 174, 212),
 (24, 123, 17),
 (25, 217, 175),
 (26, 212, 2),
 (27, 220, 49),
 (28, 86, 260),
 (29, 129, 113),
 (30, 36, 107),
 (31, 52, 173),
 (32, 246, 151),
 (33, 186, 37),
 (34, 77, 266),
 (35, 7, 180),
 (36, 214, 22),
 (37, 89, 78),
 (38, 287, 239),
 (39, 30, 159),
 (40, 193, 169),
 (41, 148, 76),
 (42, 36, 49),
 (43, 264, 239),
 (44, 153, 174),
 (45, 286, 263),
 (46, 254, 46),
 (47, 297, 112),
 (48, 127, 285),
 (49, 167, 163)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.10257616214713533,
 0.13591449238917874,
 0.13454360668175838,
 0.17959319762299431,
 0.19476813824417896,
 0.1062653314027987,
 0.1516944138837038,
 0.11696485175367678,
 0.19680633952353024,
 0.14210943872931986,
 0.16409413727293426,
 0.14676640351516543,
 0.17168214882434479,
 0.15901997112387609,
 0.18525977971468061,
 0.11115688176188993,
 0.18875468667398099,
 0.19440737475772041,
 0.13290735150345684,
 0.12978054272154232,
 0.12140843375634205,
 0.19461353664490724,
 0.19324179394851865,
 0.14130497785718291,
 0.12614776519528548,
 0.11248902129412619,
 0.17254232023875965,
 0.13569092973742092,
 0.19283476102110386,
 0.16197935664345184,
 0.17264536345236292,
 0.15262941654909559,
 0.17649509708434818,
 0.17936329837321568,
 0.15005426091740778,
 0.15730553944655901,
 0.171991015877338,
 0.1310327877781344,
 0.13701717670644858,
 0.19666906339477019,
 0.10871921770313159,
 0.19589255095446589,
 0.16894610000556637,
 0.18837919004434911,
 0.10937563843628548,
 0.13934789174704351,
 0.16021713625398068,
 0.1066525770897231,
 0.10958113503936251,
 0.10968179116342039]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.0344651679621202,
 [(1, 220, 7), (3, 277, 219), (6, 119, 97), (2, 139, 71)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0344651679621202,
 [(1, 220, 7), (3, 277, 219), (6, 119, 97), (2, 139, 71)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.0344651679621202,
 [(1, 220, 7), (3, 277, 219), (6, 119, 97), (2, 139, 71)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0344651679621202,
 {(1, 220, 7): 4, (2, 139, 71): 4, (3, 277, 219): 4, (6, 119, 97): 4},
 [(1, 220, 7), (3, 277, 219), (6, 119, 97), (2, 139, 71)],
 [4, 4, 4, 4])
==============================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 9,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
9 chargers generated:
[(0, 124, 233),
 (1, 245, 156),
 (2, 176, 161),
 (3, 83, 92),
 (4, 35, 38),
 (5, 157, 255),
 (6, 192, 193),
 (7, 108, 86),
 (8, 8, 298)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 5, 255),
 (1, 55, 97),
 (2, 287, 227),
 (3, 154, 213),
 (4, 23, 12),
 (5, 295, 168),
 (6, 289, 88),
 (7, 103, 213),
 (8, 226, 20),
 (9, 59, 7),
 (10, 163, 41),
 (11, 46, 197),
 (12, 111, 101),
 (13, 177, 17),
 (14, 53, 283),
 (15, 74, 59),
 (16, 183, 172),
 (17, 78, 296),
 (18, 212, 40),
 (19, 63, 232),
 (20, 246, 30),
 (21, 114, 246),
 (22, 71, 67),
 (23, 158, 41),
 (24, 70, 291),
 (25, 179, 248),
 (26, 100, 156),
 (27, 271, 151),
 (28, 145, 170),
 (29, 129, 267),
 (30, 205, 66),
 (31, 26, 114),
 (32, 103, 164),
 (33, 110, 273),
 (34, 218, 254),
 (35, 13, 30),
 (36, 264, 272),
 (37, 257, 130),
 (38, 257, 22),
 (39, 81, 180),
 (40, 119, 142),
 (41, 235, 156),
 (42, 94, 154),
 (43, 131, 106),
 (44, 146, 282),
 (45, 125, 61),
 (46, 204, 91),
 (47, 40, 60),
 (48, 30, 61),
 (49, 162, 228)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.1468566101950434,
 0.13110009061201564,
 0.14762831326179099,
 0.16967143306030955,
 0.12530590452021717,
 0.13150190488004077,
 0.10910600910402686,
 0.15783828988898596,
 0.16922148527512695,
 0.11520990848566481,
 0.13608337822577202,
 0.13843631872853038,
 0.1209458199151606,
 0.15063929461646705,
 0.15824477313745794,
 0.16099234075817762,
 0.1623009212228079,
 0.13282209064750949,
 0.14091951995550855,
 0.10854957422593087,
 0.1026332957273039,
 0.16105384612631024,
 0.1696786418366632,
 0.15433994341554408,
 0.11838494485467077,
 0.10218348915625526,
 0.12592776341857048,
 0.10859466873922989,
 0.15560197734035752,
 0.19422116766079608,
 0.19701199852983323,
 0.15675037723787794,
 0.1931926357096316,
 0.13348078275945283,
 0.1718342691760516,
 0.10349141509484101,
 0.15495971370576511,
 0.15503994788737016,
 0.17424363568865789,
 0.15876285093844647,
 0.12397453681807299,
 0.1536801890626644,
 0.11143831198758782,
 0.10400438817559332,
 0.18211900984872079,
 0.13529671554238459,
 0.16574181055861884,
 0.15118094749589664,
 0.18414363020756025,
 0.19685724640232771]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.1897984115244016,
 [(0, 124, 233), (7, 108, 86), (3, 83, 92), (4, 35, 38)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1897984115244016,
 [(0, 124, 233), (7, 108, 86), (3, 83, 92), (4, 35, 38)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.1897984115244016,
 [(0, 124, 233), (7, 108, 86), (3, 83, 92), (4, 35, 38)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1897984115244016,
 {(0, 124, 233): 4, (3, 83, 92): 4, (4, 35, 38): 4, (7, 108, 86): 4},
 [(0, 124, 233), (7, 108, 86), (3, 83, 92), (4, 35, 38)],
 [4, 4, 4, 4])
=============================================
=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 9,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
9 chargers generated:
[(0, 28, 1),
 (1, 27, 8),
 (2, 237, 144),
 (3, 136, 296),
 (4, 103, 233),
 (5, 98, 179),
 (6, 172, 236),
 (7, 5, 90),
 (8, 191, 158)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 235, 34),
 (1, 206, 233),
 (2, 204, 19),
 (3, 275, 238),
 (4, 86, 34),
 (5, 39, 95),
 (6, 193, 129),
 (7, 173, 105),
 (8, 112, 116),
 (9, 145, 163),
 (10, 233, 47),
 (11, 159, 142),
 (12, 58, 26),
 (13, 185, 18),
 (14, 230, 203),
 (15, 123, 172),
 (16, 135, 261),
 (17, 194, 44),
 (18, 110, 162),
 (19, 212, 92),
 (20, 43, 271),
 (21, 23, 108),
 (22, 247, 159),
 (23, 228, 240),
 (24, 179, 28),
 (25, 30, 122),
 (26, 108, 103),
 (27, 300, 149),
 (28, 4, 37),
 (29, 116, 134),
 (30, 60, 233),
 (31, 261, 153),
 (32, 155, 134),
 (33, 32, 27),
 (34, 138, 61),
 (35, 80, 149),
 (36, 170, 160),
 (37, 181, 36),
 (38, 195, 98),
 (39, 65, 55),
 (40, 280, 6),
 (41, 49, 74),
 (42, 69, 128),
 (43, 220, 75),
 (44, 21, 266),
 (45, 220, 172),
 (46, 163, 159),
 (47, 177, 244),
 (48, 296, 229),
 (49, 99, 150)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.11202111304216072,
 0.19968138287632109,
 0.18905508701359316,
 0.18322198835390635,
 0.18289259032695659,
 0.12747378869340156,
 0.1342165791380947,
 0.12040230338899539,
 0.10415369697845424,
 0.11726186572749871,
 0.18566169210029487,
 0.19707581402813429,
 0.12725198365230875,
 0.16439309889101181,
 0.15938738631345367,
 0.13902837801680759,
 0.15254118993405197,
 0.13849407803676458,
 0.12824761006502519,
 0.18779703329025604,
 0.14818761335217312,
 0.18102036276948558,
 0.19391488226199771,
 0.13530901981371074,
 0.17498160406934227,
 0.19167738017071603,
 0.10907934626312354,
 0.13288762004345245,
 0.11930532010617619,
 0.17963705267434379,
 0.15866290835002306,
 0.16458682719033846,
 0.18479865188615607,
 0.14266654469212578,
 0.194643620096148,
 0.11920045652072311,
 0.16837968304837336,
 0.13119209647465624,
 0.10981353812684286,
 0.19888246809702526,
 0.10151967187681218,
 0.12705520377773469,
 0.13221169912184244,
 0.14757218217182994,
 0.10039004514345448,
 0.14408354336373266,
 0.10979538175817455,
 0.11164044100862668,
 0.13798725608485451,
 0.19260515827123326]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 3, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.1789508839099119,
 [(8, 191, 158), (5, 98, 179), (2, 237, 144), (6, 172, 236)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1789508839099119,
 [(8, 191, 158), (5, 98, 179), (2, 237, 144), (6, 172, 236)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.1789508839099119,
 [(8, 191, 158), (5, 98, 179), (2, 237, 144), (6, 172, 236)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.2052712705640567,
 {(2, 237, 144): 4, (5, 98, 179): 4, (8, 191, 158): 4},
 [(8, 191, 158), (5, 98, 179), (2, 237, 144), (8, 191, 158), (2, 237, 144)],
 [4, 4, 4, 3, 1])
===================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 9,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
9 chargers generated:
[(0, 156, 217),
 (1, 22, 123),
 (2, 102, 151),
 (3, 64, 226),
 (4, 131, 60),
 (5, 275, 166),
 (6, 290, 4),
 (7, 101, 252),
 (8, 298, 37)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 16, 9),
 (1, 207, 30),
 (2, 220, 187),
 (3, 199, 214),
 (4, 185, 30),
 (5, 117, 244),
 (6, 206, 214),
 (7, 200, 130),
 (8, 20, 122),
 (9, 203, 135),
 (10, 205, 246),
 (11, 108, 55),
 (12, 291, 137),
 (13, 164, 22),
 (14, 56, 71),
 (15, 189, 10),
 (16, 136, 70),
 (17, 211, 135),
 (18, 184, 270),
 (19, 288, 272),
 (20, 282, 117),
 (21, 219, 273),
 (22, 203, 126),
 (23, 261, 173),
 (24, 40, 113),
 (25, 118, 238),
 (26, 78, 230),
 (27, 212, 299),
 (28, 7, 224),
 (29, 127, 287),
 (30, 47, 291),
 (31, 88, 21),
 (32, 44, 96),
 (33, 57, 223),
 (34, 135, 271),
 (35, 22, 226),
 (36, 111, 260),
 (37, 87, 99),
 (38, 15, 144),
 (39, 281, 212),
 (40, 145, 239),
 (41, 110, 94),
 (42, 196, 264),
 (43, 274, 117),
 (44, 4, 236),
 (45, 82, 168),
 (46, 234, 207),
 (47, 92, 281),
 (48, 125, 263),
 (49, 193, 180)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.13710162874513376,
 0.16279234817598265,
 0.17673464383830528,
 0.13266510433660639,
 0.15624556398091494,
 0.10511904795425062,
 0.16061695862980063,
 0.18520226795225572,
 0.13251800140337933,
 0.137580452817544,
 0.12167789466541459,
 0.12953570118157656,
 0.16700516695423573,
 0.12343100524268208,
 0.19032860875359267,
 0.14019677845501805,
 0.13343186914104335,
 0.14199126715147672,
 0.12053700725133798,
 0.13554524766076323,
 0.17243395273189099,
 0.16611254053072727,
 0.11528504367783574,
 0.19927005482829532,
 0.1305992301783947,
 0.1217400594232798,
 0.17355744920334101,
 0.14432996807571621,
 0.1087537830606268,
 0.15927354447922798,
 0.14851392022163312,
 0.17128616475019959,
 0.10398483061164032,
 0.19424254745659097,
 0.10684635859054452,
 0.13423996229388444,
 0.15598444150024071,
 0.12426860508934871,
 0.18885130095319475,
 0.14859680531798003,
 0.14092146944586478,
 0.16172430715439406,
 0.14831808163545465,
 0.16151705168596181,
 0.10102181962287876,
 0.12167078409298532,
 0.12224195816826511,
 0.19637019995425184,
 0.11278674470596384,
 0.19620800205004565]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.3014682818543872,
 [(7, 101, 252), (3, 64, 226), (0, 156, 217), (1, 22, 123)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.3014682818543872,
 [(7, 101, 252), (3, 64, 226), (0, 156, 217), (1, 22, 123)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.3014682818543872,
 [(7, 101, 252), (3, 64, 226), (0, 156, 217), (1, 22, 123)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.3014682818543872,
 {(0, 156, 217): 4, (1, 22, 123): 4, (3, 64, 226): 4, (7, 101, 252): 4},
 [(7, 101, 252), (3, 64, 226), (0, 156, 217), (1, 22, 123)],
 [4, 4, 4, 4])
============================================================
#           result of greedy part           #
=============================================
(1.671370849406941,
 {(2, 191, 266): 4, (8, 152, 297): 4},
 [(2, 191, 266), (2, 191, 266), (2, 191, 266), (8, 152, 297), (8, 152, 297)],
 [3, 4, 2, 4, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.2751743447757169,
 [(2, 191, 266), (4, 274, 236), (6, 33, 90), (8, 152, 297)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[4, 0, 3, 3, 2, 0, 2, 0, 2]
=============================================
#               solution Ran                #
=============================================
(0.91427214497382425,
 [(0, 263, 52),
  (2, 191, 266),
  (3, 151, 187),
  (4, 274, 236),
  (6, 33, 90),
  (8, 152, 297)],
 [4, 3, 3, 2, 2, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.3592122728175737,
 [(1, 112, 241), (2, 191, 266), (3, 151, 187), (8, 152, 297)],
 [4, 4, 4, 4])
=======================
#           result of greedy part           #
=============================================
(1.2052712705640567,
 {(2, 237, 144): 4, (5, 98, 179): 4, (8, 191, 158): 4},
 [(8, 191, 158), (5, 98, 179), (8, 191, 158), (2, 237, 144), (2, 237, 144)],
 [4, 4, 3, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.1789508839099121,
 [(2, 237, 144), (6, 172, 236), (8, 191, 158), (5, 98, 179)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[2, 0, 1, 2, 0, 4, 4, 0, 3]
=============================================
#               solution Ran                #
=============================================
(0.83455724133764408,
 [(0, 28, 1),
  (2, 237, 144),
  (3, 136, 296),
  (5, 98, 179),
  (6, 172, 236),
  (8, 191, 158)],
 [2, 1, 2, 4, 4, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.1789508839099119,
 [(2, 237, 144), (5, 98, 179), (6, 172, 236), (8, 191, 158)],
 [4, 4, 4, 4])
#           result of greedy part           #
=============================================
(1.158737685779069,
 {(0, 124, 233): 4, (3, 83, 92): 4, (4, 35, 38): 1, (7, 108, 86): 4},
 [(0, 124, 233), (7, 108, 86), (3, 83, 92), (3, 83, 92), (4, 35, 38)],
 [4, 4, 4, 3, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.1897984115244016,
 [(0, 124, 233), (4, 35, 38), (7, 108, 86), (3, 83, 92)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 1, 4, 3, 0, 4, 1, 0, 0]
=============================================
#               solution Ran                #
=============================================
(0.92655659374554933,
 [(0, 124, 233),
  (1, 245, 156),
  (2, 176, 161),
  (3, 83, 92),
  (5, 157, 255),
  (6, 192, 193)],
 [3, 1, 4, 3, 4, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.1897984115244016,
 [(0, 124, 233), (3, 83, 92), (4, 35, 38), (7, 108, 86)],
 [4, 4, 4, 4])
=========================
#           result of greedy part           #
=============================================
(1.4158738638688575,
 {(3, 64, 226): 4, (7, 101, 252): 4},
 [(7, 101, 252), (7, 101, 252), (7, 101, 252), (3, 64, 226), (3, 64, 226)],
 [3, 4, 2, 4, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.2549026661246738,
 [(3, 64, 226), (4, 131, 60), (1, 22, 123), (7, 101, 252)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[1, 0, 4, 4, 4, 0, 0, 0, 3]
=============================================
#               solution Ran                #
=============================================
(0.6962648197709761,
 [(0, 156, 217), (2, 102, 151), (3, 64, 226), (4, 131, 60), (8, 298, 37)],
 [1, 4, 4, 4, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.3014682818543872,
 [(0, 156, 217), (1, 22, 123), (3, 64, 226), (7, 101, 252)],
 [4, 4, 4, 4])
          result of greedy part           #
=============================================
(1.3047077367247857,
 {(2, 227, 79): 4, (3, 37, 264): 4},
 [(2, 227, 79), (2, 227, 79), (3, 37, 264), (3, 37, 264), (3, 37, 264)],
 [4, 3, 4, 3, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.88739920289339091,
 [(1, 153, 278), (3, 37, 264), (0, 165, 295), (2, 227, 79)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[1, 0, 0, 2, 1, 2, 4, 3, 3]
=============================================
#               solution Ran                #
=============================================
(0.46855438327170651,
 [(0, 165, 295),
  (3, 37, 264),
  (4, 215, 214),
  (5, 197, 36),
  (6, 113, 237),
  (7, 289, 267),
  (8, 178, 265)],
 [1, 2, 1, 2, 4, 3, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.1091693167481331,
 [(2, 227, 79), (3, 37, 264), (4, 215, 214), (5, 197, 36)],
 [4, 4, 4, 4])
=================
#           result of greedy part           #
=============================================
(1.1898370767296012,
 {(0, 200, 77): 4, (1, 150, 105): 4, (2, 13, 214): 4, (8, 228, 113): 4},
 [(1, 150, 105), (8, 228, 113), (2, 13, 214), (0, 200, 77)],
 [4, 4, 4, 4])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.1898370767296014,
 [(8, 228, 113), (0, 200, 77), (1, 150, 105), (2, 13, 214)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 0, 4, 3, 3, 0, 0, 4, 2]
=============================================
#               solution Ran                #
=============================================
(0.73730273565104787,
 [(2, 13, 214), (3, 296, 64), (4, 111, 173), (7, 42, 150), (8, 228, 113)],
 [4, 3, 3, 4, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.1898370767296014,
 [(0, 200, 77), (1, 150, 105), (2, 13, 214), (8, 228, 113)],
 [4, 4, 4, 4])
=================
#           result of greedy part           #
=============================================
(1.2568572579196167,
 {(0, 76, 269): 4, (7, 228, 269): 4},
 [(0, 76, 269), (0, 76, 269), (7, 228, 269), (7, 228, 269), (0, 76, 269)],
 [3, 4, 4, 3, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.0942366068345826,
 [(8, 185, 238), (0, 76, 269), (7, 228, 269), (3, 293, 282)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 3, 2, 2, 2, 0, 1, 2, 2]
=============================================
#               solution Ran                #
=============================================
(0.49408271137445259,
 [(1, 279, 207),
  (2, 277, 279),
  (3, 293, 282),
  (4, 277, 220),
  (6, 202, 284),
  (7, 228, 269),
  (8, 185, 238)],
 [3, 2, 2, 2, 1, 2, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.1203357901919817,
 [(0, 76, 269), (5, 60, 31), (7, 228, 269), (8, 185, 238)],
 [4, 4, 4, 4])
============
#           result of greedy part           #
=============================================
(1.080658492264289,
 {(1, 220, 7): 4, (3, 277, 219): 4},
 [(1, 220, 7), (1, 220, 7), (3, 277, 219), (1, 220, 7), (3, 277, 219)],
 [4, 3, 4, 2, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.0344651679621202,
 [(1, 220, 7), (3, 277, 219), (6, 119, 97), (2, 139, 71)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 0, 1, 4, 1, 4, 1, 0, 2]
=============================================
#               solution Ran                #
=============================================
(0.53020503940235164,
 [(0, 205, 238),
  (2, 139, 71),
  (3, 277, 219),
  (4, 293, 71),
  (5, 234, 284),
  (6, 119, 97),
  (8, 199, 238)],
 [3, 1, 4, 1, 4, 1, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.0344651679621202,
 [(1, 220, 7), (2, 139, 71), (3, 277, 219), (6, 119, 97)],
 [4, 4, 4, 4])
=========================
#           result of greedy part           #
=============================================
(1.1789855590630016,
 {(0, 67, 199): 4, (4, 37, 216): 4, (7, 128, 268): 4, (8, 251, 261): 4},
 [(0, 67, 199), (7, 128, 268), (8, 251, 261), (4, 37, 216)],
 [4, 4, 4, 4])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.1789855590630016,
 [(4, 37, 216), (7, 128, 268), (8, 251, 261), (0, 67, 199)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 0, 0, 0, 3, 4, 3, 3, 0]
=============================================
#               solution Ran                #
=============================================
(0.96321745260640312,
 [(0, 67, 199), (4, 37, 216), (5, 165, 36), (6, 51, 218), (7, 128, 268)],
 [3, 3, 4, 3, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.1789855590630016,
 [(0, 67, 199), (4, 37, 216), (7, 128, 268), (8, 251, 261)],
 [4, 4, 4, 4])
========================
#           result of greedy part           #
=============================================
(1.1560343961174631,
 {(3, 202, 131): 4, (6, 173, 132): 4, (7, 175, 279): 4},
 [(3, 202, 131), (6, 173, 132), (3, 202, 131), (7, 175, 279), (3, 202, 131)],
 [4, 4, 3, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.1587887947820914,
 [(6, 173, 132), (3, 202, 131), (7, 175, 279), (8, 84, 298)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 1, 0, 4, 0, 0, 3, 2, 3]
=============================================
#               solution Ran                #
=============================================
(0.89552497061280134,
 [(0, 169, 42),
  (1, 125, 77),
  (3, 202, 131),
  (6, 173, 132),
  (7, 175, 279),
  (8, 84, 298)],
 [3, 1, 4, 3, 2, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.1587887947820914,
 [(3, 202, 131), (6, 173, 132), (7, 175, 279), (8, 84, 298)],
 [4, 4, 4, 4])
{'B': 800,
 'M': 50,
 'N': 9,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
[{'A': (1.1897984115244016,
        [(0, 124, 233), (7, 108, 86), (3, 83, 92), (4, 35, 38)],
        [4, 4, 4, 4]),
  'B': (1.1897984115244016,
        [(0, 124, 233), (4, 35, 38), (7, 108, 86), (3, 83, 92)],
        [4, 4, 4, 4]),
  'Opt': (1.1897984115244016,
          [(0, 124, 233), (3, 83, 92), (4, 35, 38), (7, 108, 86)],
          [4, 4, 4, 4]),
  'Random': (0.92655659374554933,
             [(0, 124, 233),
              (1, 245, 156),
              (2, 176, 161),
              (3, 83, 92),
              (5, 157, 255),
              (6, 192, 193)],
             [3, 1, 4, 3, 4, 1])},
 {'A': (1.1091693167481331,
        [(2, 227, 79), (3, 37, 264), (4, 215, 214), (5, 197, 36)],
        [4, 4, 4, 4]),
  'B': (0.88739920289339091,
        [(1, 153, 278), (3, 37, 264), (0, 165, 295), (2, 227, 79)],
        [4, 4, 4, 4]),
  'Opt': (1.1091693167481331,
          [(2, 227, 79), (3, 37, 264), (4, 215, 214), (5, 197, 36)],
          [4, 4, 4, 4]),
  'Random': (0.46855438327170651,
             [(0, 165, 295),
              (3, 37, 264),
              (4, 215, 214),
              (5, 197, 36),
              (6, 113, 237),
              (7, 289, 267),
              (8, 178, 265)],
             [1, 2, 1, 2, 4, 3, 3])},
 {'A': (1.1789855590630016,
        [(0, 67, 199), (7, 128, 268), (8, 251, 261), (4, 37, 216)],
        [4, 4, 4, 4]),
  'B': (1.1789855590630016,
        [(4, 37, 216), (7, 128, 268), (8, 251, 261), (0, 67, 199)],
        [4, 4, 4, 4]),
  'Opt': (1.1789855590630016,
          [(0, 67, 199), (4, 37, 216), (7, 128, 268), (8, 251, 261)],
          [4, 4, 4, 4]),
  'Random': (0.96321745260640312,
             [(0, 67, 199),
              (4, 37, 216),
              (5, 165, 36),
              (6, 51, 218),
              (7, 128, 268)],
             [3, 3, 4, 3, 3])},
 {'A': (1.1587887947820914,
        [(3, 202, 131), (6, 173, 132), (7, 175, 279), (8, 84, 298)],
        [4, 4, 4, 4]),
  'B': (1.1587887947820914,
        [(6, 173, 132), (3, 202, 131), (7, 175, 279), (8, 84, 298)],
        [4, 4, 4, 4]),
  'Opt': (1.1587887947820914,
          [(3, 202, 131), (6, 173, 132), (7, 175, 279), (8, 84, 298)],
          [4, 4, 4, 4]),
  'Random': (0.89552497061280134,
             [(0, 169, 42),
              (1, 125, 77),
              (3, 202, 131),
              (6, 173, 132),
              (7, 175, 279),
              (8, 84, 298)],
             [3, 1, 4, 3, 2, 3])},
 {'A': (1.0344651679621202,
        [(1, 220, 7), (3, 277, 219), (6, 119, 97), (2, 139, 71)],
        [4, 4, 4, 4]),
  'B': (1.0344651679621202,
        [(1, 220, 7), (3, 277, 219), (6, 119, 97), (2, 139, 71)],
        [4, 4, 4, 4]),
  'Opt': (1.0344651679621202,
          [(1, 220, 7), (2, 139, 71), (3, 277, 219), (6, 119, 97)],
          [4, 4, 4, 4]),
  'Random': (0.53020503940235164,
             [(0, 205, 238),
              (2, 139, 71),
              (3, 277, 219),
              (4, 293, 71),
              (5, 234, 284),
              (6, 119, 97),
              (8, 199, 238)],
             [3, 1, 4, 1, 4, 1, 2])},
 {'A': (1.2349876868905516,
        [(2, 191, 266), (8, 152, 297), (3, 151, 187), (1, 112, 241)],
        [3, 4, 4, 4]),
  'B': (1.2751743447757169,
        [(2, 191, 266), (4, 274, 236), (6, 33, 90), (8, 152, 297)],
        [4, 4, 4, 4]),
  'Opt': (1.3592122728175737,
          [(1, 112, 241), (2, 191, 266), (3, 151, 187), (8, 152, 297)],
          [4, 4, 4, 4]),
  'Random': (0.91427214497382425,
             [(0, 263, 52),
              (2, 191, 266),
              (3, 151, 187),
              (4, 274, 236),
              (6, 33, 90),
              (8, 152, 297)],
             [4, 3, 3, 2, 2, 2])},
 {'A': (1.1789508839099119,
        [(8, 191, 158), (5, 98, 179), (2, 237, 144), (6, 172, 236)],
        [4, 4, 4, 4]),
  'B': (1.1789508839099121,
        [(2, 237, 144), (6, 172, 236), (8, 191, 158), (5, 98, 179)],
        [4, 4, 4, 4]),
  'Opt': (1.1789508839099119,
          [(2, 237, 144), (5, 98, 179), (6, 172, 236), (8, 191, 158)],
          [4, 4, 4, 4]),
  'Random': (0.83455724133764408,
             [(0, 28, 1),
              (2, 237, 144),
              (3, 136, 296),
              (5, 98, 179),
              (6, 172, 236),
              (8, 191, 158)],
             [2, 1, 2, 4, 4, 3])},
 {'A': (1.037957292411998,
        [(7, 228, 269), (8, 185, 238), (0, 76, 269), (5, 60, 31)],
        [4, 4, 3, 4]),
  'B': (1.0942366068345826,
        [(8, 185, 238), (0, 76, 269), (7, 228, 269), (3, 293, 282)],
        [4, 4, 4, 4]),
  'Opt': (1.1203357901919817,
          [(0, 76, 269), (5, 60, 31), (7, 228, 269), (8, 185, 238)],
          [4, 4, 4, 4]),
  'Random': (0.49408271137445259,
             [(1, 279, 207),
              (2, 277, 279),
              (3, 293, 282),
              (4, 277, 220),
              (6, 202, 284),
              (7, 228, 269),
              (8, 185, 238)],
             [3, 2, 2, 2, 1, 2, 2])},
 {'A': (1.1898370767296012,
        [(1, 150, 105), (8, 228, 113), (2, 13, 214), (0, 200, 77)],
        [4, 4, 4, 4]),
  'B': (1.1898370767296014,
        [(8, 228, 113), (0, 200, 77), (1, 150, 105), (2, 13, 214)],
        [4, 4, 4, 4]),
  'Opt': (1.1898370767296014,
          [(0, 200, 77), (1, 150, 105), (2, 13, 214), (8, 228, 113)],
          [4, 4, 4, 4]),
  'Random': (0.73730273565104787,
             [(2, 13, 214),
              (3, 296, 64),
              (4, 111, 173),
              (7, 42, 150),
              (8, 228, 113)],
             [4, 3, 3, 4, 2])},
 {'A': (1.3014682818543872,
        [(7, 101, 252), (3, 64, 226), (0, 156, 217), (1, 22, 123)],
        [4, 4, 4, 4]),
  'B': (1.2549026661246738,
        [(3, 64, 226), (4, 131, 60), (1, 22, 123), (7, 101, 252)],
        [4, 4, 4, 4]),
  'Opt': (1.3014682818543872,
          [(0, 156, 217), (1, 22, 123), (3, 64, 226), (7, 101, 252)],
          [4, 4, 4, 4]),
  'Random': (0.6962648197709761,
             [(0, 156, 217),
              (2, 102, 151),
              (3, 64, 226),
              (4, 131, 60),
              (8, 298, 37)],
             [1, 4, 4, 4, 3])}]
{'A': 1.1614408471876196,
 'B': 1.1442538714599491,
 'Opt': 1.1821011555583205,
 'Random': 0.74605380927467568}

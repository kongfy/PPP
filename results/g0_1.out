=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 93, 294),
 (1, 97, 120),
 (2, 273, 2),
 (3, 12, 219),
 (4, 36, 272),
 (5, 43, 24),
 (6, 262, 203),
 (7, 248, 267)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 29, 150),
 (1, 237, 8),
 (2, 187, 128),
 (3, 186, 209),
 (4, 212, 14),
 (5, 61, 242),
 (6, 0, 104),
 (7, 180, 117),
 (8, 211, 168),
 (9, 99, 135),
 (10, 40, 41),
 (11, 233, 121),
 (12, 230, 253),
 (13, 245, 263),
 (14, 21, 66),
 (15, 282, 226),
 (16, 294, 75),
 (17, 98, 173),
 (18, 207, 112),
 (19, 192, 126),
 (20, 151, 166),
 (21, 298, 176),
 (22, 156, 169),
 (23, 43, 0),
 (24, 105, 292),
 (25, 22, 257),
 (26, 94, 47),
 (27, 295, 260),
 (28, 253, 49),
 (29, 21, 12),
 (30, 200, 200),
 (31, 48, 72),
 (32, 87, 258),
 (33, 106, 30),
 (34, 122, 226),
 (35, 218, 82),
 (36, 63, 288),
 (37, 139, 121),
 (38, 115, 274),
 (39, 111, 1),
 (40, 13, 49),
 (41, 41, 47),
 (42, 65, 285),
 (43, 132, 20),
 (44, 100, 112),
 (45, 195, 219),
 (46, 16, 121),
 (47, 110, 202),
 (48, 253, 200),
 (49, 270, 40)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.12886535024290452,
 0.11843835499266503,
 0.13479304414102544,
 0.13518781257215812,
 0.14101519562446174,
 0.14244014149122533,
 0.15312991890338867,
 0.11029649899256122,
 0.1722930668225921,
 0.12547952159131676,
 0.17898234014585082,
 0.15246523454378474,
 0.12867009825670703,
 0.14186952839692496,
 0.18317664938841,
 0.18234311318804114,
 0.16542606509670948,
 0.11298035982576986,
 0.15526139593568195,
 0.12126247473609741,
 0.19287544420486494,
 0.18225877794167833,
 0.11871967099729042,
 0.11531304230897328,
 0.11459404974844334,
 0.11595147440288543,
 0.11241141295886979,
 0.17061540289455068,
 0.17983034653415653,
 0.10643039796060889,
 0.1554673330678486,
 0.17660021639936993,
 0.15233282957716759,
 0.12100788264266887,
 0.10130856636743329,
 0.19085875110725448,
 0.17020659859866469,
 0.19883493815489012,
 0.10933664581712653,
 0.14072753004501409,
 0.14951833499676015,
 0.11704244113705205,
 0.15017211628010016,
 0.15676564339830548,
 0.10912640214400342,
 0.11013968339456309,
 0.10127973635075622,
 0.12039522336312664,
 0.19780601592201541,
 0.1005855514132836]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.0711044627072925,
 [(5, 43, 24), (1, 97, 120), (0, 93, 294), (6, 262, 203)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0711044627072925,
 [(5, 43, 24), (1, 97, 120), (0, 93, 294), (6, 262, 203)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.0711044627072925,
 [(5, 43, 24), (1, 97, 120), (0, 93, 294), (6, 262, 203)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0711044627072925,
 {(0, 93, 294): 4, (1, 97, 120): 4, (5, 43, 24): 4, (6, 262, 203): 4},
 [(5, 43, 24), (1, 97, 120), (0, 93, 294), (6, 262, 203)],
 [4, 4, 4, 4])
=============================================
#           re=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 166, 237),
 (1, 217, 81),
 (2, 57, 178),
 (3, 111, 60),
 (4, 175, 189),
 (5, 157, 91),
 (6, 265, 152),
 (7, 152, 168)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 241, 41),
 (1, 67, 158),
 (2, 12, 134),
 (3, 37, 112),
 (4, 261, 144),
 (5, 12, 82),
 (6, 243, 1),
 (7, 49, 299),
 (8, 127, 73),
 (9, 2, 83),
 (10, 84, 106),
 (11, 164, 12),
 (12, 87, 251),
 (13, 124, 58),
 (14, 237, 120),
 (15, 104, 165),
 (16, 269, 113),
 (17, 24, 115),
 (18, 67, 134),
 (19, 72, 239),
 (20, 143, 45),
 (21, 195, 81),
 (22, 263, 193),
 (23, 244, 238),
 (24, 298, 89),
 (25, 217, 229),
 (26, 266, 41),
 (27, 113, 245),
 (28, 4, 280),
 (29, 62, 141),
 (30, 32, 139),
 (31, 91, 148),
 (32, 108, 206),
 (33, 142, 223),
 (34, 277, 145),
 (35, 30, 258),
 (36, 244, 8),
 (37, 211, 214),
 (38, 145, 20),
 (39, 172, 123),
 (40, 58, 287),
 (41, 241, 180),
 (42, 198, 60),
 (43, 218, 139),
 (44, 30, 78),
 (45, 285, 222),
 (46, 98, 202),
 (47, 127, 251),
 (48, 156, 70),
 (49, 226, 1)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.17217500936681424,
 0.13249424040973867,
 0.15315174879148258,
 0.19991370436960065,
 0.19493001624281547,
 0.10837020922429386,
 0.15986074757427043,
 0.15596444615575492,
 0.16497787371017858,
 0.16247002217209022,
 0.13871768970201537,
 0.16753790880948977,
 0.11254448979906932,
 0.18558434152879799,
 0.10100248581157106,
 0.10671016854866403,
 0.19887547639426129,
 0.13851689474504722,
 0.16868602882108641,
 0.1912472269501454,
 0.14561719149967958,
 0.12496649438863264,
 0.15712686339809995,
 0.14763539707391876,
 0.1063107624946833,
 0.12566729826223685,
 0.12013764288708262,
 0.11284446687057983,
 0.10115671958010562,
 0.15229494641939706,
 0.15462141502310364,
 0.11603142987771177,
 0.1040214834787779,
 0.16065151426972643,
 0.15577613599667009,
 0.18054049295503377,
 0.18106410319032876,
 0.17753323390325107,
 0.14637692612546499,
 0.15685769435821309,
 0.128532067298611,
 0.14205354236348,
 0.16715171004710086,
 0.1024929541426241,
 0.16718227688679432,
 0.12682906808248776,
 0.16993962723718392,
 0.190365577251419,
 0.16270929400481007,
 0.10482073608244974]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.0935515917252552,
 [(6, 265, 152), (2, 57, 178), (1, 217, 81), (5, 157, 91)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0935515917252552,
 [(6, 265, 152), (2, 57, 178), (1, 217, 81), (5, 157, 91)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.0935515917252552,
 [(6, 265, 152), (2, 57, 178), (1, 217, 81), (5, 157, 91)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0935515917252552,
 {(1, 217, 81): 4, (2, 57, 178): 4, (5, 157, 91): 4, (6, 265, 152): 4},
 [(6, 265, 152), (2, 57, 178), (1, 217, 81), (5, 157, 91)],
 [4, 4, 4, 4])
=============================================
#           =============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 54, 284),
 (1, 267, 106),
 (2, 97, 128),
 (3, 10, 45),
 (4, 143, 263),
 (5, 140, 1),
 (6, 205, 289),
 (7, 72, 110)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 152, 0),
 (1, 191, 93),
 (2, 14, 31),
 (3, 291, 147),
 (4, 162, 23),
 (5, 232, 88),
 (6, 181, 193),
 (7, 79, 124),
 (8, 158, 47),
 (9, 206, 224),
 (10, 33, 157),
 (11, 27, 199),
 (12, 225, 97),
 (13, 113, 143),
 (14, 251, 119),
 (15, 283, 256),
 (16, 245, 221),
 (17, 140, 14),
 (18, 121, 174),
 (19, 262, 70),
 (20, 283, 198),
 (21, 251, 264),
 (22, 297, 254),
 (23, 282, 297),
 (24, 128, 162),
 (25, 290, 86),
 (26, 88, 114),
 (27, 221, 263),
 (28, 44, 26),
 (29, 64, 22),
 (30, 188, 27),
 (31, 298, 57),
 (32, 24, 77),
 (33, 161, 279),
 (34, 266, 259),
 (35, 137, 6),
 (36, 124, 81),
 (37, 210, 2),
 (38, 108, 65),
 (39, 192, 188),
 (40, 112, 5),
 (41, 138, 263),
 (42, 201, 122),
 (43, 295, 41),
 (44, 77, 193),
 (45, 159, 279),
 (46, 133, 254),
 (47, 227, 154),
 (48, 83, 151),
 (49, 192, 279)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.14184610566737618,
 0.17570337481059364,
 0.19783251777219527,
 0.13013671395794355,
 0.13572796587952979,
 0.13888482789595635,
 0.11311748577371331,
 0.13310019720315647,
 0.14991710697785604,
 0.12460965577117261,
 0.19571479204202252,
 0.19984537110642003,
 0.10403735400658987,
 0.14352943354300524,
 0.18013980056365961,
 0.13935900269505838,
 0.1272994992637132,
 0.18863463862043303,
 0.1554585724494329,
 0.1020346592106212,
 0.11434433192562048,
 0.1324557773919719,
 0.19060353281499937,
 0.12512742548994202,
 0.1123127844617457,
 0.18381691681355419,
 0.11025844846252772,
 0.16844274181196467,
 0.10913781959265956,
 0.19909089436768568,
 0.10742812025227272,
 0.12600053273566247,
 0.11816200674416977,
 0.15936823342679851,
 0.14699164935719997,
 0.17591256952794881,
 0.18990914999335742,
 0.16387311887702061,
 0.19674200641808029,
 0.19036048748520198,
 0.11643798162086236,
 0.1715386640137897,
 0.17404075907667738,
 0.10162395030086332,
 0.15353290472906941,
 0.19918829788485992,
 0.19380010652735546,
 0.12864604657382372,
 0.1080209515090039,
 0.17500499149068741]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.2675431606006953,
 [(5, 140, 1), (4, 143, 263), (2, 97, 128), (1, 267, 106)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.2675431606006953,
 [(5, 140, 1), (4, 143, 263), (2, 97, 128), (1, 267, 106)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.2675431606006953,
 [(5, 140, 1), (4, 143, 263), (2, 97, 128), (1, 267, 106)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.34210848955049,
 {(2, 97, 128): 4, (4, 143, 263): 4, (5, 140, 1): 4},
 [(5, 140, 1), (4, 143, 263), (2, 97, 128), (5, 140, 1), (4, 143, 263)],
 [4, 4, 4, 3, 1])
=============================================
#        =============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 244, 246),
 (1, 134, 295),
 (2, 139, 263),
 (3, 286, 8),
 (4, 125, 57),
 (5, 90, 90),
 (6, 225, 236),
 (7, 28, 115)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 260, 87),
 (1, 247, 87),
 (2, 45, 245),
 (3, 23, 245),
 (4, 238, 79),
 (5, 216, 140),
 (6, 226, 109),
 (7, 61, 172),
 (8, 277, 238),
 (9, 7, 247),
 (10, 16, 60),
 (11, 92, 173),
 (12, 141, 104),
 (13, 242, 183),
 (14, 141, 226),
 (15, 165, 7),
 (16, 153, 239),
 (17, 70, 206),
 (18, 271, 139),
 (19, 241, 151),
 (20, 107, 266),
 (21, 144, 275),
 (22, 120, 195),
 (23, 43, 75),
 (24, 97, 177),
 (25, 27, 192),
 (26, 126, 141),
 (27, 262, 34),
 (28, 288, 73),
 (29, 299, 122),
 (30, 96, 158),
 (31, 212, 11),
 (32, 252, 62),
 (33, 235, 268),
 (34, 112, 90),
 (35, 82, 216),
 (36, 18, 145),
 (37, 63, 171),
 (38, 125, 243),
 (39, 43, 232),
 (40, 232, 9),
 (41, 185, 11),
 (42, 58, 32),
 (43, 177, 272),
 (44, 49, 74),
 (45, 212, 36),
 (46, 196, 164),
 (47, 85, 285),
 (48, 185, 183),
 (49, 67, 89)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.12561688494621873,
 0.15304351702152466,
 0.19462406697772303,
 0.16226036147397402,
 0.18313587420721095,
 0.17218502480990633,
 0.18123005891231642,
 0.1532079418605955,
 0.14124095322544097,
 0.10148834707726923,
 0.12815078815366962,
 0.18052428524210157,
 0.19212885595429086,
 0.17033278682130454,
 0.12212151074575416,
 0.10544361107678367,
 0.1191909237004576,
 0.13384482530997091,
 0.12580734886179881,
 0.15736557323094141,
 0.18698843630759901,
 0.15372607544219008,
 0.13840310665496003,
 0.13298920001027323,
 0.11158533495998647,
 0.11144096535269449,
 0.19317495720309966,
 0.13778131937687674,
 0.15939547974939189,
 0.12661470269716468,
 0.18427884238588871,
 0.19105692034547148,
 0.13749356523875611,
 0.1412368949290243,
 0.14381867186350483,
 0.10721815490918393,
 0.12146092584642496,
 0.18881503181046971,
 0.1561726978485467,
 0.12377328840614914,
 0.1546694532657033,
 0.13315362312470935,
 0.19953636444434575,
 0.10744150381439212,
 0.1206952320593407,
 0.18358036967686392,
 0.10705437653670678,
 0.13795389603096753,
 0.11316070456242143,
 0.19098359201833542]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.82790717163302663,
 [(2, 139, 263), (5, 90, 90), (7, 28, 115), (1, 134, 295)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.82790717163302663,
 [(2, 139, 263), (5, 90, 90), (7, 28, 115), (1, 134, 295)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.82790717163302663,
 [(2, 139, 263), (5, 90, 90), (7, 28, 115), (1, 134, 295)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.88629185228391427,
 {(2, 139, 263): 4, (5, 90, 90): 4, (7, 28, 115): 4},
 [(2, 139, 263), (5, 90, 90), (2, 139, 263), (7, 28, 115), (2, 139, 263)],
 [4, 4, 3, 4, 1])
=============================================
#  =============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 148, 143),
 (1, 100, 149),
 (2, 171, 187),
 (3, 61, 84),
 (4, 149, 187),
 (5, 220, 215),
 (6, 183, 9),
 (7, 78, 277)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 252, 108),
 (1, 234, 65),
 (2, 170, 77),
 (3, 262, 87),
 (4, 194, 263),
 (5, 182, 203),
 (6, 166, 95),
 (7, 20, 234),
 (8, 145, 53),
 (9, 65, 9),
 (10, 138, 86),
 (11, 246, 163),
 (12, 25, 149),
 (13, 19, 142),
 (14, 182, 98),
 (15, 163, 175),
 (16, 114, 16),
 (17, 274, 294),
 (18, 195, 78),
 (19, 281, 267),
 (20, 289, 44),
 (21, 197, 140),
 (22, 156, 244),
 (23, 195, 63),
 (24, 30, 77),
 (25, 37, 103),
 (26, 98, 184),
 (27, 135, 72),
 (28, 88, 11),
 (29, 54, 4),
 (30, 218, 235),
 (31, 202, 60),
 (32, 259, 88),
 (33, 176, 127),
 (34, 191, 215),
 (35, 34, 6),
 (36, 128, 273),
 (37, 97, 174),
 (38, 214, 39),
 (39, 280, 43),
 (40, 275, 163),
 (41, 269, 61),
 (42, 93, 168),
 (43, 271, 183),
 (44, 246, 121),
 (45, 64, 130),
 (46, 20, 243),
 (47, 169, 190),
 (48, 23, 75),
 (49, 203, 73)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.17062452953261889,
 0.10538591141774356,
 0.11790940568821873,
 0.17040372555543365,
 0.12305439991006634,
 0.12022636033615244,
 0.1550974715055021,
 0.16006630812350339,
 0.10752309847401864,
 0.16156111714956162,
 0.10897518205660033,
 0.17909430332960363,
 0.19337663802042959,
 0.14992730493864465,
 0.10937082534502478,
 0.15417656259003854,
 0.10978489679737177,
 0.17241038258313973,
 0.1009744204539406,
 0.10292447789568215,
 0.10225784889692795,
 0.11833724888340927,
 0.10929424669867414,
 0.10401093310306293,
 0.1406806535651618,
 0.16372757086784179,
 0.19968513090125389,
 0.1785334652429211,
 0.18863981262007135,
 0.17888267661324156,
 0.1672325589845588,
 0.14020103021529334,
 0.15706920611438541,
 0.15050002495993844,
 0.13943321560997823,
 0.10247019089964565,
 0.12166553770832531,
 0.15701949315833344,
 0.15002829437390081,
 0.17529295143295484,
 0.15830051878467352,
 0.15458379642021125,
 0.14627777682780235,
 0.10808952746758271,
 0.17505896888233227,
 0.12909411517608999,
 0.15811671746163566,
 0.17153756980838036,
 0.17059251052417679,
 0.13189997984698471]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.1229782820160792,
 [(2, 171, 187), (4, 149, 187), (0, 148, 143), (5, 220, 215)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1229782820160792,
 [(2, 171, 187), (4, 149, 187), (0, 148, 143), (5, 220, 215)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.1229782820160792,
 [(2, 171, 187), (4, 149, 187), (0, 148, 143), (5, 220, 215)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.184933365179424,
 {(0, 148, 143): 4, (2, 171, 187): 4, (4, 149, 187): 4},
 [(2, 171, 187), (4, 149, 187), (0, 148, 143), (2, 171, 187), (2, 171, 187)],
 [4, 4, 4, 3, 1])
=====================================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 209, 139),
 (1, 124, 262),
 (2, 169, 209),
 (3, 21, 157),
 (4, 283, 209),
 (5, 242, 118),
 (6, 135, 228),
 (7, 122, 203)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 269, 281),
 (1, 184, 274),
 (2, 236, 297),
 (3, 243, 146),
 (4, 12, 257),
 (5, 294, 102),
 (6, 250, 81),
 (7, 218, 166),
 (8, 298, 99),
 (9, 31, 54),
 (10, 51, 71),
 (11, 33, 31),
 (12, 182, 236),
 (13, 16, 210),
 (14, 218, 212),
 (15, 33, 35),
 (16, 180, 13),
 (17, 73, 116),
 (18, 158, 294),
 (19, 267, 137),
 (20, 224, 239),
 (21, 212, 232),
 (22, 130, 109),
 (23, 76, 167),
 (24, 243, 12),
 (25, 36, 201),
 (26, 283, 110),
 (27, 149, 64),
 (28, 141, 100),
 (29, 132, 220),
 (30, 185, 63),
 (31, 256, 167),
 (32, 68, 221),
 (33, 238, 77),
 (34, 8, 41),
 (35, 218, 2),
 (36, 157, 141),
 (37, 211, 291),
 (38, 42, 2),
 (39, 26, 132),
 (40, 153, 161),
 (41, 76, 284),
 (42, 165, 186),
 (43, 236, 193),
 (44, 85, 3),
 (45, 201, 213),
 (46, 6, 54),
 (47, 271, 49),
 (48, 252, 176),
 (49, 253, 231)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.1370725345431158,
 0.18823068207564359,
 0.18820519087238063,
 0.13277300012480706,
 0.11321062747156257,
 0.14341278659635862,
 0.1741315367096703,
 0.11270161254268031,
 0.12250831247929465,
 0.17098762975134174,
 0.1866640466179062,
 0.14164123356184405,
 0.18323978217961842,
 0.10942641815700517,
 0.1651064201058747,
 0.15831320221783293,
 0.1116414578381044,
 0.11869849990284384,
 0.1002110519822315,
 0.1539166487891222,
 0.14462922154896088,
 0.19068776826501443,
 0.11822158574760461,
 0.12698626474595029,
 0.17967816473351594,
 0.10809932451507008,
 0.17485861527051411,
 0.13552416077912349,
 0.11791405122251428,
 0.19055090846800851,
 0.12167324126735667,
 0.13830103850094744,
 0.11475751363675483,
 0.15071256960399149,
 0.17416711595905709,
 0.11124329334129163,
 0.16505347196794487,
 0.14929581105633866,
 0.1864779824567814,
 0.14196002652105988,
 0.14609257898768413,
 0.18422468258765712,
 0.16733986908896639,
 0.124092770470072,
 0.14313475250730032,
 0.18815659146333946,
 0.10284185335929454,
 0.10166593691571062,
 0.1648849140834571,
 0.13106821954071929]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.0225324831335083,
 [(5, 242, 118), (2, 169, 209), (0, 209, 139), (6, 135, 228)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0225324831335083,
 [(5, 242, 118), (2, 169, 209), (0, 209, 139), (6, 135, 228)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.0225324831335083,
 [(5, 242, 118), (2, 169, 209), (0, 209, 139), (6, 135, 228)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0225324831335083,
 {(0, 209, 139): 4, (2, 169, 209): 4, (5, 242, 118): 4, (6, 135, 228): 4},
 [(5, 242, 118), (2, 169, 209), (0, 209, 139), (6, 135, 228)],
 [4, 4, 4, 4])
==================================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 256, 178),
 (1, 245, 181),
 (2, 32, 82),
 (3, 204, 273),
 (4, 142, 257),
 (5, 59, 8),
 (6, 127, 79),
 (7, 151, 224)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 186, 282),
 (1, 258, 110),
 (2, 29, 277),
 (3, 47, 55),
 (4, 190, 137),
 (5, 225, 232),
 (6, 211, 156),
 (7, 227, 225),
 (8, 85, 178),
 (9, 23, 106),
 (10, 229, 192),
 (11, 66, 61),
 (12, 208, 193),
 (13, 232, 186),
 (14, 12, 215),
 (15, 197, 87),
 (16, 298, 39),
 (17, 205, 229),
 (18, 41, 17),
 (19, 104, 269),
 (20, 296, 101),
 (21, 209, 265),
 (22, 170, 5),
 (23, 40, 14),
 (24, 188, 235),
 (25, 9, 19),
 (26, 287, 55),
 (27, 223, 65),
 (28, 227, 109),
 (29, 101, 189),
 (30, 199, 37),
 (31, 53, 39),
 (32, 52, 140),
 (33, 289, 257),
 (34, 246, 268),
 (35, 176, 293),
 (36, 63, 117),
 (37, 142, 268),
 (38, 203, 154),
 (39, 280, 127),
 (40, 277, 132),
 (41, 125, 193),
 (42, 133, 123),
 (43, 8, 42),
 (44, 16, 40),
 (45, 226, 67),
 (46, 151, 38),
 (47, 94, 156),
 (48, 24, 246),
 (49, 145, 49)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.15592664094831635,
 0.15783107499690838,
 0.16175784791244133,
 0.13975724852207161,
 0.18779541193098842,
 0.12613343437493438,
 0.15051633090991118,
 0.14434995778273696,
 0.1383547330139468,
 0.12553068074032664,
 0.1124792613824518,
 0.14044256631789326,
 0.19079208793743208,
 0.13816012151196325,
 0.19469270176526762,
 0.10685519153135631,
 0.14988534396530206,
 0.19106469612170296,
 0.12216065527265241,
 0.11171303289448349,
 0.12782501752549078,
 0.19179367548732912,
 0.19762996907253563,
 0.13146958927100982,
 0.13132193712900134,
 0.1869591063185771,
 0.11632791476459393,
 0.18276522509759546,
 0.14018042433039887,
 0.11042922797898627,
 0.19517434341467171,
 0.18649680546168118,
 0.16379657398767766,
 0.1298954770097735,
 0.15813104475316342,
 0.16717320173086725,
 0.14232757757332676,
 0.15325963515688082,
 0.18388960823620804,
 0.13272458736858123,
 0.14124322148975599,
 0.19521157653759438,
 0.16260316249527057,
 0.17543140022856407,
 0.13910886777813875,
 0.18780858045739279,
 0.12238658321095881,
 0.18848986184146921,
 0.10866288459618124,
 0.10037114367843518]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.1226906668964267,
 [(1, 245, 181), (3, 204, 273), (0, 256, 178), (2, 32, 82)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1226906668964267,
 [(1, 245, 181), (3, 204, 273), (0, 256, 178), (2, 32, 82)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.1226906668964267,
 [(1, 245, 181), (3, 204, 273), (0, 256, 178), (2, 32, 82)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1226906668964267,
 {(0, 256, 178): 4, (1, 245, 181): 4, (2, 32, 82): 4, (3, 204, 273): 4},
 [(1, 245, 181), (3, 204, 273), (0, 256, 178), (2, 32, 82)],
 [4, 4, 4, 4])
========================================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 264, 131),
 (1, 73, 137),
 (2, 204, 45),
 (3, 276, 238),
 (4, 13, 30),
 (5, 57, 184),
 (6, 125, 215),
 (7, 80, 250)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 1, 72),
 (1, 42, 104),
 (2, 85, 126),
 (3, 267, 16),
 (4, 97, 209),
 (5, 192, 169),
 (6, 107, 177),
 (7, 100, 2),
 (8, 211, 159),
 (9, 14, 230),
 (10, 46, 25),
 (11, 8, 270),
 (12, 59, 149),
 (13, 202, 170),
 (14, 270, 157),
 (15, 78, 17),
 (16, 201, 87),
 (17, 196, 286),
 (18, 9, 160),
 (19, 209, 195),
 (20, 272, 71),
 (21, 212, 186),
 (22, 277, 117),
 (23, 287, 36),
 (24, 151, 257),
 (25, 63, 45),
 (26, 190, 96),
 (27, 147, 2),
 (28, 38, 143),
 (29, 291, 109),
 (30, 13, 4),
 (31, 257, 300),
 (32, 209, 3),
 (33, 248, 40),
 (34, 220, 59),
 (35, 152, 99),
 (36, 99, 46),
 (37, 280, 41),
 (38, 206, 285),
 (39, 230, 40),
 (40, 149, 229),
 (41, 59, 115),
 (42, 54, 145),
 (43, 189, 150),
 (44, 228, 187),
 (45, 248, 145),
 (46, 267, 46),
 (47, 199, 60),
 (48, 144, 24),
 (49, 105, 36)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.16739268261017942,
 0.18567378816974495,
 0.17355810633056334,
 0.15339001492873955,
 0.15889755978201081,
 0.17734606295990996,
 0.14217500971999503,
 0.16995238021775683,
 0.12328148417762171,
 0.10507610958288913,
 0.15082248108569318,
 0.19280135695439163,
 0.11550364021605639,
 0.18521442126478582,
 0.11118876205128264,
 0.10038806043208845,
 0.13956122625021949,
 0.13670302946619392,
 0.15562153700521286,
 0.13264846910458838,
 0.165233715240029,
 0.18939531052397762,
 0.11734791442442899,
 0.14061722604239885,
 0.16944421329904605,
 0.10008689597644851,
 0.1156366576907612,
 0.12985921246315152,
 0.18245440389713671,
 0.11005833674286018,
 0.18443820221126905,
 0.11754974597265799,
 0.15791709438001736,
 0.12403642357691382,
 0.10902821404766334,
 0.1605002098408943,
 0.1142972982395411,
 0.14795693109957916,
 0.12828502491620591,
 0.17593952798787338,
 0.1587090041197802,
 0.12404711477098049,
 0.15531468529623077,
 0.13618370280496844,
 0.14812142468262904,
 0.17767471714054239,
 0.12047818249960135,
 0.18125034551034327,
 0.14985301849725696,
 0.11768725741381501]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.1069858879620356,
 [(2, 204, 45), (1, 73, 137), (0, 264, 131), (5, 57, 184)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1069858879620356,
 [(2, 204, 45), (1, 73, 137), (0, 264, 131), (5, 57, 184)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.1069858879620356,
 [(2, 204, 45), (1, 73, 137), (0, 264, 131), (5, 57, 184)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1736291247052546,
 {(0, 264, 131): 4, (1, 73, 137): 4, (2, 204, 45): 4},
 [(2, 204, 45), (1, 73, 137), (0, 264, 131), (1, 73, 137), (1, 73, 137)],
 [4, 4, 4, 3, 1])
=============================================
#           re=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 86, 248),
 (1, 62, 296),
 (2, 97, 194),
 (3, 231, 236),
 (4, 296, 64),
 (5, 70, 152),
 (6, 263, 281),
 (7, 217, 30)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 137, 6),
 (1, 6, 190),
 (2, 159, 207),
 (3, 47, 118),
 (4, 197, 167),
 (5, 225, 283),
 (6, 295, 3),
 (7, 135, 40),
 (8, 143, 246),
 (9, 224, 76),
 (10, 158, 20),
 (11, 188, 264),
 (12, 262, 36),
 (13, 168, 134),
 (14, 79, 26),
 (15, 50, 32),
 (16, 146, 209),
 (17, 294, 272),
 (18, 252, 296),
 (19, 145, 37),
 (20, 204, 50),
 (21, 246, 145),
 (22, 167, 134),
 (23, 30, 32),
 (24, 254, 214),
 (25, 119, 237),
 (26, 186, 97),
 (27, 186, 56),
 (28, 90, 56),
 (29, 170, 198),
 (30, 220, 186),
 (31, 79, 147),
 (32, 72, 254),
 (33, 57, 79),
 (34, 214, 190),
 (35, 148, 173),
 (36, 296, 70),
 (37, 243, 142),
 (38, 178, 239),
 (39, 88, 155),
 (40, 219, 300),
 (41, 49, 150),
 (42, 223, 57),
 (43, 273, 278),
 (44, 91, 130),
 (45, 97, 228),
 (46, 145, 23),
 (47, 58, 267),
 (48, 255, 6),
 (49, 70, 123)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.18479426489081008,
 0.18261582431890744,
 0.11453152787455234,
 0.10615338371972528,
 0.12484175011477716,
 0.14642485804955868,
 0.1156599674329422,
 0.14955178192313026,
 0.14843581746221865,
 0.13446330576304658,
 0.17459234529833306,
 0.10572775553288771,
 0.19760752503850795,
 0.15764303450547859,
 0.16415399630568309,
 0.1715994091727403,
 0.13882371691985626,
 0.19830813152300364,
 0.13850125156747409,
 0.10936301233548024,
 0.18498943377715957,
 0.13087188859803028,
 0.10420134870294333,
 0.17453022302379179,
 0.10864542246182481,
 0.15855821455606334,
 0.19849086264484428,
 0.11500182403152116,
 0.16628269900712322,
 0.1831255241166666,
 0.18638628935261331,
 0.15333290352654413,
 0.14725648662898538,
 0.16207005008400532,
 0.19946199397358269,
 0.13077848349786303,
 0.19947675793162745,
 0.15078298736499932,
 0.11139566277030238,
 0.16237416214872261,
 0.11683896531578566,
 0.1791241913748346,
 0.10999242154596309,
 0.13628741906422903,
 0.16080716255299921,
 0.16506648280222502,
 0.12363167754767797,
 0.10889573443062361,
 0.17097948302491944,
 0.1243531330871061]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.0502180832770982,
 [(5, 70, 152), (7, 217, 30), (2, 97, 194), (6, 263, 281)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0502180832770982,
 [(5, 70, 152), (7, 217, 30), (2, 97, 194), (6, 263, 281)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.0502180832770982,
 [(5, 70, 152), (7, 217, 30), (2, 97, 194), (6, 263, 281)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0502180832770982,
 {(2, 97, 194): 4, (5, 70, 152): 4, (6, 263, 281): 4, (7, 217, 30): 4},
 [(5, 70, 152), (7, 217, 30), (2, 97, 194), (6, 263, 281)],
 [4, 4, 4, 4])
=============================================
#    =============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 71, 122),
 (1, 142, 49),
 (2, 293, 250),
 (3, 277, 227),
 (4, 62, 80),
 (5, 278, 72),
 (6, 78, 115),
 (7, 82, 183)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 182, 234),
 (1, 205, 116),
 (2, 91, 202),
 (3, 22, 218),
 (4, 16, 110),
 (5, 299, 61),
 (6, 3, 226),
 (7, 219, 112),
 (8, 189, 193),
 (9, 160, 111),
 (10, 201, 65),
 (11, 165, 217),
 (12, 227, 284),
 (13, 141, 2),
 (14, 94, 266),
 (15, 249, 117),
 (16, 17, 89),
 (17, 92, 153),
 (18, 42, 18),
 (19, 178, 296),
 (20, 282, 286),
 (21, 215, 167),
 (22, 193, 284),
 (23, 286, 78),
 (24, 284, 142),
 (25, 85, 249),
 (26, 131, 148),
 (27, 206, 163),
 (28, 39, 199),
 (29, 292, 245),
 (30, 88, 36),
 (31, 145, 167),
 (32, 228, 193),
 (33, 233, 66),
 (34, 33, 41),
 (35, 219, 176),
 (36, 223, 206),
 (37, 60, 278),
 (38, 85, 210),
 (39, 44, 86),
 (40, 44, 110),
 (41, 80, 53),
 (42, 14, 151),
 (43, 123, 76),
 (44, 62, 24),
 (45, 213, 300),
 (46, 167, 95),
 (47, 180, 227),
 (48, 43, 57),
 (49, 20, 203)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.12060621138448924,
 0.18089578486177041,
 0.16063730419663555,
 0.1058333740029688,
 0.17802674201416735,
 0.14403004202780667,
 0.11107843511895492,
 0.10262039664037587,
 0.17778899277458207,
 0.19823984739824968,
 0.1932133138183898,
 0.1583022716610622,
 0.19757444961317011,
 0.15293285224307418,
 0.15131271382647535,
 0.11864836218487905,
 0.1850023511025457,
 0.1833501406399583,
 0.15037769103975263,
 0.17249910431153492,
 0.1050960195686632,
 0.11138270449222383,
 0.19732841024840153,
 0.16601058202550228,
 0.19395870305801591,
 0.18695834355067295,
 0.16136035870347068,
 0.16502711846949336,
 0.13651409099998793,
 0.16346522955814335,
 0.18437067175518027,
 0.17391223602372641,
 0.15786392002412789,
 0.15361251233245246,
 0.12922726699928552,
 0.10318149100232434,
 0.13597294512226721,
 0.10731480211908642,
 0.19947455998175251,
 0.16897113248220016,
 0.13986204099500735,
 0.1528165665325133,
 0.14981731452474781,
 0.19487156670351716,
 0.11151804889175182,
 0.14722844968712528,
 0.18626389161110274,
 0.13258007288605389,
 0.14610287425579413,
 0.19086953789114655]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.92917776581791667,
 [(4, 62, 80), (7, 82, 183), (5, 278, 72), (6, 78, 115)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.92917776581791667,
 [(4, 62, 80), (7, 82, 183), (5, 278, 72), (6, 78, 115)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.92917776581791667,
 [(4, 62, 80), (7, 82, 183), (5, 278, 72), (6, 78, 115)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.96900898186190054,
 {(4, 62, 80): 4, (5, 278, 72): 4, (7, 82, 183): 4},
 [(4, 62, 80), (7, 82, 183), (4, 62, 80), (5, 278, 72), (5, 278, 72)],
 [4, 4, 3, 4, 1])
=============================================
#           resresult of greedy part           #
=============================================
(1.1073617759077363,
 {(2, 57, 178): 4, (6, 265, 152): 4},
 [(6, 265, 152), (2, 57, 178), (6, 265, 152), (6, 265, 152), (2, 57, 178)],
 [4, 4, 3, 2, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.0635314374464566,
 [(6, 265, 152), (3, 111, 60), (5, 157, 91), (2, 57, 178)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[4, 0, 1, 3, 0, 2, 4, 2]
=============================================
#               solution Ran                #
=============================================
(0.75654723080042297,
 [(0, 166, 237),
  (2, 57, 178),
  (3, 111, 60),
  (5, 157, 91),
  (6, 265, 152),
  (7, 152, 168)],
 [4, 1, 3, 2, 4, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.0935515917252552,
 [(1, 217, 81), (2, 57, 178), (5, 157, 91), (6, 265, 152)],
 [4, 4, 4, 4])
==
#           result of greedy part           #
=============================================
(1.1817064833797137,
 {(1, 245, 181): 4, (3, 204, 273): 4},
 [(1, 245, 181), (3, 204, 273), (3, 204, 273), (1, 245, 181), (3, 204, 273)],
 [4, 4, 3, 3, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.0672910559246604,
 [(4, 142, 257), (1, 245, 181), (3, 204, 273), (5, 59, 8)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[4, 1, 3, 1, 0, 1, 1, 2]
=============================================
#               solution Ran                #
=============================================
(0.55177002580401535,
 [(0, 256, 178),
  (1, 245, 181),
  (2, 32, 82),
  (3, 204, 273),
  (5, 59, 8),
  (6, 127, 79),
  (7, 151, 224)],
 [4, 1, 3, 1, 1, 1, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.1226906668964267,
 [(0, 256, 178), (1, 245, 181), (2, 32, 82), (3, 204, 273)],
 [4, 4, 4, 4])
   result of greedy part           #
=============================================
(1.3542684908443823,
 {(4, 143, 263): 4, (5, 140, 1): 4},
 [(5, 140, 1), (5, 140, 1), (5, 140, 1), (4, 143, 263), (4, 143, 263)],
 [4, 3, 2, 4, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.2629595877629702,
 [(7, 72, 110), (2, 97, 128), (4, 143, 263), (5, 140, 1)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[4, 1, 4, 0, 3, 1, 0, 3]
=============================================
#               solution Ran                #
=============================================
(0.75536048736684025,
 [(0, 54, 284),
  (1, 267, 106),
  (2, 97, 128),
  (4, 143, 263),
  (5, 140, 1),
  (7, 72, 110)],
 [4, 1, 4, 3, 1, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.2675431606006953,
 [(1, 267, 106), (2, 97, 128), (4, 143, 263), (5, 140, 1)],
 [4, 4, 4, 4])
ult of greedy part           #
=============================================
(0.98559292640898688,
 {(4, 62, 80): 4, (7, 82, 183): 4},
 [(4, 62, 80), (4, 62, 80), (7, 82, 183), (7, 82, 183), (4, 62, 80)],
 [4, 3, 4, 3, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.88220442275543309,
 [(4, 62, 80), (5, 278, 72), (2, 293, 250), (7, 82, 183)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 2, 2, 3, 3, 0, 3, 0]
=============================================
#               solution Ran                #
=============================================
(0.60886973527696875,
 [(0, 71, 122),
  (1, 142, 49),
  (2, 293, 250),
  (3, 277, 227),
  (4, 62, 80),
  (6, 78, 115)],
 [3, 2, 2, 3, 3, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.92917776581791667,
 [(4, 62, 80), (5, 278, 72), (6, 78, 115), (7, 82, 183)],
 [4, 4, 4, 4])
       result of greedy part           #
=============================================
(1.093181785390642,
 {(5, 70, 152): 4, (6, 263, 281): 3, (7, 217, 30): 4},
 [(5, 70, 152), (5, 70, 152), (5, 70, 152), (7, 217, 30), (6, 263, 281)],
 [4, 2, 3, 4, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.010878465566734,
 [(0, 86, 248), (5, 70, 152), (7, 217, 30), (6, 263, 281)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[4, 2, 3, 2, 4, 0, 0, 1]
=============================================
#               solution Ran                #
=============================================
(0.5970833841148262,
 [(0, 86, 248),
  (1, 62, 296),
  (2, 97, 194),
  (3, 231, 236),
  (4, 296, 64),
  (7, 217, 30)],
 [4, 2, 3, 2, 4, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.0502180832770982,
 [(2, 97, 194), (5, 70, 152), (6, 263, 281), (7, 217, 30)],
 [4, 4, 4, 4])
sult of greedy part           #
=============================================
(1.0997925251191754,
 {(0, 93, 294): 3, (1, 97, 120): 4, (5, 43, 24): 4},
 [(5, 43, 24), (5, 43, 24), (1, 97, 120), (5, 43, 24), (0, 93, 294)],
 [4, 3, 4, 2, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.0001237203722875,
 [(0, 93, 294), (1, 97, 120), (6, 262, 203), (7, 248, 267), (5, 43, 24)],
 [3, 4, 1, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 0, 0, 2, 1, 0, 3, 4]
=============================================
#               solution Ran                #
=============================================
(0.58097228069696716,
 [(0, 93, 294), (3, 12, 219), (4, 36, 272), (6, 262, 203), (7, 248, 267)],
 [3, 2, 1, 3, 4])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.0711044627072925,
 [(0, 93, 294), (1, 97, 120), (5, 43, 24), (6, 262, 203)],
 [4, 4, 4, 4])
         result of greedy part           #
=============================================
(0.94744726810934365,
 {(2, 139, 263): 4, (5, 90, 90): 4},
 [(2, 139, 263), (2, 139, 263), (2, 139, 263), (5, 90, 90), (5, 90, 90)],
 [4, 3, 2, 4, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.76223567397112357,
 [(1, 134, 295), (5, 90, 90), (0, 244, 246), (2, 139, 263)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 2, 2, 1, 2, 2, 4, 3]
=============================================
#               solution Ran                #
=============================================
(0.49091078793475529,
 [(1, 134, 295),
  (2, 139, 263),
  (3, 286, 8),
  (4, 125, 57),
  (5, 90, 90),
  (6, 225, 236),
  (7, 28, 115)],
 [2, 2, 1, 2, 2, 4, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.82790717163302663,
 [(1, 134, 295), (2, 139, 263), (5, 90, 90), (7, 28, 115)],
 [4, 4, 4, 4])
========
#           result of greedy part           #
=============================================
(1.0129955694373891,
 {(0, 209, 139): 4, (2, 169, 209): 4, (5, 242, 118): 4, (6, 135, 228): 1},
 [(5, 242, 118), (2, 169, 209), (0, 209, 139), (2, 169, 209), (6, 135, 228)],
 [4, 4, 4, 3, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.0225324831335083,
 [(5, 242, 118), (6, 135, 228), (2, 169, 209), (0, 209, 139)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 0, 1, 1, 2, 0, 0, 3]
=============================================
#               solution Ran                #
=============================================
(0.29989312597175827,
 [(0, 209, 139), (2, 169, 209), (3, 21, 157), (4, 283, 209), (7, 122, 203)],
 [3, 1, 1, 2, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.0225324831335083,
 [(0, 209, 139), (2, 169, 209), (5, 242, 118), (6, 135, 228)],
 [4, 4, 4, 4])
=====
#           result of greedy part           #
=============================================
(1.1965143842272403,
 {(2, 171, 187): 4, (4, 149, 187): 4},
 [(2, 171, 187), (2, 171, 187), (2, 171, 187), (4, 149, 187), (4, 149, 187)],
 [4, 3, 2, 3, 4])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.1004722886895866,
 [(2, 171, 187), (5, 220, 215), (1, 100, 149), (4, 149, 187)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 0, 3, 4, 0, 4, 2, 0]
=============================================
#               solution Ran                #
=============================================
(0.8542679677476317,
 [(0, 148, 143), (2, 171, 187), (3, 61, 84), (5, 220, 215), (6, 183, 9)],
 [3, 3, 4, 4, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.1229782820160792,
 [(0, 148, 143), (2, 171, 187), (4, 149, 187), (5, 220, 215)],
 [4, 4, 4, 4])
sult of greedy part           #
=============================================
(1.1736291247052546,
 {(0, 264, 131): 4, (1, 73, 137): 4, (2, 204, 45): 4},
 [(2, 204, 45), (1, 73, 137), (0, 264, 131), (1, 73, 137), (1, 73, 137)],
 [4, 4, 4, 3, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.0549189918747592,
 [(1, 73, 137), (4, 13, 30), (0, 264, 131), (2, 204, 45)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[4, 3, 3, 0, 4, 0, 2, 0]
=============================================
#               solution Ran                #
=============================================
(0.89332947064309542,
 [(0, 264, 131), (1, 73, 137), (2, 204, 45), (4, 13, 30), (6, 125, 215)],
 [4, 3, 3, 4, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.1069858879620356,
 [(0, 264, 131), (1, 73, 137), (2, 204, 45), (5, 57, 184)],
 [4, 4, 4, 4])
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
[{'A': (1.2675431606006953,
        [(5, 140, 1), (4, 143, 263), (2, 97, 128), (1, 267, 106)],
        [4, 4, 4, 4]),
  'B': (1.2629595877629702,
        [(7, 72, 110), (2, 97, 128), (4, 143, 263), (5, 140, 1)],
        [4, 4, 4, 4]),
  'Opt': (1.2675431606006953,
          [(1, 267, 106), (2, 97, 128), (4, 143, 263), (5, 140, 1)],
          [4, 4, 4, 4]),
  'Random': (0.75536048736684025,
             [(0, 54, 284),
              (1, 267, 106),
              (2, 97, 128),
              (4, 143, 263),
              (5, 140, 1),
              (7, 72, 110)],
             [4, 1, 4, 3, 1, 3])},
 {'A': (1.0502180832770982,
        [(5, 70, 152), (7, 217, 30), (2, 97, 194), (6, 263, 281)],
        [4, 4, 4, 4]),
  'B': (1.010878465566734,
        [(0, 86, 248), (5, 70, 152), (7, 217, 30), (6, 263, 281)],
        [4, 4, 4, 4]),
  'Opt': (1.0502180832770982,
          [(2, 97, 194), (5, 70, 152), (6, 263, 281), (7, 217, 30)],
          [4, 4, 4, 4]),
  'Random': (0.5970833841148262,
             [(0, 86, 248),
              (1, 62, 296),
              (2, 97, 194),
              (3, 231, 236),
              (4, 296, 64),
              (7, 217, 30)],
             [4, 2, 3, 2, 4, 1])},
 {'A': (1.1229782820160792,
        [(2, 171, 187), (4, 149, 187), (0, 148, 143), (5, 220, 215)],
        [4, 4, 4, 4]),
  'B': (1.1004722886895866,
        [(2, 171, 187), (5, 220, 215), (1, 100, 149), (4, 149, 187)],
        [4, 4, 4, 4]),
  'Opt': (1.1229782820160792,
          [(0, 148, 143), (2, 171, 187), (4, 149, 187), (5, 220, 215)],
          [4, 4, 4, 4]),
  'Random': (0.8542679677476317,
             [(0, 148, 143),
              (2, 171, 187),
              (3, 61, 84),
              (5, 220, 215),
              (6, 183, 9)],
             [3, 3, 4, 4, 2])},
 {'A': (1.1226906668964267,
        [(1, 245, 181), (3, 204, 273), (0, 256, 178), (2, 32, 82)],
        [4, 4, 4, 4]),
  'B': (1.0672910559246604,
        [(4, 142, 257), (1, 245, 181), (3, 204, 273), (5, 59, 8)],
        [4, 4, 4, 4]),
  'Opt': (1.1226906668964267,
          [(0, 256, 178), (1, 245, 181), (2, 32, 82), (3, 204, 273)],
          [4, 4, 4, 4]),
  'Random': (0.55177002580401535,
             [(0, 256, 178),
              (1, 245, 181),
              (2, 32, 82),
              (3, 204, 273),
              (5, 59, 8),
              (6, 127, 79),
              (7, 151, 224)],
             [4, 1, 3, 1, 1, 1, 2])},
 {'A': (1.0225324831335083,
        [(5, 242, 118), (2, 169, 209), (0, 209, 139), (6, 135, 228)],
        [4, 4, 4, 4]),
  'B': (1.0225324831335083,
        [(5, 242, 118), (6, 135, 228), (2, 169, 209), (0, 209, 139)],
        [4, 4, 4, 4]),
  'Opt': (1.0225324831335083,
          [(0, 209, 139), (2, 169, 209), (5, 242, 118), (6, 135, 228)],
          [4, 4, 4, 4]),
  'Random': (0.29989312597175827,
             [(0, 209, 139),
              (2, 169, 209),
              (3, 21, 157),
              (4, 283, 209),
              (7, 122, 203)],
             [3, 1, 1, 2, 3])},
 {'A': (1.0711044627072925,
        [(5, 43, 24), (1, 97, 120), (0, 93, 294), (6, 262, 203)],
        [4, 4, 4, 4]),
  'B': (1.0001237203722875,
        [(0, 93, 294),
         (1, 97, 120),
         (6, 262, 203),
         (7, 248, 267),
         (5, 43, 24)],
        [3, 4, 1, 4, 4]),
  'Opt': (1.0711044627072925,
          [(0, 93, 294), (1, 97, 120), (5, 43, 24), (6, 262, 203)],
          [4, 4, 4, 4]),
  'Random': (0.58097228069696716,
             [(0, 93, 294),
              (3, 12, 219),
              (4, 36, 272),
              (6, 262, 203),
              (7, 248, 267)],
             [3, 2, 1, 3, 4])},
 {'A': (0.82790717163302663,
        [(2, 139, 263), (5, 90, 90), (7, 28, 115), (1, 134, 295)],
        [4, 4, 4, 4]),
  'B': (0.76223567397112357,
        [(1, 134, 295), (5, 90, 90), (0, 244, 246), (2, 139, 263)],
        [4, 4, 4, 4]),
  'Opt': (0.82790717163302663,
          [(1, 134, 295), (2, 139, 263), (5, 90, 90), (7, 28, 115)],
          [4, 4, 4, 4]),
  'Random': (0.49091078793475529,
             [(1, 134, 295),
              (2, 139, 263),
              (3, 286, 8),
              (4, 125, 57),
              (5, 90, 90),
              (6, 225, 236),
              (7, 28, 115)],
             [2, 2, 1, 2, 2, 4, 3])},
 {'A': (1.0935515917252552,
        [(6, 265, 152), (2, 57, 178), (1, 217, 81), (5, 157, 91)],
        [4, 4, 4, 4]),
  'B': (1.0635314374464566,
        [(6, 265, 152), (3, 111, 60), (5, 157, 91), (2, 57, 178)],
        [4, 4, 4, 4]),
  'Opt': (1.0935515917252552,
          [(1, 217, 81), (2, 57, 178), (5, 157, 91), (6, 265, 152)],
          [4, 4, 4, 4]),
  'Random': (0.75654723080042297,
             [(0, 166, 237),
              (2, 57, 178),
              (3, 111, 60),
              (5, 157, 91),
              (6, 265, 152),
              (7, 152, 168)],
             [4, 1, 3, 2, 4, 2])},
 {'A': (0.92917776581791667,
        [(4, 62, 80), (7, 82, 183), (5, 278, 72), (6, 78, 115)],
        [4, 4, 4, 4]),
  'B': (0.88220442275543309,
        [(4, 62, 80), (5, 278, 72), (2, 293, 250), (7, 82, 183)],
        [4, 4, 4, 4]),
  'Opt': (0.92917776581791667,
          [(4, 62, 80), (5, 278, 72), (6, 78, 115), (7, 82, 183)],
          [4, 4, 4, 4]),
  'Random': (0.60886973527696875,
             [(0, 71, 122),
              (1, 142, 49),
              (2, 293, 250),
              (3, 277, 227),
              (4, 62, 80),
              (6, 78, 115)],
             [3, 2, 2, 3, 3, 3])},
 {'A': (1.1069858879620356,
        [(2, 204, 45), (1, 73, 137), (0, 264, 131), (5, 57, 184)],
        [4, 4, 4, 4]),
  'B': (1.0549189918747592,
        [(1, 73, 137), (4, 13, 30), (0, 264, 131), (2, 204, 45)],
        [4, 4, 4, 4]),
  'Opt': (1.1069858879620356,
          [(0, 264, 131), (1, 73, 137), (2, 204, 45), (5, 57, 184)],
          [4, 4, 4, 4]),
  'Random': (0.89332947064309542,
             [(0, 264, 131),
              (1, 73, 137),
              (2, 204, 45),
              (4, 13, 30),
              (6, 125, 215)],
             [4, 3, 3, 4, 2])}]
{'A': 1.0614689555769337,
 'B': 1.0227148127497521,
 'Opt': 1.0614689555769337,
 'Random': 0.63890044963572801}

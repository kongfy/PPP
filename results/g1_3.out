=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 135, 117),
 (1, 94, 60),
 (2, 20, 191),
 (3, 50, 179),
 (4, 246, 295),
 (5, 198, 231),
 (6, 101, 94),
 (7, 126, 141)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 218, 140),
 (1, 45, 8),
 (2, 264, 282),
 (3, 46, 40),
 (4, 205, 26),
 (5, 24, 182),
 (6, 118, 233),
 (7, 107, 202),
 (8, 162, 89),
 (9, 198, 91),
 (10, 176, 31),
 (11, 291, 36),
 (12, 58, 123),
 (13, 249, 10),
 (14, 68, 177),
 (15, 138, 201),
 (16, 203, 111),
 (17, 26, 22),
 (18, 255, 195),
 (19, 280, 199),
 (20, 67, 20),
 (21, 256, 80),
 (22, 263, 12),
 (23, 0, 9),
 (24, 174, 144),
 (25, 88, 260),
 (26, 85, 121),
 (27, 79, 38),
 (28, 129, 246),
 (29, 127, 297),
 (30, 159, 110),
 (31, 19, 265),
 (32, 156, 25),
 (33, 109, 189),
 (34, 13, 117),
 (35, 237, 271),
 (36, 113, 16),
 (37, 102, 199),
 (38, 204, 28),
 (39, 170, 299),
 (40, 178, 115),
 (41, 261, 243),
 (42, 134, 167),
 (43, 0, 240),
 (44, 280, 296),
 (45, 278, 295),
 (46, 194, 28),
 (47, 127, 21),
 (48, 78, 3),
 (49, 56, 36)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.19322503984384254,
 0.13815499533715839,
 0.18944527834408226,
 0.17272657259196694,
 0.18589389305475024,
 0.13412976066192134,
 0.10161151860640211,
 0.17340857856162945,
 0.19877654027045916,
 0.13367759426292503,
 0.1035468727029919,
 0.11176673746546449,
 0.19499686352473761,
 0.11724722399612426,
 0.1441926835562648,
 0.15538441426017521,
 0.18553897851502429,
 0.17896334497665367,
 0.18655546336394113,
 0.19040700088950832,
 0.16709704557426369,
 0.17494135075281553,
 0.14709303119632733,
 0.13048550438389506,
 0.19522313585854151,
 0.14542912339153569,
 0.17181938887331494,
 0.16414369688539265,
 0.15426461141685607,
 0.16973572765633724,
 0.12041902051660087,
 0.12194354492751062,
 0.12446069021052467,
 0.15902287123885009,
 0.17562460328850704,
 0.11914424440331507,
 0.14046497237566066,
 0.13708696086348379,
 0.1845475795904877,
 0.12977037189897764,
 0.15853627214365301,
 0.15017273651766552,
 0.11653659581902581,
 0.1996228161413264,
 0.19350226045106111,
 0.10945662300699224,
 0.18695440468497179,
 0.16720005350071906,
 0.14570738575715902,
 0.18600301963440954]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.88279000104220162,
 [(1, 94, 60), (7, 126, 141), (0, 135, 117), (3, 50, 179)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.88279000104220162,
 [(1, 94, 60), (7, 126, 141), (0, 135, 117), (3, 50, 179)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.88279000104220162,
 [(1, 94, 60), (7, 126, 141), (0, 135, 117), (3, 50, 179)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.88279000104220162,
 {(0, 135, 117): 4, (1, 94, 60): 4, (3, 50, 179): 4, (7, 126, 141): 4},
 [(1, 94, 60), (7, 126, 141), (0, 135, 117), (3, 50, 179)],
 [4, 4, 4, 4])
=============================================
#  =============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 69, 137),
 (1, 44, 284),
 (2, 70, 273),
 (3, 91, 149),
 (4, 280, 188),
 (5, 275, 197),
 (6, 118, 205),
 (7, 45, 280)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 148, 15),
 (1, 291, 113),
 (2, 94, 277),
 (3, 97, 286),
 (4, 20, 90),
 (5, 163, 141),
 (6, 199, 270),
 (7, 73, 112),
 (8, 13, 69),
 (9, 206, 234),
 (10, 290, 159),
 (11, 227, 163),
 (12, 147, 15),
 (13, 167, 278),
 (14, 107, 292),
 (15, 154, 27),
 (16, 7, 173),
 (17, 259, 254),
 (18, 153, 220),
 (19, 277, 87),
 (20, 50, 147),
 (21, 166, 216),
 (22, 99, 3),
 (23, 53, 67),
 (24, 186, 280),
 (25, 85, 19),
 (26, 211, 55),
 (27, 172, 0),
 (28, 114, 35),
 (29, 90, 137),
 (30, 169, 292),
 (31, 238, 218),
 (32, 58, 138),
 (33, 61, 2),
 (34, 112, 97),
 (35, 124, 260),
 (36, 95, 250),
 (37, 15, 84),
 (38, 243, 164),
 (39, 60, 29),
 (40, 134, 185),
 (41, 252, 264),
 (42, 167, 270),
 (43, 6, 162),
 (44, 232, 102),
 (45, 213, 121),
 (46, 260, 65),
 (47, 229, 80),
 (48, 141, 31),
 (49, 280, 261)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.14651598148637357,
 0.12282076269885772,
 0.10761875300469108,
 0.17685437252139488,
 0.13023936581320589,
 0.15928781824894991,
 0.11183116657016583,
 0.13775596592755918,
 0.14621710280636138,
 0.11214487126502802,
 0.17432983130736152,
 0.11348313443187374,
 0.19274880995953575,
 0.12169531370737342,
 0.19290853963412,
 0.14782313450591719,
 0.18596670278255062,
 0.10081616205740559,
 0.10641412173833469,
 0.1778762567280387,
 0.1466291001509446,
 0.12242166091850869,
 0.17232310378271848,
 0.13021699542454757,
 0.10622245471481806,
 0.10785215951593956,
 0.18423042610242837,
 0.18111234679388541,
 0.16301435178244317,
 0.13242801133466428,
 0.16728192523578589,
 0.17042974819955481,
 0.19886975901280049,
 0.18738751929426614,
 0.1878449653581834,
 0.18904512122201281,
 0.1393744767998375,
 0.13266403041582717,
 0.19278660289470567,
 0.16105888938255769,
 0.1724659813747505,
 0.12082577430503483,
 0.14245676852231742,
 0.11000540589931962,
 0.15729257452337406,
 0.19071700457934598,
 0.17889781907953617,
 0.14006363147820361,
 0.16272947464133744,
 0.14545519883391872]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 3, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.81879608743901777,
 [(0, 69, 137), (3, 91, 149), (6, 118, 205), (5, 275, 197)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.79108351913752051,
 [(0, 69, 137), (3, 91, 149), (6, 118, 205), (2, 70, 273)],
 [4, 4, 4, 3])
=============================================
#                solution A                 #
=============================================
(0.81879608743901777,
 [(0, 69, 137), (3, 91, 149), (6, 118, 205), (5, 275, 197)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.92414288265554179,
 {(0, 69, 137): 4, (3, 91, 149): 4, (6, 118, 205): 4},
 [(0, 69, 137), (3, 91, 149), (0, 69, 137), (6, 118, 205), (0, 69, 137)],
 [4, 4, 3, 4, 1])
=============================================
#   =============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 29, 194),
 (1, 194, 14),
 (2, 219, 78),
 (3, 117, 205),
 (4, 229, 205),
 (5, 175, 168),
 (6, 154, 55),
 (7, 230, 60)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 251, 157),
 (1, 140, 58),
 (2, 69, 199),
 (3, 86, 143),
 (4, 25, 268),
 (5, 96, 259),
 (6, 286, 179),
 (7, 26, 243),
 (8, 270, 259),
 (9, 218, 206),
 (10, 82, 143),
 (11, 188, 87),
 (12, 296, 42),
 (13, 68, 47),
 (14, 13, 9),
 (15, 116, 187),
 (16, 171, 155),
 (17, 61, 121),
 (18, 120, 109),
 (19, 165, 124),
 (20, 217, 286),
 (21, 131, 146),
 (22, 275, 108),
 (23, 188, 161),
 (24, 28, 175),
 (25, 170, 299),
 (26, 280, 175),
 (27, 255, 99),
 (28, 200, 134),
 (29, 97, 78),
 (30, 109, 274),
 (31, 291, 52),
 (32, 137, 46),
 (33, 184, 280),
 (34, 73, 172),
 (35, 104, 295),
 (36, 146, 282),
 (37, 275, 57),
 (38, 147, 249),
 (39, 293, 159),
 (40, 125, 113),
 (41, 214, 75),
 (42, 124, 186),
 (43, 117, 9),
 (44, 278, 191),
 (45, 128, 264),
 (46, 185, 244),
 (47, 41, 128),
 (48, 211, 53),
 (49, 95, 4)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.10801922363415202,
 0.12893946532550277,
 0.12923248305788818,
 0.10406051156556005,
 0.11634095841435077,
 0.17354116679811926,
 0.12373517125166707,
 0.15205711889086615,
 0.16079504879932482,
 0.14643203421015399,
 0.16121506103507904,
 0.11544134179686247,
 0.14899154741671655,
 0.10931084154382865,
 0.19975605336286939,
 0.18218147002064347,
 0.11140988570211847,
 0.1009178327419547,
 0.17784065164528914,
 0.18835633081179232,
 0.19018873028416963,
 0.10687121276247791,
 0.132630562631189,
 0.10011767633431212,
 0.16198187091486316,
 0.1838703261330526,
 0.11241899864849701,
 0.19925690341263463,
 0.16024695704067174,
 0.12534717978272694,
 0.19010108981701185,
 0.10437102331481894,
 0.13352697555281134,
 0.12242919648690458,
 0.10134403386000315,
 0.1084159822876047,
 0.10195423497908238,
 0.11810286360349342,
 0.13220818535316439,
 0.17404011859491669,
 0.14838344276238186,
 0.18581414944247726,
 0.11824641773688624,
 0.17491973284284384,
 0.18498827105817472,
 0.16457362497520389,
 0.11722481622552902,
 0.10293205292324006,
 0.15222231233613537,
 0.16945824904563095]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.1204623753935474,
 [(5, 175, 168), (3, 117, 205), (2, 219, 78), (6, 154, 55)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1204623753935474,
 [(5, 175, 168), (3, 117, 205), (2, 219, 78), (6, 154, 55)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.1204623753935474,
 [(5, 175, 168), (3, 117, 205), (2, 219, 78), (6, 154, 55)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1204623753935474,
 {(2, 219, 78): 4, (3, 117, 205): 4, (5, 175, 168): 4, (6, 154, 55): 4},
 [(5, 175, 168), (3, 117, 205), (2, 219, 78), (6, 154, 55)],
 [4, 4, 4, 4])
===================================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 81, 124),
 (1, 26, 52),
 (2, 246, 123),
 (3, 229, 209),
 (4, 234, 250),
 (5, 292, 34),
 (6, 191, 83),
 (7, 18, 157)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 254, 27),
 (1, 52, 242),
 (2, 195, 96),
 (3, 3, 162),
 (4, 154, 44),
 (5, 202, 7),
 (6, 49, 259),
 (7, 163, 43),
 (8, 94, 48),
 (9, 90, 105),
 (10, 293, 147),
 (11, 143, 277),
 (12, 93, 15),
 (13, 246, 208),
 (14, 240, 163),
 (15, 284, 92),
 (16, 112, 289),
 (17, 126, 23),
 (18, 49, 254),
 (19, 179, 254),
 (20, 101, 130),
 (21, 97, 13),
 (22, 219, 250),
 (23, 231, 70),
 (24, 7, 29),
 (25, 291, 116),
 (26, 121, 209),
 (27, 125, 195),
 (28, 53, 206),
 (29, 143, 232),
 (30, 153, 132),
 (31, 262, 131),
 (32, 268, 50),
 (33, 232, 23),
 (34, 99, 189),
 (35, 261, 280),
 (36, 72, 72),
 (37, 22, 296),
 (38, 93, 240),
 (39, 254, 246),
 (40, 153, 243),
 (41, 201, 91),
 (42, 234, 48),
 (43, 276, 69),
 (44, 165, 176),
 (45, 247, 55),
 (46, 232, 86),
 (47, 217, 226),
 (48, 17, 83),
 (49, 84, 20)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.10314280883736064,
 0.15486390549332271,
 0.12288902389222367,
 0.16728787578059728,
 0.15222412717829042,
 0.13605064567782815,
 0.11999173013736712,
 0.19392431000411575,
 0.13969329570157665,
 0.16445812624780989,
 0.13715667989288977,
 0.10346811484142976,
 0.13229262861314398,
 0.19788614087042083,
 0.13622017072270018,
 0.10308120392765956,
 0.11113335479993655,
 0.16474942047178107,
 0.15477597528219067,
 0.19300666667049726,
 0.12812021827267023,
 0.14231391103908536,
 0.12241774860858477,
 0.16561428305783438,
 0.15957830073708448,
 0.10103402118131923,
 0.13626167906003697,
 0.1739980579846972,
 0.19553727267410198,
 0.14426253852334936,
 0.17634451415295677,
 0.18468223482950807,
 0.12044938658838111,
 0.1017689109613417,
 0.11082779988606216,
 0.17813052419055853,
 0.10625061315492303,
 0.109020360827291,
 0.11890244862249841,
 0.12017528502990583,
 0.11067103062854039,
 0.16470115850821815,
 0.18063996972132543,
 0.10154126861556897,
 0.19183401200496386,
 0.16824644758942858,
 0.10924485841019596,
 0.15729511913019281,
 0.12554729990062935,
 0.17099723898425645]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.0103342028642655,
 [(6, 191, 83), (2, 246, 123), (4, 234, 250), (3, 229, 209)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0103342028642655,
 [(6, 191, 83), (2, 246, 123), (4, 234, 250), (3, 229, 209)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.0103342028642655,
 [(6, 191, 83), (2, 246, 123), (4, 234, 250), (3, 229, 209)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0103342028642655,
 {(2, 246, 123): 4, (3, 229, 209): 4, (4, 234, 250): 4, (6, 191, 83): 4},
 [(6, 191, 83), (2, 246, 123), (4, 234, 250), (3, 229, 209)],
 [4, 4, 4, 4])
========================================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 91, 248),
 (1, 142, 209),
 (2, 164, 197),
 (3, 291, 83),
 (4, 132, 198),
 (5, 162, 126),
 (6, 55, 52),
 (7, 298, 150)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 251, 90),
 (1, 264, 61),
 (2, 256, 57),
 (3, 284, 28),
 (4, 265, 42),
 (5, 127, 120),
 (6, 124, 200),
 (7, 181, 200),
 (8, 196, 245),
 (9, 189, 40),
 (10, 77, 22),
 (11, 83, 59),
 (12, 19, 47),
 (13, 135, 146),
 (14, 90, 133),
 (15, 56, 2),
 (16, 299, 92),
 (17, 285, 204),
 (18, 51, 105),
 (19, 292, 151),
 (20, 258, 66),
 (21, 114, 151),
 (22, 267, 80),
 (23, 238, 245),
 (24, 62, 131),
 (25, 132, 135),
 (26, 161, 282),
 (27, 296, 263),
 (28, 104, 260),
 (29, 279, 229),
 (30, 295, 217),
 (31, 196, 30),
 (32, 196, 197),
 (33, 298, 65),
 (34, 109, 235),
 (35, 161, 182),
 (36, 295, 189),
 (37, 177, 193),
 (38, 191, 26),
 (39, 168, 49),
 (40, 157, 67),
 (41, 194, 132),
 (42, 12, 110),
 (43, 166, 230),
 (44, 106, 220),
 (45, 236, 175),
 (46, 23, 276),
 (47, 297, 278),
 (48, 124, 238),
 (49, 179, 18)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.12326866184115509,
 0.15450140886859878,
 0.15892801076338503,
 0.12749922123229432,
 0.10379234797892388,
 0.10421595495122164,
 0.17995409250841182,
 0.15917730570193109,
 0.18099302436073161,
 0.11455975284551327,
 0.15222339340176483,
 0.15315281363694463,
 0.1221435533637726,
 0.19421280492874518,
 0.1013150981190256,
 0.18326621338470481,
 0.14584639522947165,
 0.18999065476820789,
 0.18229298417169562,
 0.14323066963928405,
 0.11575863061076536,
 0.10457643476468691,
 0.15012511538366666,
 0.16754902354309592,
 0.15720409318076919,
 0.11900609631323257,
 0.16041960200289135,
 0.15810877452671152,
 0.15348283169096605,
 0.17623662544511043,
 0.15427821309391077,
 0.16165255017720792,
 0.10925688395837307,
 0.10499453099669753,
 0.12102695974584446,
 0.17853381270023211,
 0.15135067851374534,
 0.13187539842529133,
 0.12755507311326042,
 0.15894542499193243,
 0.16970089248505169,
 0.19245843152631253,
 0.10622476083355961,
 0.19990447359560978,
 0.19250373189630862,
 0.18102029038326067,
 0.10144830376470114,
 0.15588752583227283,
 0.13471761162109594,
 0.11078033978726254]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.4669314801184226,
 [(2, 164, 197), (4, 132, 198), (1, 142, 209), (3, 291, 83)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.4669314801184226,
 [(2, 164, 197), (4, 132, 198), (1, 142, 209), (3, 291, 83)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.4669314801184226,
 [(2, 164, 197), (4, 132, 198), (1, 142, 209), (3, 291, 83)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.4669314801184226,
 {(1, 142, 209): 4, (2, 164, 197): 4, (3, 291, 83): 4, (4, 132, 198): 4},
 [(2, 164, 197), (4, 132, 198), (1, 142, 209), (3, 291, 83)],
 [4, 4, 4, 4])
========================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 93, 23),
 (1, 260, 47),
 (2, 147, 40),
 (3, 90, 252),
 (4, 222, 84),
 (5, 131, 27),
 (6, 300, 227),
 (7, 66, 115)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 232, 152),
 (1, 287, 5),
 (2, 242, 12),
 (3, 124, 126),
 (4, 158, 16),
 (5, 84, 172),
 (6, 149, 231),
 (7, 74, 217),
 (8, 272, 265),
 (9, 33, 219),
 (10, 272, 98),
 (11, 296, 204),
 (12, 71, 33),
 (13, 230, 31),
 (14, 148, 2),
 (15, 69, 230),
 (16, 27, 256),
 (17, 257, 166),
 (18, 21, 249),
 (19, 199, 36),
 (20, 250, 214),
 (21, 208, 194),
 (22, 35, 14),
 (23, 125, 177),
 (24, 264, 68),
 (25, 228, 85),
 (26, 40, 111),
 (27, 77, 44),
 (28, 2, 16),
 (29, 196, 288),
 (30, 9, 270),
 (31, 182, 3),
 (32, 173, 103),
 (33, 101, 210),
 (34, 100, 295),
 (35, 105, 207),
 (36, 21, 228),
 (37, 122, 279),
 (38, 270, 157),
 (39, 198, 47),
 (40, 18, 64),
 (41, 174, 161),
 (42, 211, 200),
 (43, 25, 157),
 (44, 148, 113),
 (45, 12, 262),
 (46, 35, 128),
 (47, 99, 283),
 (48, 291, 77),
 (49, 172, 236)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.1946540113169411,
 0.12063937608294456,
 0.13356288453521251,
 0.12899302851646038,
 0.19361097053280382,
 0.11674666919484013,
 0.19451081577427481,
 0.12030894318631272,
 0.17152956681379622,
 0.16763903111304346,
 0.10193476754384959,
 0.19132020445856615,
 0.12516958147783575,
 0.19688136880631471,
 0.16471823443566075,
 0.17253858843215458,
 0.14887054667885066,
 0.17004574770925068,
 0.14051827411299689,
 0.12323490857486356,
 0.18731617702483871,
 0.14816865010211433,
 0.18383457075521595,
 0.16523067136200756,
 0.12900830076574993,
 0.12166738252944581,
 0.14569643765500279,
 0.15009292119522868,
 0.17452380098980938,
 0.16062941078378734,
 0.12061887042966496,
 0.19217200751447611,
 0.11601820505055634,
 0.11093191006032081,
 0.10031501297139607,
 0.11320713456345873,
 0.11499934751362094,
 0.13415726821172744,
 0.14084142706508096,
 0.15691622582834741,
 0.11294108924636723,
 0.10424797874923028,
 0.12605128928074252,
 0.15368961515039836,
 0.13813498268194968,
 0.14914450327187173,
 0.15918977314348426,
 0.18076716369949675,
 0.12373638841562445,
 0.14901382349465261]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.96092805824993111,
 [(3, 90, 252), (4, 222, 84), (1, 260, 47), (2, 147, 40)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.96092805824993111,
 [(3, 90, 252), (4, 222, 84), (1, 260, 47), (2, 147, 40)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.96092805824993111,
 [(3, 90, 252), (4, 222, 84), (1, 260, 47), (2, 147, 40)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.96092805824993111,
 {(1, 260, 47): 4, (2, 147, 40): 4, (3, 90, 252): 4, (4, 222, 84): 4},
 [(3, 90, 252), (4, 222, 84), (1, 260, 47), (2, 147, 40)],
 [4, 4, 4, 4])
=============================================
#     =============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 38, 208),
 (1, 203, 213),
 (2, 293, 49),
 (3, 233, 200),
 (4, 40, 253),
 (5, 65, 266),
 (6, 161, 103),
 (7, 28, 90)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 58, 298),
 (1, 1, 279),
 (2, 220, 262),
 (3, 34, 259),
 (4, 248, 67),
 (5, 290, 170),
 (6, 29, 230),
 (7, 148, 5),
 (8, 87, 12),
 (9, 60, 110),
 (10, 217, 7),
 (11, 66, 115),
 (12, 232, 1),
 (13, 31, 226),
 (14, 105, 135),
 (15, 186, 70),
 (16, 248, 291),
 (17, 19, 106),
 (18, 272, 215),
 (19, 37, 86),
 (20, 236, 42),
 (21, 160, 268),
 (22, 295, 208),
 (23, 28, 198),
 (24, 246, 90),
 (25, 72, 148),
 (26, 119, 134),
 (27, 193, 290),
 (28, 180, 1),
 (29, 293, 101),
 (30, 34, 20),
 (31, 138, 234),
 (32, 14, 126),
 (33, 124, 26),
 (34, 67, 274),
 (35, 234, 281),
 (36, 202, 257),
 (37, 196, 219),
 (38, 231, 34),
 (39, 99, 79),
 (40, 126, 183),
 (41, 61, 83),
 (42, 24, 291),
 (43, 95, 115),
 (44, 19, 240),
 (45, 239, 90),
 (46, 204, 45),
 (47, 10, 99),
 (48, 139, 127),
 (49, 72, 281)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.11162793818121902,
 0.19869000957494309,
 0.11326478089211522,
 0.16399760957180987,
 0.14468874132603204,
 0.14719280566598442,
 0.19894874222891762,
 0.16299810626453665,
 0.16340428980028215,
 0.19011213171086991,
 0.17120180402469071,
 0.13386811773198709,
 0.13549150329732546,
 0.15598528036010251,
 0.15242214518807934,
 0.10069682691216028,
 0.12281939418926335,
 0.17231482829984451,
 0.18963750470596,
 0.1915861141075309,
 0.17611568447530865,
 0.1365704245190042,
 0.14654778226891935,
 0.12735689586884222,
 0.16613752590368036,
 0.15091195726719636,
 0.17861101205550012,
 0.11583902001673298,
 0.19192693552959231,
 0.14041327414815427,
 0.11619524082595649,
 0.14316064274317786,
 0.10956665924306765,
 0.13928913663296624,
 0.11781115984041492,
 0.19470183588922296,
 0.1336748773330092,
 0.15855868712822557,
 0.15917140204143124,
 0.16991579273174587,
 0.12756518218063073,
 0.14507621760971537,
 0.17752961506531387,
 0.18880306613671388,
 0.15853763943547564,
 0.15656893013679413,
 0.10298312502758696,
 0.19060038554299308,
 0.14486656416855551,
 0.16247210607188475]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 3, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.1895287131003229,
 [(7, 28, 90), (5, 65, 266), (4, 40, 253), (0, 38, 208)],
 [4, 4, 3, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1895287131003229,
 [(4, 40, 253), (7, 28, 90), (5, 65, 266), (0, 38, 208)],
 [3, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.1895287131003229,
 [(7, 28, 90), (5, 65, 266), (4, 40, 253), (0, 38, 208)],
 [4, 4, 3, 4])
=============================================
#           result of greedy part           #
=============================================
(1.3278159398284541,
 {(4, 40, 253): 4, (5, 65, 266): 4, (7, 28, 90): 4},
 [(4, 40, 253), (7, 28, 90), (5, 65, 266), (4, 40, 253), (7, 28, 90)],
 [4, 4, 4, 3, 1])
=============================================
#           result of gr=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 283, 225),
 (1, 78, 258),
 (2, 125, 277),
 (3, 34, 14),
 (4, 31, 24),
 (5, 49, 217),
 (6, 22, 26),
 (7, 175, 171)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 236, 184),
 (1, 209, 87),
 (2, 185, 37),
 (3, 142, 9),
 (4, 234, 29),
 (5, 269, 207),
 (6, 275, 32),
 (7, 279, 147),
 (8, 141, 116),
 (9, 297, 49),
 (10, 82, 231),
 (11, 87, 240),
 (12, 70, 21),
 (13, 130, 204),
 (14, 259, 224),
 (15, 152, 57),
 (16, 45, 130),
 (17, 10, 113),
 (18, 113, 153),
 (19, 149, 91),
 (20, 151, 86),
 (21, 211, 260),
 (22, 126, 126),
 (23, 77, 173),
 (24, 242, 12),
 (25, 39, 98),
 (26, 258, 195),
 (27, 216, 72),
 (28, 58, 255),
 (29, 190, 281),
 (30, 121, 292),
 (31, 148, 46),
 (32, 6, 151),
 (33, 117, 128),
 (34, 122, 173),
 (35, 4, 19),
 (36, 72, 197),
 (37, 114, 54),
 (38, 107, 33),
 (39, 183, 21),
 (40, 107, 214),
 (41, 248, 152),
 (42, 142, 33),
 (43, 200, 79),
 (44, 27, 235),
 (45, 146, 145),
 (46, 114, 174),
 (47, 191, 120),
 (48, 62, 170),
 (49, 153, 185)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.17729043465240021,
 0.12770802646605728,
 0.11811763096899484,
 0.17783732286527743,
 0.12175577797870839,
 0.17417354488801123,
 0.17383739792042552,
 0.16715444606041419,
 0.15870777203474401,
 0.10205036299230796,
 0.17308493623874427,
 0.15533497971706825,
 0.18310819421538568,
 0.13520890467239838,
 0.13626186274531926,
 0.18858293079860289,
 0.16911194355772308,
 0.12047638958123247,
 0.1569536665922458,
 0.17258443740233725,
 0.13488083376932816,
 0.19849009301907422,
 0.11982309547667366,
 0.13324068210188389,
 0.10672243801729205,
 0.10597086245612532,
 0.16496755280430411,
 0.11276090345048119,
 0.15100464738441069,
 0.18834077080741807,
 0.13318283963420152,
 0.17303908975742271,
 0.11069607257763558,
 0.14855292518094468,
 0.1498043262572506,
 0.16610751307709792,
 0.19269083344286123,
 0.17953977987096392,
 0.15662198332396865,
 0.11388556075375732,
 0.11827700932092533,
 0.14351450307468275,
 0.15756772840268074,
 0.12143817900943102,
 0.18245101570616348,
 0.14046470244304748,
 0.12447570439087494,
 0.15165863038308813,
 0.12950098934997453,
 0.17008866383260235]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.85409314861130281,
 [(5, 49, 217), (7, 175, 171), (1, 78, 258), (0, 283, 225)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.85409314861130281,
 [(5, 49, 217), (7, 175, 171), (1, 78, 258), (0, 283, 225)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.85409314861130281,
 [(5, 49, 217), (7, 175, 171), (1, 78, 258), (0, 283, 225)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.85409314861130281,
 {(0, 283, 225): 4, (1, 78, 258): 4, (5, 49, 217): 4, (7, 175, 171): 4},
 [(5, 49, 217), (7, 175, 171), (1, 78, 258), (0, 283, 225)],
 [4, 4, 4, 4])
====================================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 213, 243),
 (1, 134, 3),
 (2, 157, 0),
 (3, 24, 136),
 (4, 77, 235),
 (5, 193, 295),
 (6, 8, 288),
 (7, 1, 201)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 64, 270),
 (1, 94, 220),
 (2, 34, 72),
 (3, 135, 131),
 (4, 88, 30),
 (5, 186, 297),
 (6, 148, 22),
 (7, 165, 224),
 (8, 34, 166),
 (9, 26, 73),
 (10, 187, 181),
 (11, 183, 140),
 (12, 95, 74),
 (13, 191, 49),
 (14, 26, 57),
 (15, 157, 195),
 (16, 39, 271),
 (17, 284, 297),
 (18, 256, 234),
 (19, 213, 149),
 (20, 113, 49),
 (21, 104, 73),
 (22, 85, 59),
 (23, 166, 202),
 (24, 166, 182),
 (25, 272, 124),
 (26, 88, 154),
 (27, 67, 36),
 (28, 265, 157),
 (29, 173, 155),
 (30, 22, 173),
 (31, 275, 195),
 (32, 138, 211),
 (33, 182, 87),
 (34, 208, 162),
 (35, 287, 281),
 (36, 142, 149),
 (37, 4, 174),
 (38, 178, 160),
 (39, 106, 213),
 (40, 300, 14),
 (41, 80, 45),
 (42, 54, 157),
 (43, 237, 281),
 (44, 55, 176),
 (45, 211, 258),
 (46, 151, 113),
 (47, 36, 209),
 (48, 210, 125),
 (49, 276, 157)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.12816092374368773,
 0.15020231506923409,
 0.1947404969752487,
 0.17173374935819902,
 0.11471790275553405,
 0.11687574606490349,
 0.19588779099983183,
 0.15871975025035809,
 0.17661490303884089,
 0.17205844743178308,
 0.1561755455968265,
 0.13820425928407387,
 0.14601499274298352,
 0.10655925617374643,
 0.19826912529922472,
 0.12781723883518473,
 0.11193955698430376,
 0.14362717734755498,
 0.18066409511653791,
 0.16953018157174188,
 0.17009218057200826,
 0.19203114447302685,
 0.10536125361499797,
 0.17572077817063839,
 0.12045973822557136,
 0.19033787537229041,
 0.17661977607288337,
 0.18288265641389731,
 0.11877035925151046,
 0.14301370348481032,
 0.16487133342715504,
 0.1361175187487271,
 0.10758841217628015,
 0.12425672194026637,
 0.13637459066126251,
 0.1527575749227861,
 0.17176748880445833,
 0.15039319339642993,
 0.10076679853054453,
 0.1547281080840216,
 0.19398502915690946,
 0.17386888834974856,
 0.18025556845134103,
 0.12603181613279743,
 0.11839178573230358,
 0.19531186474998224,
 0.17430274155292602,
 0.17460130807915616,
 0.18572453569895409,
 0.17916732151936668]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.79969258257849873,
 [(0, 213, 243), (4, 77, 235), (3, 24, 136), (7, 1, 201)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.79969258257849873,
 [(0, 213, 243), (4, 77, 235), (3, 24, 136), (7, 1, 201)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.79969258257849873,
 [(0, 213, 243), (4, 77, 235), (3, 24, 136), (7, 1, 201)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.79969258257849873,
 {(0, 213, 243): 4, (3, 24, 136): 4, (4, 77, 235): 4, (7, 1, 201): 4},
 [(0, 213, 243), (4, 77, 235), (3, 24, 136), (7, 1, 201)],
 [4, 4, 4, 4])
=============================================
#    =============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 98, 127),
 (1, 262, 45),
 (2, 246, 103),
 (3, 144, 186),
 (4, 263, 120),
 (5, 300, 113),
 (6, 245, 207),
 (7, 11, 16)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 252, 294),
 (1, 125, 192),
 (2, 66, 135),
 (3, 79, 200),
 (4, 224, 115),
 (5, 280, 30),
 (6, 253, 72),
 (7, 252, 207),
 (8, 205, 150),
 (9, 113, 30),
 (10, 212, 172),
 (11, 67, 174),
 (12, 130, 85),
 (13, 213, 19),
 (14, 7, 110),
 (15, 240, 238),
 (16, 260, 281),
 (17, 236, 159),
 (18, 147, 161),
 (19, 112, 149),
 (20, 69, 20),
 (21, 77, 68),
 (22, 54, 43),
 (23, 195, 168),
 (24, 175, 167),
 (25, 183, 88),
 (26, 198, 222),
 (27, 110, 137),
 (28, 119, 60),
 (29, 77, 99),
 (30, 233, 171),
 (31, 299, 275),
 (32, 296, 77),
 (33, 208, 259),
 (34, 202, 125),
 (35, 288, 173),
 (36, 39, 139),
 (37, 118, 2),
 (38, 115, 167),
 (39, 105, 145),
 (40, 140, 150),
 (41, 103, 48),
 (42, 139, 106),
 (43, 204, 79),
 (44, 125, 232),
 (45, 226, 65),
 (46, 218, 94),
 (47, 126, 180),
 (48, 289, 223),
 (49, 298, 229)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.15034692898931004,
 0.18157815088486742,
 0.1873205853256957,
 0.19296970262021612,
 0.10175625190541679,
 0.19453516118744058,
 0.10389647879553843,
 0.16375289230264581,
 0.19038070695319437,
 0.1101616516003581,
 0.14946996471742113,
 0.1925529818038608,
 0.18258976807567767,
 0.17967024145486041,
 0.14966755065919501,
 0.17018100432315048,
 0.16849274774943226,
 0.17635629481255838,
 0.18248414158842158,
 0.19541531098559667,
 0.13470156072037309,
 0.10882151647011408,
 0.13988443198862885,
 0.17468303833454307,
 0.10093045896407163,
 0.18359042479824408,
 0.11774222196199216,
 0.17469284947896194,
 0.1156051277111048,
 0.14308151573126748,
 0.14075791474278673,
 0.11959603208009353,
 0.17019421516711961,
 0.10458580820527841,
 0.10960928565390503,
 0.11912488021232648,
 0.18566203214234195,
 0.14477094051875022,
 0.17701108022692824,
 0.17418220549250363,
 0.18978383762511516,
 0.10150575327193163,
 0.15290552976582733,
 0.14320174215263048,
 0.16378762167704686,
 0.18044908987205627,
 0.10621411027510241,
 0.13048385583976738,
 0.10123487585644586,
 0.16295189336916166]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.465880553871149,
 [(0, 98, 127), (3, 144, 186), (6, 245, 207), (2, 246, 103)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.465880553871149,
 [(0, 98, 127), (3, 144, 186), (6, 245, 207), (2, 246, 103)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.465880553871149,
 [(0, 98, 127), (3, 144, 186), (6, 245, 207), (2, 246, 103)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.465880553871149,
 {(0, 98, 127): 4, (2, 246, 103): 4, (3, 144, 186): 4, (6, 245, 207): 4},
 [(0, 98, 127), (3, 144, 186), (6, 245, 207), (2, 246, 103)],
 [4, 4, 4, 4])
================================        result of greedy part           #
=============================================
(0.93729196894110078,
 {(0, 69, 137): 4, (3, 91, 149): 4},
 [(0, 69, 137),
  (0, 69, 137),
  (0, 69, 137),
  (0, 69, 137),
  (3, 91, 149),
  (3, 91, 149)],
 [4, 3, 1, 2, 4, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.82925881316394157,
 [(6, 118, 205), (2, 70, 273), (0, 69, 137), (3, 91, 149)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 2, 1, 0, 4, 4, 2, 0]
=============================================
#               solution Ran                #
=============================================
(0.53200698502657107,
 [(0, 69, 137),
  (1, 44, 284),
  (2, 70, 273),
  (4, 280, 188),
  (5, 275, 197),
  (6, 118, 205)],
 [3, 2, 1, 4, 4, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.82925881316394157,
 [(0, 69, 137), (2, 70, 273), (3, 91, 149), (6, 118, 205)],
 [4, 4, 4, 4])
==
#           result of greedy part           #
=============================================
(1.0564702466031191,
 {(2, 246, 123): 4, (6, 191, 83): 4},
 [(6, 191, 83), (6, 191, 83), (2, 246, 123), (2, 246, 123), (6, 191, 83)],
 [4, 3, 4, 3, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.0103342028642655,
 [(4, 234, 250), (3, 229, 209), (6, 191, 83), (2, 246, 123)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 4, 3, 4, 0, 1, 0, 4]
=============================================
#               solution Ran                #
=============================================
(0.62684543008175608,
 [(1, 26, 52), (2, 246, 123), (3, 229, 209), (5, 292, 34), (7, 18, 157)],
 [4, 3, 4, 1, 4])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.0103342028642655,
 [(2, 246, 123), (3, 229, 209), (4, 234, 250), (6, 191, 83)],
 [4, 4, 4, 4])
      result of greedy part           #
=============================================
(0.98446049812133651,
 {(1, 260, 47): 4, (3, 90, 252): 4, (4, 222, 84): 4},
 [(3, 90, 252), (4, 222, 84), (3, 90, 252), (1, 260, 47), (4, 222, 84)],
 [4, 4, 3, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.91620053531601853,
 [(1, 260, 47), (3, 90, 252), (4, 222, 84), (0, 93, 23)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[2, 1, 3, 2, 4, 0, 1, 3]
=============================================
#               solution Ran                #
=============================================
(0.61156957943570667,
 [(0, 93, 23),
  (1, 260, 47),
  (2, 147, 40),
  (3, 90, 252),
  (4, 222, 84),
  (6, 300, 227),
  (7, 66, 115)],
 [2, 1, 3, 2, 4, 1, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.96092805824993111,
 [(1, 260, 47), (2, 147, 40), (3, 90, 252), (4, 222, 84)],
 [4, 4, 4, 4])
=======
#           result of greedy part           #
=============================================
(1.1204623753935474,
 {(2, 219, 78): 4, (3, 117, 205): 4, (5, 175, 168): 4, (6, 154, 55): 4},
 [(5, 175, 168), (3, 117, 205), (2, 219, 78), (6, 154, 55)],
 [4, 4, 4, 4])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.1204623753935474,
 [(2, 219, 78), (6, 154, 55), (5, 175, 168), (3, 117, 205)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[2, 0, 0, 3, 3, 2, 4, 1]
=============================================
#               solution Ran                #
=============================================
(0.74062662753763375,
 [(0, 29, 194),
  (3, 117, 205),
  (4, 229, 205),
  (5, 175, 168),
  (6, 154, 55),
  (7, 230, 60)],
 [2, 3, 3, 2, 4, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.1204623753935474,
 [(2, 219, 78), (3, 117, 205), (5, 175, 168), (6, 154, 55)],
 [4, 4, 4, 4])
======
#           result of greedy part           #
=============================================
(0.87338982533662013,
 {(1, 78, 258): 4, (5, 49, 217): 4, (7, 175, 171): 4},
 [(5, 49, 217), (7, 175, 171), (1, 78, 258), (1, 78, 258), (1, 78, 258)],
 [4, 4, 4, 3, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.85409314861130281,
 [(7, 175, 171), (1, 78, 258), (5, 49, 217), (0, 283, 225)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[1, 4, 2, 0, 4, 1, 2, 2]
=============================================
#               solution Ran                #
=============================================
(0.43398232992502794,
 [(0, 283, 225),
  (1, 78, 258),
  (2, 125, 277),
  (4, 31, 24),
  (5, 49, 217),
  (6, 22, 26),
  (7, 175, 171)],
 [1, 4, 2, 4, 1, 2, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.85409314861130281,
 [(0, 283, 225), (1, 78, 258), (5, 49, 217), (7, 175, 171)],
 [4, 4, 4, 4])
==================
#           result of greedy part           #
=============================================
(1.4629523770880748,
 {(1, 142, 209): 4, (2, 164, 197): 4, (4, 132, 198): 4},
 [(2, 164, 197), (4, 132, 198), (2, 164, 197), (1, 142, 209), (2, 164, 197)],
 [4, 4, 3, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.4669314801184226,
 [(3, 291, 83), (4, 132, 198), (1, 142, 209), (2, 164, 197)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[1, 4, 1, 0, 4, 3, 0, 3]
=============================================
#               solution Ran                #
=============================================
(1.0785456242756692,
 [(0, 91, 248),
  (1, 142, 209),
  (2, 164, 197),
  (4, 132, 198),
  (5, 162, 126),
  (7, 298, 150)],
 [1, 4, 1, 4, 3, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.4669314801184226,
 [(1, 142, 209), (2, 164, 197), (3, 291, 83), (4, 132, 198)],
 [4, 4, 4, 4])
=============
#           result of greedy part           #
=============================================
(1.5283852420483794,
 {(0, 98, 127): 4, (3, 144, 186): 4},
 [(0, 98, 127), (3, 144, 186), (0, 98, 127), (3, 144, 186), (0, 98, 127)],
 [4, 4, 3, 3, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.3550925392050519,
 [(3, 144, 186), (6, 245, 207), (0, 98, 127), (1, 262, 45)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 4, 0, 4, 4, 0, 0, 1]
=============================================
#               solution Ran                #
=============================================
(1.0800557128674693,
 [(0, 98, 127), (1, 262, 45), (3, 144, 186), (4, 263, 120), (7, 11, 16)],
 [3, 4, 4, 4, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.465880553871149,
 [(0, 98, 127), (2, 246, 103), (3, 144, 186), (6, 245, 207)],
 [4, 4, 4, 4])
       result of greedy part           #
=============================================
(0.79625775059418202,
 {(0, 213, 243): 4, (3, 24, 136): 4, (4, 77, 235): 4, (5, 193, 295): 1},
 [(0, 213, 243), (4, 77, 235), (3, 24, 136), (3, 24, 136), (5, 193, 295)],
 [4, 4, 4, 3, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.79969258257849873,
 [(7, 1, 201), (3, 24, 136), (0, 213, 243), (4, 77, 235)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 2, 2, 0, 2, 4, 2, 1]
=============================================
#               solution Ran                #
=============================================
(0.40159167789773698,
 [(0, 213, 243),
  (1, 134, 3),
  (2, 157, 0),
  (4, 77, 235),
  (5, 193, 295),
  (6, 8, 288),
  (7, 1, 201)],
 [3, 2, 2, 2, 4, 2, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.79969258257849873,
 [(0, 213, 243), (3, 24, 136), (4, 77, 235), (7, 1, 201)],
 [4, 4, 4, 4])
eedy part           #
=============================================
(1.3489726641554249,
 {(4, 40, 253): 4, (5, 65, 266): 3, (7, 28, 90): 4},
 [(4, 40, 253), (4, 40, 253), (7, 28, 90), (4, 40, 253), (5, 65, 266)],
 [3, 4, 4, 2, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.276647173910445,
 [(7, 28, 90), (5, 65, 266), (4, 40, 253), (0, 38, 208)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[2, 4, 2, 3, 0, 0, 3, 2]
=============================================
#               solution Ran                #
=============================================
(0.62100468396500696,
 [(0, 38, 208),
  (1, 203, 213),
  (2, 293, 49),
  (3, 233, 200),
  (6, 161, 103),
  (7, 28, 90)],
 [2, 4, 2, 3, 3, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.276647173910445,
 [(0, 38, 208), (4, 40, 253), (5, 65, 266), (7, 28, 90)],
 [4, 4, 4, 4])
         result of greedy part           #
=============================================
(0.85923700688135385,
 {(0, 135, 117): 4, (1, 94, 60): 4, (3, 50, 179): 1, (7, 126, 141): 4},
 [(1, 94, 60), (7, 126, 141), (0, 135, 117), (7, 126, 141), (3, 50, 179)],
 [4, 4, 4, 3, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.88279000104220173,
 [(3, 50, 179), (1, 94, 60), (7, 126, 141), (0, 135, 117)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 3, 3, 4, 2, 0, 2, 1]
=============================================
#               solution Ran                #
=============================================
(0.51169195268945433,
 [(1, 94, 60),
  (2, 20, 191),
  (3, 50, 179),
  (4, 246, 295),
  (6, 101, 94),
  (7, 126, 141)],
 [3, 3, 4, 2, 2, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.88279000104220173,
 [(0, 135, 117), (1, 94, 60), (3, 50, 179), (7, 126, 141)],
 [4, 4, 4, 4])
{'B': 800,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
[{'A': (1.1895287131003229,
        [(7, 28, 90), (5, 65, 266), (4, 40, 253), (0, 38, 208)],
        [4, 4, 3, 4]),
  'B': (1.276647173910445,
        [(7, 28, 90), (5, 65, 266), (4, 40, 253), (0, 38, 208)],
        [4, 4, 4, 4]),
  'Opt': (1.276647173910445,
          [(0, 38, 208), (4, 40, 253), (5, 65, 266), (7, 28, 90)],
          [4, 4, 4, 4]),
  'Random': (0.62100468396500696,
             [(0, 38, 208),
              (1, 203, 213),
              (2, 293, 49),
              (3, 233, 200),
              (6, 161, 103),
              (7, 28, 90)],
             [2, 4, 2, 3, 3, 2])},
 {'A': (1.0103342028642655,
        [(6, 191, 83), (2, 246, 123), (4, 234, 250), (3, 229, 209)],
        [4, 4, 4, 4]),
  'B': (1.0103342028642655,
        [(4, 234, 250), (3, 229, 209), (6, 191, 83), (2, 246, 123)],
        [4, 4, 4, 4]),
  'Opt': (1.0103342028642655,
          [(2, 246, 123), (3, 229, 209), (4, 234, 250), (6, 191, 83)],
          [4, 4, 4, 4]),
  'Random': (0.62684543008175608,
             [(1, 26, 52),
              (2, 246, 123),
              (3, 229, 209),
              (5, 292, 34),
              (7, 18, 157)],
             [4, 3, 4, 1, 4])},
 {'A': (1.465880553871149,
        [(0, 98, 127), (3, 144, 186), (6, 245, 207), (2, 246, 103)],
        [4, 4, 4, 4]),
  'B': (1.3550925392050519,
        [(3, 144, 186), (6, 245, 207), (0, 98, 127), (1, 262, 45)],
        [4, 4, 4, 4]),
  'Opt': (1.465880553871149,
          [(0, 98, 127), (2, 246, 103), (3, 144, 186), (6, 245, 207)],
          [4, 4, 4, 4]),
  'Random': (1.0800557128674693,
             [(0, 98, 127),
              (1, 262, 45),
              (3, 144, 186),
              (4, 263, 120),
              (7, 11, 16)],
             [3, 4, 4, 4, 1])},
 {'A': (0.85409314861130281,
        [(5, 49, 217), (7, 175, 171), (1, 78, 258), (0, 283, 225)],
        [4, 4, 4, 4]),
  'B': (0.85409314861130281,
        [(7, 175, 171), (1, 78, 258), (5, 49, 217), (0, 283, 225)],
        [4, 4, 4, 4]),
  'Opt': (0.85409314861130281,
          [(0, 283, 225), (1, 78, 258), (5, 49, 217), (7, 175, 171)],
          [4, 4, 4, 4]),
  'Random': (0.43398232992502794,
             [(0, 283, 225),
              (1, 78, 258),
              (2, 125, 277),
              (4, 31, 24),
              (5, 49, 217),
              (6, 22, 26),
              (7, 175, 171)],
             [1, 4, 2, 4, 1, 2, 2])},
 {'A': (0.88279000104220162,
        [(1, 94, 60), (7, 126, 141), (0, 135, 117), (3, 50, 179)],
        [4, 4, 4, 4]),
  'B': (0.88279000104220173,
        [(3, 50, 179), (1, 94, 60), (7, 126, 141), (0, 135, 117)],
        [4, 4, 4, 4]),
  'Opt': (0.88279000104220173,
          [(0, 135, 117), (1, 94, 60), (3, 50, 179), (7, 126, 141)],
          [4, 4, 4, 4]),
  'Random': (0.51169195268945433,
             [(1, 94, 60),
              (2, 20, 191),
              (3, 50, 179),
              (4, 246, 295),
              (6, 101, 94),
              (7, 126, 141)],
             [3, 3, 4, 2, 2, 1])},
 {'A': (1.4669314801184226,
        [(2, 164, 197), (4, 132, 198), (1, 142, 209), (3, 291, 83)],
        [4, 4, 4, 4]),
  'B': (1.4669314801184226,
        [(3, 291, 83), (4, 132, 198), (1, 142, 209), (2, 164, 197)],
        [4, 4, 4, 4]),
  'Opt': (1.4669314801184226,
          [(1, 142, 209), (2, 164, 197), (3, 291, 83), (4, 132, 198)],
          [4, 4, 4, 4]),
  'Random': (1.0785456242756692,
             [(0, 91, 248),
              (1, 142, 209),
              (2, 164, 197),
              (4, 132, 198),
              (5, 162, 126),
              (7, 298, 150)],
             [1, 4, 1, 4, 3, 3])},
 {'A': (1.1204623753935474,
        [(5, 175, 168), (3, 117, 205), (2, 219, 78), (6, 154, 55)],
        [4, 4, 4, 4]),
  'B': (1.1204623753935474,
        [(2, 219, 78), (6, 154, 55), (5, 175, 168), (3, 117, 205)],
        [4, 4, 4, 4]),
  'Opt': (1.1204623753935474,
          [(2, 219, 78), (3, 117, 205), (5, 175, 168), (6, 154, 55)],
          [4, 4, 4, 4]),
  'Random': (0.74062662753763375,
             [(0, 29, 194),
              (3, 117, 205),
              (4, 229, 205),
              (5, 175, 168),
              (6, 154, 55),
              (7, 230, 60)],
             [2, 3, 3, 2, 4, 1])},
 {'A': (0.79969258257849873,
        [(0, 213, 243), (4, 77, 235), (3, 24, 136), (7, 1, 201)],
        [4, 4, 4, 4]),
  'B': (0.79969258257849873,
        [(7, 1, 201), (3, 24, 136), (0, 213, 243), (4, 77, 235)],
        [4, 4, 4, 4]),
  'Opt': (0.79969258257849873,
          [(0, 213, 243), (3, 24, 136), (4, 77, 235), (7, 1, 201)],
          [4, 4, 4, 4]),
  'Random': (0.40159167789773698,
             [(0, 213, 243),
              (1, 134, 3),
              (2, 157, 0),
              (4, 77, 235),
              (5, 193, 295),
              (6, 8, 288),
              (7, 1, 201)],
             [3, 2, 2, 2, 4, 2, 1])},
 {'A': (0.81879608743901777,
        [(0, 69, 137), (3, 91, 149), (6, 118, 205), (5, 275, 197)],
        [4, 4, 4, 4]),
  'B': (0.82925881316394157,
        [(6, 118, 205), (2, 70, 273), (0, 69, 137), (3, 91, 149)],
        [4, 4, 4, 4]),
  'Opt': (0.82925881316394157,
          [(0, 69, 137), (2, 70, 273), (3, 91, 149), (6, 118, 205)],
          [4, 4, 4, 4]),
  'Random': (0.53200698502657107,
             [(0, 69, 137),
              (1, 44, 284),
              (2, 70, 273),
              (4, 280, 188),
              (5, 275, 197),
              (6, 118, 205)],
             [3, 2, 1, 4, 4, 2])},
 {'A': (0.96092805824993111,
        [(3, 90, 252), (4, 222, 84), (1, 260, 47), (2, 147, 40)],
        [4, 4, 4, 4]),
  'B': (0.91620053531601853,
        [(1, 260, 47), (3, 90, 252), (4, 222, 84), (0, 93, 23)],
        [4, 4, 4, 4]),
  'Opt': (0.96092805824993111,
          [(1, 260, 47), (2, 147, 40), (3, 90, 252), (4, 222, 84)],
          [4, 4, 4, 4]),
  'Random': (0.61156957943570667,
             [(0, 93, 23),
              (1, 260, 47),
              (2, 147, 40),
              (3, 90, 252),
              (4, 222, 84),
              (6, 300, 227),
              (7, 66, 115)],
             [2, 1, 3, 2, 4, 1, 3])}]
{'A': 1.0569437203268659,
 'B': 1.0511502852203696,
 'Opt': 1.0667018389803704,
 'Random': 0.66379206037020333}

=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 5,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
5 chargers generated:
[(0, 122, 273), (1, 86, 260), (2, 106, 139), (3, 64, 210), (4, 237, 255)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 68, 183),
 (1, 24, 287),
 (2, 49, 33),
 (3, 94, 125),
 (4, 49, 75),
 (5, 209, 87),
 (6, 49, 49),
 (7, 3, 61),
 (8, 198, 84),
 (9, 286, 5),
 (10, 78, 44),
 (11, 147, 44),
 (12, 246, 149),
 (13, 148, 55),
 (14, 96, 81),
 (15, 78, 64),
 (16, 189, 127),
 (17, 180, 0),
 (18, 37, 224),
 (19, 252, 89),
 (20, 121, 273),
 (21, 179, 166),
 (22, 108, 210),
 (23, 159, 240),
 (24, 188, 238),
 (25, 193, 64),
 (26, 206, 151),
 (27, 197, 234),
 (28, 39, 247),
 (29, 31, 81),
 (30, 77, 152),
 (31, 141, 175),
 (32, 6, 227),
 (33, 255, 272),
 (34, 232, 132),
 (35, 38, 145),
 (36, 99, 288),
 (37, 251, 98),
 (38, 13, 209),
 (39, 105, 269),
 (40, 224, 162),
 (41, 162, 34),
 (42, 163, 119),
 (43, 32, 124),
 (44, 295, 118),
 (45, 165, 108),
 (46, 256, 177),
 (47, 149, 269),
 (48, 184, 76),
 (49, 164, 210)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.18514365694148088,
 0.14227071194717467,
 0.10161299117348194,
 0.13353527830564726,
 0.15511698804663987,
 0.1825295234091095,
 0.16057112633379467,
 0.15035229485064966,
 0.12318243378538891,
 0.16461994672941904,
 0.11413674543233851,
 0.16823366877766882,
 0.10607963312778153,
 0.13725662395662755,
 0.19967209211712961,
 0.15827998375573693,
 0.14232375384042886,
 0.18918555742585808,
 0.10809944278675049,
 0.11884159297014192,
 0.14159411753285861,
 0.16267024689101139,
 0.18531577313363862,
 0.15355309370647435,
 0.18452652092915767,
 0.10695828039434832,
 0.12811399890618613,
 0.18765857910930231,
 0.16614469543662969,
 0.14714878776307702,
 0.18641541202448675,
 0.17386601489900544,
 0.13179511429821517,
 0.15298846494850377,
 0.13256646462567445,
 0.15106526118438293,
 0.17407884895658321,
 0.13429221295441174,
 0.11799280151658319,
 0.12924794613069432,
 0.12728555996956045,
 0.14868792861685501,
 0.11367914686260061,
 0.10578740889467399,
 0.10254913513425232,
 0.18232214809507874,
 0.1827919209379876,
 0.16487207934754133,
 0.10940073507010484,
 0.19869360620614554]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.96726020543339963,
 [(0, 122, 273), (2, 106, 139), (1, 86, 260), (3, 64, 210)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.96726020543339963,
 [(0, 122, 273), (2, 106, 139), (1, 86, 260), (3, 64, 210)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.96726020543339963,
 [(0, 122, 273), (2, 106, 139), (1, 86, 260), (3, 64, 210)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0447971168707879,
 {(0, 122, 273): 4, (1, 86, 260): 4, (2, 106, 139): 4},
 [(0, 122, 273), (2, 106, 139), (0, 122, 273), (1, 86, 260), (0, 122, 273)],
 [4, 4, 3, 4, 1])
=============================================
#           result of greedy part           #
====================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 5,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
5 chargers generated:
[(0, 66, 110), (1, 263, 6), (2, 293, 233), (3, 234, 131), (4, 6, 180)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 286, 35),
 (1, 245, 280),
 (2, 220, 256),
 (3, 249, 163),
 (4, 67, 175),
 (5, 181, 6),
 (6, 298, 79),
 (7, 251, 91),
 (8, 172, 203),
 (9, 122, 258),
 (10, 45, 288),
 (11, 147, 254),
 (12, 191, 126),
 (13, 138, 180),
 (14, 1, 103),
 (15, 64, 29),
 (16, 192, 119),
 (17, 40, 40),
 (18, 76, 143),
 (19, 38, 42),
 (20, 242, 178),
 (21, 274, 130),
 (22, 256, 59),
 (23, 102, 178),
 (24, 203, 216),
 (25, 192, 167),
 (26, 210, 16),
 (27, 116, 263),
 (28, 183, 206),
 (29, 230, 109),
 (30, 53, 258),
 (31, 11, 12),
 (32, 154, 199),
 (33, 210, 298),
 (34, 140, 264),
 (35, 214, 166),
 (36, 7, 174),
 (37, 125, 254),
 (38, 136, 227),
 (39, 241, 101),
 (40, 270, 262),
 (41, 74, 235),
 (42, 30, 165),
 (43, 44, 109),
 (44, 146, 250),
 (45, 44, 60),
 (46, 245, 252),
 (47, 153, 191),
 (48, 17, 240),
 (49, 286, 155)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.16722621697303863,
 0.16427474290857341,
 0.18329349956803342,
 0.1260098702823938,
 0.1573169814241169,
 0.12205738050662041,
 0.11236800147062589,
 0.15018131065800344,
 0.15689550400195096,
 0.14928087461103495,
 0.16373514855942478,
 0.12219843774331972,
 0.13051362018226506,
 0.14441318237230427,
 0.14541740532081446,
 0.19168497954582289,
 0.15672259941452416,
 0.16078119406148089,
 0.12975177363817786,
 0.10155036094502744,
 0.13484440756187893,
 0.1190703631385685,
 0.1219952198706834,
 0.17482865092526528,
 0.16417540931917599,
 0.14994192024336689,
 0.15198616602353193,
 0.13810062963965808,
 0.10446216143644416,
 0.13427405862795669,
 0.18795564954128241,
 0.17947595176610187,
 0.18566493982735921,
 0.16724485008816625,
 0.17571951848300749,
 0.1383751584971086,
 0.15555710274131251,
 0.13643392200730084,
 0.14427125951512626,
 0.16540215378553236,
 0.10720489329699097,
 0.12183953322033125,
 0.11079832282146443,
 0.19195184794526496,
 0.15437836094514659,
 0.1822615163161701,
 0.11471598478932436,
 0.14179515134409562,
 0.19480056997257339,
 0.17742703165484913]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.79938438191367822,
 [(3, 234, 131), (4, 6, 180), (0, 66, 110), (2, 293, 233)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.79938438191367822,
 [(3, 234, 131), (4, 6, 180), (0, 66, 110), (2, 293, 233)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.79938438191367822,
 [(3, 234, 131), (4, 6, 180), (0, 66, 110), (2, 293, 233)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.9363334831533725,
 {(0, 66, 110): 4, (3, 234, 131): 4, (4, 6, 180): 4},
 [(3, 234, 131), (3, 234, 131), (4, 6, 180), (0, 66, 110), (4, 6, 180)],
 [4, 3, 4, 4, 1])
=============================================
#           result of greedy part           #
=======================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 5,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
5 chargers generated:
[(0, 247, 145), (1, 260, 47), (2, 42, 287), (3, 164, 2), (4, 181, 151)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 208, 202),
 (1, 43, 102),
 (2, 28, 90),
 (3, 287, 8),
 (4, 101, 233),
 (5, 234, 78),
 (6, 253, 67),
 (7, 63, 124),
 (8, 141, 298),
 (9, 240, 18),
 (10, 209, 116),
 (11, 126, 180),
 (12, 48, 35),
 (13, 67, 289),
 (14, 277, 99),
 (15, 18, 2),
 (16, 114, 256),
 (17, 84, 110),
 (18, 118, 294),
 (19, 114, 0),
 (20, 84, 114),
 (21, 83, 242),
 (22, 142, 81),
 (23, 208, 278),
 (24, 145, 266),
 (25, 257, 190),
 (26, 188, 300),
 (27, 126, 285),
 (28, 120, 74),
 (29, 57, 144),
 (30, 106, 134),
 (31, 177, 142),
 (32, 125, 138),
 (33, 214, 131),
 (34, 285, 250),
 (35, 30, 207),
 (36, 20, 272),
 (37, 163, 69),
 (38, 147, 128),
 (39, 103, 3),
 (40, 187, 7),
 (41, 80, 52),
 (42, 143, 177),
 (43, 221, 151),
 (44, 225, 54),
 (45, 29, 195),
 (46, 98, 184),
 (47, 152, 79),
 (48, 22, 22),
 (49, 175, 265)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.17759145091332024,
 0.18791531092258201,
 0.12131715652607128,
 0.14105088548419489,
 0.18356208760593001,
 0.17007667759305206,
 0.11069243025283554,
 0.17839265084981296,
 0.16437386807606491,
 0.11521583833432891,
 0.16827726939518764,
 0.14072908409651602,
 0.18576885193962914,
 0.12253111525288778,
 0.15007760985209206,
 0.19998415501152492,
 0.14237283903841733,
 0.17730177638113767,
 0.17157904856104342,
 0.16312960086848294,
 0.15493859075555222,
 0.13037514346083201,
 0.14746093384898576,
 0.14010432198717435,
 0.11059328654864625,
 0.13439427865480078,
 0.19314146691923451,
 0.13684686761799988,
 0.15978002198886962,
 0.13925392162326072,
 0.18721948486274398,
 0.13499568016181993,
 0.13811689930078019,
 0.17408635303606601,
 0.19028258715401733,
 0.170951832729208,
 0.1611635702660357,
 0.12919350114071276,
 0.1392500457434967,
 0.11898400480610466,
 0.12526461556703936,
 0.1917580931331489,
 0.16903883375552273,
 0.10304536147629445,
 0.13917579558482818,
 0.16097420729309916,
 0.1538462893150703,
 0.1140546923875236,
 0.19686973044375355,
 0.19605871473524986]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.78027981949780911,
 [(4, 181, 151), (0, 247, 145), (1, 260, 47), (2, 42, 287)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.78027981949780911,
 [(4, 181, 151), (0, 247, 145), (1, 260, 47), (2, 42, 287)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.78027981949780911,
 [(4, 181, 151), (0, 247, 145), (1, 260, 47), (2, 42, 287)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.84915781189416317,
 {(0, 247, 145): 4, (1, 260, 47): 4, (4, 181, 151): 4},
 [(4, 181, 151), (4, 181, 151), (0, 247, 145), (1, 260, 47), (4, 181, 151)],
 [4, 3, 4, 4, 1])
=============================================
#           result of greedy part           #
=======================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 5,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
5 chargers generated:
[(0, 42, 145), (1, 104, 46), (2, 270, 127), (3, 2, 4), (4, 53, 122)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 300, 207),
 (1, 201, 73),
 (2, 106, 180),
 (3, 52, 13),
 (4, 172, 21),
 (5, 11, 194),
 (6, 275, 18),
 (7, 62, 169),
 (8, 75, 218),
 (9, 76, 84),
 (10, 264, 253),
 (11, 179, 132),
 (12, 210, 77),
 (13, 102, 7),
 (14, 22, 137),
 (15, 88, 280),
 (16, 94, 247),
 (17, 190, 263),
 (18, 224, 189),
 (19, 20, 298),
 (20, 183, 280),
 (21, 128, 43),
 (22, 95, 40),
 (23, 4, 50),
 (24, 231, 59),
 (25, 8, 171),
 (26, 155, 113),
 (27, 246, 47),
 (28, 3, 212),
 (29, 32, 230),
 (30, 238, 262),
 (31, 255, 111),
 (32, 77, 273),
 (33, 138, 38),
 (34, 140, 19),
 (35, 57, 35),
 (36, 46, 151),
 (37, 201, 86),
 (38, 297, 152),
 (39, 287, 225),
 (40, 98, 128),
 (41, 131, 87),
 (42, 80, 218),
 (43, 53, 176),
 (44, 20, 157),
 (45, 252, 30),
 (46, 263, 284),
 (47, 283, 61),
 (48, 197, 273),
 (49, 141, 138)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.11167530334288811,
 0.13882634197812843,
 0.1255836777832858,
 0.1092251578612715,
 0.14293626286412045,
 0.19805255095299121,
 0.10674078108222328,
 0.18534884641441429,
 0.18841822648426931,
 0.16448264860398865,
 0.17430094845068952,
 0.10981474927986759,
 0.15702827532349684,
 0.14406289509990566,
 0.12230202242963363,
 0.12801675753583214,
 0.10351898815935678,
 0.18226289479225186,
 0.14964094645820358,
 0.16323171340184045,
 0.1685990700296241,
 0.14516701951362476,
 0.14706451413308613,
 0.15383325414121868,
 0.17661826544212439,
 0.12272420003854963,
 0.18097236255524329,
 0.19378649234239786,
 0.14891667693626184,
 0.10291115824201721,
 0.18299110011346456,
 0.11563380744838818,
 0.106992472772042,
 0.17587836150196551,
 0.1402054129846616,
 0.17032145999918846,
 0.11855607716373373,
 0.19330960987413687,
 0.18291227978113839,
 0.11452831539203387,
 0.1188032300083455,
 0.12686343655013591,
 0.14624840780605086,
 0.14572155437046491,
 0.172358096469653,
 0.15743128202679868,
 0.17576476934540813,
 0.12133491975172939,
 0.17762450473679797,
 0.11752493232593027]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.99413336657159213,
 [(0, 42, 145), (1, 104, 46), (4, 53, 122), (2, 270, 127)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.99413336657159213,
 [(0, 42, 145), (1, 104, 46), (4, 53, 122), (2, 270, 127)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.99413336657159213,
 [(0, 42, 145), (1, 104, 46), (4, 53, 122), (2, 270, 127)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.2392623782532683,
 {(0, 42, 145): 4, (1, 104, 46): 4},
 [(0, 42, 145), (1, 104, 46), (0, 42, 145), (1, 104, 46), (0, 42, 145)],
 [4, 4, 3, 3, 2])
=============================================
#           result of greedy part           #
=============================================
(=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 5,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
5 chargers generated:
[(0, 34, 92), (1, 176, 214), (2, 68, 88), (3, 163, 74), (4, 86, 70)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 78, 282),
 (1, 168, 68),
 (2, 216, 162),
 (3, 245, 75),
 (4, 119, 131),
 (5, 95, 300),
 (6, 118, 114),
 (7, 5, 53),
 (8, 166, 6),
 (9, 247, 131),
 (10, 228, 75),
 (11, 171, 102),
 (12, 155, 218),
 (13, 70, 124),
 (14, 19, 133),
 (15, 190, 166),
 (16, 187, 164),
 (17, 118, 7),
 (18, 32, 58),
 (19, 287, 250),
 (20, 61, 195),
 (21, 110, 186),
 (22, 257, 68),
 (23, 117, 100),
 (24, 233, 188),
 (25, 165, 266),
 (26, 132, 90),
 (27, 200, 156),
 (28, 184, 1),
 (29, 151, 266),
 (30, 80, 207),
 (31, 175, 17),
 (32, 284, 18),
 (33, 214, 8),
 (34, 280, 296),
 (35, 109, 4),
 (36, 73, 136),
 (37, 250, 18),
 (38, 69, 175),
 (39, 253, 35),
 (40, 138, 175),
 (41, 113, 29),
 (42, 150, 269),
 (43, 129, 262),
 (44, 18, 279),
 (45, 58, 64),
 (46, 4, 226),
 (47, 113, 208),
 (48, 292, 191),
 (49, 194, 271)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.10590496339198099,
 0.1687530162308869,
 0.17132417222869406,
 0.10223883652964921,
 0.19283085200580102,
 0.12076364282397373,
 0.18850165534375435,
 0.10615645027314873,
 0.17625181045485955,
 0.19372039866303864,
 0.19866695697172082,
 0.18911119837119797,
 0.16804609267125711,
 0.10594530358323623,
 0.12099758073837057,
 0.1584003298507852,
 0.1657151496179847,
 0.18483176880224778,
 0.16438230147832172,
 0.1915174745817802,
 0.11125092443198423,
 0.16725922844166558,
 0.11665670686688567,
 0.15893652268160144,
 0.10440025940666925,
 0.11169969018478715,
 0.10723504300953279,
 0.10773647241742024,
 0.18827807096634067,
 0.16101625833714017,
 0.1383670716947682,
 0.13990023087589532,
 0.18754806659543105,
 0.10110342803822386,
 0.14026698184773126,
 0.10921385256885704,
 0.11679248301508897,
 0.14946200685551658,
 0.11950288869280033,
 0.15603634710105602,
 0.14303820176429213,
 0.13236072340126226,
 0.18625193532171283,
 0.18406608124399126,
 0.14967104966718781,
 0.14687924344755451,
 0.12053020525326152,
 0.18285081416149876,
 0.17078714755518443,
 0.12715020854636236]
=============================================
#           optimal power levels            #
=============================================
[3, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.99170328286236398,
 [(3, 163, 74), (1, 176, 214), (4, 86, 70), (2, 68, 88)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.99170328286236398,
 [(3, 163, 74), (1, 176, 214), (4, 86, 70), (2, 68, 88)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.99170328286236398,
 [(3, 163, 74), (1, 176, 214), (4, 86, 70), (2, 68, 88)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.99170328286236398,
 {(1, 176, 214): 4, (2, 68, 88): 4, (3, 163, 74): 4, (4, 86, 70): 4},
 [(3, 163, 74), (1, 176, 214), (4, 86, 70), (2, 68, 88)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
========================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 5,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
5 chargers generated:
[(0, 95, 102), (1, 202, 133), (2, 268, 133), (3, 245, 100), (4, 248, 16)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 117, 70),
 (1, 254, 64),
 (2, 52, 161),
 (3, 129, 24),
 (4, 85, 26),
 (5, 19, 15),
 (6, 250, 275),
 (7, 243, 138),
 (8, 222, 113),
 (9, 194, 292),
 (10, 87, 238),
 (11, 193, 131),
 (12, 128, 85),
 (13, 159, 243),
 (14, 134, 263),
 (15, 241, 103),
 (16, 299, 134),
 (17, 36, 289),
 (18, 161, 244),
 (19, 173, 88),
 (20, 11, 131),
 (21, 236, 11),
 (22, 83, 132),
 (23, 126, 127),
 (24, 267, 267),
 (25, 3, 256),
 (26, 104, 188),
 (27, 245, 193),
 (28, 115, 40),
 (29, 108, 86),
 (30, 80, 247),
 (31, 127, 100),
 (32, 165, 52),
 (33, 172, 158),
 (34, 53, 261),
 (35, 222, 105),
 (36, 221, 197),
 (37, 62, 69),
 (38, 103, 88),
 (39, 94, 42),
 (40, 220, 79),
 (41, 201, 169),
 (42, 257, 88),
 (43, 0, 80),
 (44, 68, 219),
 (45, 108, 45),
 (46, 209, 244),
 (47, 282, 158),
 (48, 272, 155),
 (49, 87, 179)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.14121546795503059,
 0.17147716561877385,
 0.17423303831631243,
 0.10536245551389724,
 0.12767618490284235,
 0.18190401440876211,
 0.10480460114053253,
 0.18674593764091668,
 0.10088749518050601,
 0.18236621332548117,
 0.15853723871749645,
 0.1642722216475937,
 0.13808807290144939,
 0.14071835257486612,
 0.10413213925678903,
 0.1597408400976037,
 0.11660636560364067,
 0.13529772602899154,
 0.15489207862330157,
 0.16457262834762151,
 0.12686175510443001,
 0.12934160080745735,
 0.13626170233649137,
 0.19015466810968179,
 0.14826182179013933,
 0.19918361284353064,
 0.15139370432464844,
 0.10434629359553849,
 0.17215931582126054,
 0.19048179826858916,
 0.11818147252299056,
 0.1014167604448063,
 0.10438790179426934,
 0.1294391715594374,
 0.15903759863175701,
 0.11065050815365836,
 0.15228836047869126,
 0.17857381731942851,
 0.17435403908275965,
 0.16605821972913332,
 0.18682775723333606,
 0.1370054358096533,
 0.18371115493795864,
 0.1205298931112061,
 0.14734402427021159,
 0.12066985133465664,
 0.16595854665452853,
 0.19440332798174348,
 0.13374127143855302,
 0.12339006488149264]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.4674625241924386,
 [(3, 245, 100), (0, 95, 102), (1, 202, 133), (2, 268, 133)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.4674625241924386,
 [(3, 245, 100), (0, 95, 102), (1, 202, 133), (2, 268, 133)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.4674625241924386,
 [(3, 245, 100), (0, 95, 102), (1, 202, 133), (2, 268, 133)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.4674625241924386,
 {(0, 95, 102): 4, (1, 202, 133): 4, (2, 268, 133): 4, (3, 245, 100): 4},
 [(3, 245, 100), (0, 95, 102), (1, 202, 133), (2, 268, 133)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 5,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
5 chargers generated:
[(0, 251, 193), (1, 30, 244), (2, 38, 238), (3, 161, 160), (4, 69, 227)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 187, 193),
 (1, 262, 219),
 (2, 38, 233),
 (3, 290, 118),
 (4, 14, 258),
 (5, 138, 76),
 (6, 104, 116),
 (7, 67, 46),
 (8, 201, 183),
 (9, 143, 100),
 (10, 216, 83),
 (11, 84, 41),
 (12, 197, 86),
 (13, 17, 234),
 (14, 88, 283),
 (15, 136, 238),
 (16, 183, 192),
 (17, 23, 244),
 (18, 64, 111),
 (19, 292, 161),
 (20, 36, 31),
 (21, 22, 150),
 (22, 102, 85),
 (23, 146, 283),
 (24, 262, 226),
 (25, 24, 300),
 (26, 230, 297),
 (27, 247, 104),
 (28, 144, 218),
 (29, 136, 15),
 (30, 207, 251),
 (31, 147, 252),
 (32, 255, 176),
 (33, 282, 121),
 (34, 168, 250),
 (35, 235, 76),
 (36, 278, 215),
 (37, 31, 218),
 (38, 181, 195),
 (39, 112, 143),
 (40, 219, 188),
 (41, 237, 86),
 (42, 18, 127),
 (43, 29, 242),
 (44, 199, 98),
 (45, 248, 58),
 (46, 143, 29),
 (47, 67, 260),
 (48, 160, 122),
 (49, 92, 162)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.13812452778713963,
 0.16591165944140995,
 0.13322684462317469,
 0.18715032183840552,
 0.17780724830780173,
 0.19000786268686176,
 0.13944838163610931,
 0.19714203880071357,
 0.19565963348469059,
 0.18531786845324591,
 0.11386675276530922,
 0.15688740733621978,
 0.12618680919972303,
 0.13537253507758953,
 0.15407801640331445,
 0.15428265845015141,
 0.18119040090291577,
 0.15812818318591762,
 0.13482224771973833,
 0.17978568353781899,
 0.12675366575449196,
 0.17408106567508685,
 0.11054079591694435,
 0.16137586735941245,
 0.13370215533834462,
 0.16118170817732633,
 0.19191531079634014,
 0.17743344438011605,
 0.19447205478140356,
 0.15481478837521523,
 0.19343670670777546,
 0.12240341660220067,
 0.16406953148760628,
 0.1374787144747926,
 0.15661870849327592,
 0.10078368366870058,
 0.18353553299537334,
 0.10712426729385313,
 0.14079663481316543,
 0.15201520155735654,
 0.13491211284513685,
 0.15126893815124243,
 0.18976998192773833,
 0.12168760011639884,
 0.11061960141574849,
 0.10530392334198349,
 0.1672437448319799,
 0.18043814781557868,
 0.15930871975447061,
 0.15472005430034638]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.4609823464652281,
 [(1, 30, 244), (2, 38, 238), (0, 251, 193), (3, 161, 160)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.4609823464652281,
 [(1, 30, 244), (2, 38, 238), (0, 251, 193), (3, 161, 160)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.4609823464652281,
 [(1, 30, 244), (2, 38, 238), (0, 251, 193), (3, 161, 160)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.8330178288705974,
 {(1, 30, 244): 4, (2, 38, 238): 4},
 [(1, 30, 244), (2, 38, 238), (1, 30, 244), (2, 38, 238), (1, 30, 244)],
 [4, 4, 3, 3, 2])
=============================================
#           result of greedy part           #
==================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 5,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
5 chargers generated:
[(0, 265, 234), (1, 95, 12), (2, 251, 164), (3, 217, 176), (4, 260, 173)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 260, 137),
 (1, 32, 191),
 (2, 248, 279),
 (3, 71, 141),
 (4, 297, 3),
 (5, 67, 243),
 (6, 295, 220),
 (7, 227, 180),
 (8, 110, 259),
 (9, 199, 46),
 (10, 204, 56),
 (11, 88, 233),
 (12, 104, 148),
 (13, 88, 155),
 (14, 127, 231),
 (15, 191, 148),
 (16, 150, 9),
 (17, 226, 153),
 (18, 164, 107),
 (19, 109, 296),
 (20, 165, 161),
 (21, 168, 38),
 (22, 29, 90),
 (23, 18, 106),
 (24, 270, 196),
 (25, 225, 277),
 (26, 135, 77),
 (27, 114, 288),
 (28, 22, 163),
 (29, 203, 166),
 (30, 33, 252),
 (31, 206, 244),
 (32, 61, 42),
 (33, 127, 163),
 (34, 277, 30),
 (35, 287, 213),
 (36, 248, 26),
 (37, 222, 261),
 (38, 223, 77),
 (39, 197, 268),
 (40, 158, 293),
 (41, 249, 296),
 (42, 146, 185),
 (43, 88, 142),
 (44, 102, 105),
 (45, 134, 34),
 (46, 80, 189),
 (47, 166, 94),
 (48, 195, 194),
 (49, 91, 294)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.14122409698128013,
 0.16113483050963806,
 0.18914747265025572,
 0.13728590968930601,
 0.12063596208174011,
 0.18699837741023309,
 0.11556916171603995,
 0.186066581372061,
 0.19514563510015714,
 0.13653193311533893,
 0.12864964302305099,
 0.14097490302309637,
 0.1103865878025849,
 0.14834320152905897,
 0.15974135456417771,
 0.11504923854334936,
 0.14164775433401364,
 0.11568418758918764,
 0.10043476923908252,
 0.10213145378136698,
 0.10274009372207024,
 0.111369953321169,
 0.11223855567151372,
 0.16637660585724229,
 0.19427396188947874,
 0.1592433921829797,
 0.15981229042282585,
 0.19746963306150711,
 0.12801709579506307,
 0.13986010894906634,
 0.10227455243393802,
 0.15533106600948093,
 0.13467504549150364,
 0.14113201701489259,
 0.15520928519143745,
 0.18034374808631909,
 0.18505366880412111,
 0.13446570803976221,
 0.19157283186834748,
 0.14073316143656567,
 0.1959408461280229,
 0.14500493750078147,
 0.15098980174172399,
 0.12570454030405598,
 0.14171898139825365,
 0.15066954739972749,
 0.13686171044089288,
 0.19082660535032445,
 0.18681173771667112,
 0.15076459777789045]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.97694802859540297,
 [(3, 217, 176), (2, 251, 164), (0, 265, 234), (4, 260, 173)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.97694802859540297,
 [(3, 217, 176), (2, 251, 164), (0, 265, 234), (4, 260, 173)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.97694802859540297,
 [(3, 217, 176), (2, 251, 164), (0, 265, 234), (4, 260, 173)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.032873739861826,
 {(0, 265, 234): 4, (2, 251, 164): 4, (3, 217, 176): 4},
 [(3, 217, 176), (2, 251, 164), (3, 217, 176), (0, 265, 234), (3, 217, 176)],
 [4, 4, 3, 4, 1])
=============================================
#           result of greedy part    =============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 5,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
5 chargers generated:
[(0, 137, 9), (1, 64, 235), (2, 110, 218), (3, 207, 61), (4, 24, 260)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 235, 260),
 (1, 286, 70),
 (2, 167, 195),
 (3, 256, 51),
 (4, 96, 276),
 (5, 22, 40),
 (6, 281, 260),
 (7, 167, 154),
 (8, 178, 292),
 (9, 165, 186),
 (10, 118, 204),
 (11, 215, 98),
 (12, 118, 122),
 (13, 104, 163),
 (14, 253, 87),
 (15, 216, 94),
 (16, 273, 275),
 (17, 48, 183),
 (18, 195, 11),
 (19, 104, 132),
 (20, 296, 66),
 (21, 23, 21),
 (22, 150, 226),
 (23, 134, 41),
 (24, 185, 86),
 (25, 26, 278),
 (26, 253, 1),
 (27, 143, 235),
 (28, 191, 224),
 (29, 262, 136),
 (30, 56, 140),
 (31, 219, 104),
 (32, 300, 83),
 (33, 251, 268),
 (34, 103, 75),
 (35, 287, 175),
 (36, 230, 293),
 (37, 181, 112),
 (38, 61, 165),
 (39, 121, 248),
 (40, 105, 67),
 (41, 261, 43),
 (42, 65, 151),
 (43, 38, 56),
 (44, 256, 32),
 (45, 292, 247),
 (46, 112, 14),
 (47, 288, 102),
 (48, 198, 50),
 (49, 80, 143)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.12415104252685175,
 0.14893901130712231,
 0.15855791094865598,
 0.19914761640579207,
 0.17400322856694539,
 0.13828896382412162,
 0.11803673425713274,
 0.1675333748944903,
 0.17368039461703827,
 0.19326481285610689,
 0.11584232009938206,
 0.19071638231632218,
 0.11410413150372026,
 0.14395667348019309,
 0.16603897255495792,
 0.17972599506000181,
 0.12444112256128123,
 0.1445066052988109,
 0.19027751737296378,
 0.16154898372431323,
 0.18454505187514172,
 0.14491799484861695,
 0.12091370883188175,
 0.10429251168710492,
 0.16681585662997289,
 0.1775519377481741,
 0.10408533203341523,
 0.18264566411295055,
 0.10487007399992493,
 0.18960109689117388,
 0.13921286610197928,
 0.13034057365087715,
 0.14857831720041367,
 0.18113625065792049,
 0.10530090271986517,
 0.1904239335370721,
 0.10742493515191226,
 0.10396989953348841,
 0.11945948428429469,
 0.15825108223649811,
 0.12765609855229504,
 0.15542871195066685,
 0.18847796636393396,
 0.16810186367982988,
 0.189763669248427,
 0.18502115439717831,
 0.19914576159214264,
 0.13053724856421617,
 0.17232131770311371,
 0.11167312562221784]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.8359783926692711,
 [(3, 207, 61), (2, 110, 218), (0, 137, 9), (1, 64, 235)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.8359783926692711,
 [(3, 207, 61), (2, 110, 218), (0, 137, 9), (1, 64, 235)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.8359783926692711,
 [(3, 207, 61), (2, 110, 218), (0, 137, 9), (1, 64, 235)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0520552523883366,
 {(2, 110, 218): 4, (3, 207, 61): 4},
 [(3, 207, 61), (2, 110, 218), (3, 207, 61), (2, 110, 218), (3, 207, 61)],
 [4, 4, 3, 3, 2])
=============================================
#           result of greedy part           #
=============================================================================
#                  args                     #
=============================================
{'B': 800,
 'M': 50,
 'N': 5,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
5 chargers generated:
[(0, 242, 46), (1, 19, 6), (2, 106, 233), (3, 149, 87), (4, 205, 79)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 6, 72),
 (1, 243, 45),
 (2, 191, 255),
 (3, 169, 115),
 (4, 270, 160),
 (5, 263, 84),
 (6, 223, 216),
 (7, 49, 280),
 (8, 45, 168),
 (9, 169, 189),
 (10, 94, 124),
 (11, 30, 38),
 (12, 116, 178),
 (13, 162, 218),
 (14, 189, 55),
 (15, 173, 46),
 (16, 259, 200),
 (17, 254, 183),
 (18, 144, 48),
 (19, 241, 45),
 (20, 16, 220),
 (21, 60, 141),
 (22, 247, 222),
 (23, 265, 81),
 (24, 53, 126),
 (25, 214, 173),
 (26, 131, 272),
 (27, 203, 290),
 (28, 175, 5),
 (29, 34, 129),
 (30, 98, 96),
 (31, 297, 100),
 (32, 188, 211),
 (33, 185, 63),
 (34, 36, 160),
 (35, 104, 116),
 (36, 232, 277),
 (37, 74, 295),
 (38, 251, 167),
 (39, 258, 210),
 (40, 297, 171),
 (41, 67, 179),
 (42, 223, 67),
 (43, 159, 176),
 (44, 249, 30),
 (45, 248, 79),
 (46, 214, 81),
 (47, 38, 228),
 (48, 250, 101),
 (49, 32, 141)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.15435618018435704,
 0.13078233066245309,
 0.12395814964953433,
 0.16804358204166686,
 0.14342754677618311,
 0.18525753734709025,
 0.13393014453032853,
 0.10364281853661388,
 0.19952841753813341,
 0.17119410185938605,
 0.17443064902912814,
 0.13340595888369308,
 0.12459098649887489,
 0.16360561272455335,
 0.11939952854067866,
 0.17612197456003664,
 0.1658009537801266,
 0.14719686262568193,
 0.19545509523740634,
 0.11685312708102888,
 0.10424479048962217,
 0.19630901213137594,
 0.11241089635990342,
 0.16394318138467856,
 0.1346152189480681,
 0.17963100734886411,
 0.17490424737706656,
 0.17673644066230923,
 0.13422381225257823,
 0.19986060882723319,
 0.19670657642492123,
 0.17131674369926286,
 0.16280601084598345,
 0.12106858338446941,
 0.12372913052963309,
 0.15535962207610779,
 0.11250621462263027,
 0.12589122725683008,
 0.16129224671700901,
 0.15398078026829751,
 0.14874592864863767,
 0.11579045863238153,
 0.10314034464630542,
 0.14323796771349118,
 0.11172003479493657,
 0.19159037492596234,
 0.19561183622137127,
 0.15299239558645689,
 0.12642049844810216,
 0.19881433483483349]
=============================================
#           optimal power levels            #
=============================================
[4, 3, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.2644006749258814,
 [(0, 242, 46), (4, 205, 79), (3, 149, 87), (2, 106, 233)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.2644006749258814,
 [(0, 242, 46), (4, 205, 79), (3, 149, 87), (2, 106, 233)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.2644006749258814,
 [(0, 242, 46), (4, 205, 79), (3, 149, 87), (2, 106, 233)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.8318063564730935,
 {(0, 242, 46): 4, (4, 205, 79): 4},
 [(0, 242, 46), (4, 205, 79), (0, 242, 46), (4, 205, 79), (0, 242, 46)],
 [4, 4, 3, 3, 2])
=============================================
#           result of greedy part           #
==================================================================
(0.88776368971493214,
 {(0, 247, 145): 4, (1, 260, 47): 3, (4, 181, 151): 4},
 [(4, 181, 151), (4, 181, 151), (4, 181, 151), (0, 247, 145), (1, 260, 47)],
 [4, 3, 2, 4, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.77593935537317948,
 [(1, 260, 47), (4, 181, 151), (3, 164, 2), (0, 247, 145)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[4, 2, 1, 3, 3]
=============================================
#               solution Ran                #
=============================================
(0.52859605357232242,
 [(0, 247, 145), (1, 260, 47), (2, 42, 287), (3, 164, 2), (4, 181, 151)],
 [4, 2, 1, 3, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.78027981949780911,
 [(0, 247, 145), (1, 260, 47), (2, 42, 287), (4, 181, 151)],
 [4, 4, 4, 4])
==================
(0.98751360176074265,
 {(1, 176, 214): 4, (3, 163, 74): 4},
 [(3, 163, 74), (1, 176, 214), (1, 176, 214), (3, 163, 74), (3, 163, 74)],
 [4, 4, 3, 3, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.99170328286236398,
 [(2, 68, 88), (4, 86, 70), (1, 176, 214), (3, 163, 74)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 2, 1, 2, 3]
=============================================
#               solution Ran                #
=============================================
(0.24857809032389749,
 [(1, 176, 214), (2, 68, 88), (3, 163, 74), (4, 86, 70)],
 [2, 1, 2, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.99170328286236398,
 [(1, 176, 214), (2, 68, 88), (3, 163, 74), (4, 86, 70)],
 [4, 4, 4, 4])
===================================
(0.98131159300978232,
 {(3, 234, 131): 4, (4, 6, 180): 4},
 [(3, 234, 131), (3, 234, 131), (3, 234, 131), (4, 6, 180), (4, 6, 180)],
 [4, 3, 2, 4, 3])
Warning: remaining budget can not be full filled.
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 650.000000
=============================================
#                solution B                 #
=============================================
(0.69423795830189972,
 [(3, 234, 131), (0, 66, 110), (4, 6, 180), (1, 263, 6)],
 [4, 4, 4, 1])
=============================================
#               random h list               #
=============================================
[4, 2, 2, 0, 2]
=============================================
#               solution Ran                #
=============================================
(0.2798582367141072,
 [(0, 66, 110), (1, 263, 6), (2, 293, 233), (4, 6, 180)],
 [4, 2, 2, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.79938438191367822,
 [(0, 66, 110), (2, 293, 233), (3, 234, 131), (4, 6, 180)],
 [4, 4, 4, 4])
       #
=============================================
(1.0481226193228093,
 {(2, 251, 164): 4, (3, 217, 176): 4},
 [(3, 217, 176), (3, 217, 176), (3, 217, 176), (2, 251, 164), (2, 251, 164)],
 [4, 3, 2, 4, 3])
Warning: remaining budget can not be full filled.
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 650.000000
=============================================
#                solution B                 #
=============================================
(0.75939807580580387,
 [(4, 260, 173), (0, 265, 234), (2, 251, 164), (3, 217, 176)],
 [4, 1, 4, 4])
=============================================
#               random h list               #
=============================================
[4, 0, 4, 4, 1]
=============================================
#               solution Ran                #
=============================================
(0.77869801179479514,
 [(0, 265, 234), (2, 251, 164), (3, 217, 176), (4, 260, 173)],
 [4, 4, 4, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.97694802859540286,
 [(0, 265, 234), (2, 251, 164), (3, 217, 176), (4, 260, 173)],
 [4, 4, 4, 4])
========================
(1.8330178288705974,
 {(1, 30, 244): 4, (2, 38, 238): 4},
 [(1, 30, 244), (1, 30, 244), (1, 30, 244), (2, 38, 238), (2, 38, 238)],
 [4, 3, 2, 4, 3])
Warning: remaining budget can not be full filled.
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 650.000000
=============================================
#                solution B                 #
=============================================
(1.2117610870104298,
 [(2, 38, 238), (1, 30, 244), (3, 161, 160), (0, 251, 193)],
 [4, 4, 1, 4])
=============================================
#               random h list               #
=============================================
[2, 0, 3, 0, 2]
=============================================
#               solution Ran                #
=============================================
(0.48832047093716424, [(0, 251, 193), (2, 38, 238), (4, 69, 227)], [2, 3, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.4609823464652281,
 [(0, 251, 193), (1, 30, 244), (2, 38, 238), (3, 161, 160)],
 [4, 4, 4, 4])
1.2392623782532683,
 {(0, 42, 145): 4, (1, 104, 46): 4},
 [(0, 42, 145), (0, 42, 145), (1, 104, 46), (1, 104, 46), (0, 42, 145)],
 [4, 3, 4, 3, 2])
Warning: remaining budget can not be full filled.
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 650.000000
=============================================
#                solution B                 #
=============================================
(0.79708642540852015,
 [(0, 42, 145), (3, 2, 4), (2, 270, 127), (1, 104, 46)],
 [4, 1, 4, 4])
=============================================
#               random h list               #
=============================================
[2, 2, 3, 0, 2]
=============================================
#               solution Ran                #
=============================================
(0.41276712937059928,
 [(0, 42, 145), (1, 104, 46), (2, 270, 127), (4, 53, 122)],
 [2, 2, 3, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.99413336657159213,
 [(0, 42, 145), (1, 104, 46), (2, 270, 127), (4, 53, 122)],
 [4, 4, 4, 4])
======================================
(1.0705700527619906,
 {(0, 122, 273): 4, (1, 86, 260): 3, (2, 106, 139): 4},
 [(0, 122, 273), (0, 122, 273), (0, 122, 273), (2, 106, 139), (1, 86, 260)],
 [4, 3, 2, 4, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.87621175328316148,
 [(1, 86, 260), (0, 122, 273), (4, 237, 255), (2, 106, 139)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[4, 0, 1, 4, 0]
=============================================
#               solution Ran                #
=============================================
(0.53577215872863526, [(0, 122, 273), (2, 106, 139), (3, 64, 210)], [4, 1, 4])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.96726020543339963,
 [(0, 122, 273), (1, 86, 260), (2, 106, 139), (3, 64, 210)],
 [4, 4, 4, 4])
=========================================
(1.4966720892748846,
 {(0, 95, 102): 4, (1, 202, 133): 4, (3, 245, 100): 4},
 [(3, 245, 100), (3, 245, 100), (0, 95, 102), (1, 202, 133), (3, 245, 100)],
 [4, 3, 4, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.4674625241924386,
 [(0, 95, 102), (3, 245, 100), (1, 202, 133), (2, 268, 133)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[4, 1, 1, 3, 0]
=============================================
#               solution Ran                #
=============================================
(0.70025966573690646,
 [(0, 95, 102), (1, 202, 133), (2, 268, 133), (3, 245, 100)],
 [4, 1, 1, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.4674625241924386,
 [(0, 95, 102), (1, 202, 133), (2, 268, 133), (3, 245, 100)],
 [4, 4, 4, 4])
=============
(1.0520552523883366,
 {(2, 110, 218): 4, (3, 207, 61): 4},
 [(3, 207, 61), (3, 207, 61), (2, 110, 218), (2, 110, 218), (3, 207, 61)],
 [4, 3, 4, 3, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(0.79477438732575856,
 [(0, 137, 9), (3, 207, 61), (4, 24, 260), (2, 110, 218)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 0, 2, 3, 2]
=============================================
#               solution Ran                #
=============================================
(0.39609119771639445,
 [(0, 137, 9), (2, 110, 218), (3, 207, 61), (4, 24, 260)],
 [3, 2, 3, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(0.8359783926692711,
 [(0, 137, 9), (1, 64, 235), (2, 110, 218), (3, 207, 61)],
 [4, 4, 4, 4])
==============
(1.8318063564730935,
 {(0, 242, 46): 4, (4, 205, 79): 4},
 [(0, 242, 46), (0, 242, 46), (0, 242, 46), (4, 205, 79), (4, 205, 79)],
 [4, 3, 2, 4, 3])
Warning: remaining budget can not be full filled.
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 450.000000
=============================================
#                solution B                 #
=============================================
(0.93592734504347852, [(4, 205, 79), (0, 242, 46), (1, 19, 6)], [4, 4, 1])
=============================================
#               random h list               #
=============================================
[2, 3, 0, 2, 3]
=============================================
#               solution Ran                #
=============================================
(0.59941067946640592,
 [(0, 242, 46), (1, 19, 6), (3, 149, 87), (4, 205, 79)],
 [2, 3, 2, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.2644006749258814,
 [(0, 242, 46), (2, 106, 233), (3, 149, 87), (4, 205, 79)],
 [4, 4, 4, 4])
{'B': 800,
 'M': 50,
 'N': 5,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
[{'A': (1.2644006749258814,
        [(0, 242, 46), (4, 205, 79), (3, 149, 87), (2, 106, 233)],
        [4, 4, 4, 4]),
  'B': (0.93592734504347852,
        [(4, 205, 79), (0, 242, 46), (1, 19, 6)],
        [4, 4, 1]),
  'Opt': (1.2644006749258814,
          [(0, 242, 46), (2, 106, 233), (3, 149, 87), (4, 205, 79)],
          [4, 4, 4, 4]),
  'Random': (0.59941067946640592,
             [(0, 242, 46), (1, 19, 6), (3, 149, 87), (4, 205, 79)],
             [2, 3, 2, 3])},
 {'A': (0.99170328286236398,
        [(3, 163, 74), (1, 176, 214), (4, 86, 70), (2, 68, 88)],
        [4, 4, 4, 4]),
  'B': (0.99170328286236398,
        [(2, 68, 88), (4, 86, 70), (1, 176, 214), (3, 163, 74)],
        [4, 4, 4, 4]),
  'Opt': (0.99170328286236398,
          [(1, 176, 214), (2, 68, 88), (3, 163, 74), (4, 86, 70)],
          [4, 4, 4, 4]),
  'Random': (0.24857809032389749,
             [(1, 176, 214), (2, 68, 88), (3, 163, 74), (4, 86, 70)],
             [2, 1, 2, 3])},
 {'A': (0.99413336657159213,
        [(0, 42, 145), (1, 104, 46), (4, 53, 122), (2, 270, 127)],
        [4, 4, 4, 4]),
  'B': (0.79708642540852015,
        [(0, 42, 145), (3, 2, 4), (2, 270, 127), (1, 104, 46)],
        [4, 1, 4, 4]),
  'Opt': (0.99413336657159213,
          [(0, 42, 145), (1, 104, 46), (2, 270, 127), (4, 53, 122)],
          [4, 4, 4, 4]),
  'Random': (0.41276712937059928,
             [(0, 42, 145), (1, 104, 46), (2, 270, 127), (4, 53, 122)],
             [2, 2, 3, 2])},
 {'A': (0.97694802859540297,
        [(3, 217, 176), (2, 251, 164), (0, 265, 234), (4, 260, 173)],
        [4, 4, 4, 4]),
  'B': (0.75939807580580387,
        [(4, 260, 173), (0, 265, 234), (2, 251, 164), (3, 217, 176)],
        [4, 1, 4, 4]),
  'Opt': (0.97694802859540286,
          [(0, 265, 234), (2, 251, 164), (3, 217, 176), (4, 260, 173)],
          [4, 4, 4, 4]),
  'Random': (0.77869801179479514,
             [(0, 265, 234), (2, 251, 164), (3, 217, 176), (4, 260, 173)],
             [4, 4, 4, 1])},
 {'A': (1.4674625241924386,
        [(3, 245, 100), (0, 95, 102), (1, 202, 133), (2, 268, 133)],
        [4, 4, 4, 4]),
  'B': (1.4674625241924386,
        [(0, 95, 102), (3, 245, 100), (1, 202, 133), (2, 268, 133)],
        [4, 4, 4, 4]),
  'Opt': (1.4674625241924386,
          [(0, 95, 102), (1, 202, 133), (2, 268, 133), (3, 245, 100)],
          [4, 4, 4, 4]),
  'Random': (0.70025966573690646,
             [(0, 95, 102), (1, 202, 133), (2, 268, 133), (3, 245, 100)],
             [4, 1, 1, 3])},
 {'A': (0.78027981949780911,
        [(4, 181, 151), (0, 247, 145), (1, 260, 47), (2, 42, 287)],
        [4, 4, 4, 4]),
  'B': (0.77593935537317948,
        [(1, 260, 47), (4, 181, 151), (3, 164, 2), (0, 247, 145)],
        [4, 4, 4, 4]),
  'Opt': (0.78027981949780911,
          [(0, 247, 145), (1, 260, 47), (2, 42, 287), (4, 181, 151)],
          [4, 4, 4, 4]),
  'Random': (0.52859605357232242,
             [(0, 247, 145),
              (1, 260, 47),
              (2, 42, 287),
              (3, 164, 2),
              (4, 181, 151)],
             [4, 2, 1, 3, 3])},
 {'A': (0.79938438191367822,
        [(3, 234, 131), (4, 6, 180), (0, 66, 110), (2, 293, 233)],
        [4, 4, 4, 4]),
  'B': (0.69423795830189972,
        [(3, 234, 131), (0, 66, 110), (4, 6, 180), (1, 263, 6)],
        [4, 4, 4, 1]),
  'Opt': (0.79938438191367822,
          [(0, 66, 110), (2, 293, 233), (3, 234, 131), (4, 6, 180)],
          [4, 4, 4, 4]),
  'Random': (0.2798582367141072,
             [(0, 66, 110), (1, 263, 6), (2, 293, 233), (4, 6, 180)],
             [4, 2, 2, 2])},
 {'A': (0.96726020543339963,
        [(0, 122, 273), (2, 106, 139), (1, 86, 260), (3, 64, 210)],
        [4, 4, 4, 4]),
  'B': (0.87621175328316148,
        [(1, 86, 260), (0, 122, 273), (4, 237, 255), (2, 106, 139)],
        [4, 4, 4, 4]),
  'Opt': (0.96726020543339963,
          [(0, 122, 273), (1, 86, 260), (2, 106, 139), (3, 64, 210)],
          [4, 4, 4, 4]),
  'Random': (0.53577215872863526,
             [(0, 122, 273), (2, 106, 139), (3, 64, 210)],
             [4, 1, 4])},
 {'A': (0.8359783926692711,
        [(3, 207, 61), (2, 110, 218), (0, 137, 9), (1, 64, 235)],
        [4, 4, 4, 4]),
  'B': (0.79477438732575856,
        [(0, 137, 9), (3, 207, 61), (4, 24, 260), (2, 110, 218)],
        [4, 4, 4, 4]),
  'Opt': (0.8359783926692711,
          [(0, 137, 9), (1, 64, 235), (2, 110, 218), (3, 207, 61)],
          [4, 4, 4, 4]),
  'Random': (0.39609119771639445,
             [(0, 137, 9), (2, 110, 218), (3, 207, 61), (4, 24, 260)],
             [3, 2, 3, 2])},
 {'A': (1.4609823464652281,
        [(1, 30, 244), (2, 38, 238), (0, 251, 193), (3, 161, 160)],
        [4, 4, 4, 4]),
  'B': (1.2117610870104298,
        [(2, 38, 238), (1, 30, 244), (3, 161, 160), (0, 251, 193)],
        [4, 4, 1, 4]),
  'Opt': (1.4609823464652281,
          [(0, 251, 193), (1, 30, 244), (2, 38, 238), (3, 161, 160)],
          [4, 4, 4, 4]),
  'Random': (0.48832047093716424,
             [(0, 251, 193), (2, 38, 238), (4, 69, 227)],
             [2, 3, 2])}]
{'A': 1.0538533023127064,
 'B': 0.93045021946070361,
 'Opt': 1.0538533023127064,
 'Random': 0.49683516943612283}

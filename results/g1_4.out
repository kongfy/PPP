=============================================
#                  args                     #
=============================================
{'B': 900,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 234, 185),
 (1, 34, 11),
 (2, 218, 151),
 (3, 219, 297),
 (4, 139, 98),
 (5, 19, 130),
 (6, 230, 28),
 (7, 124, 171)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 206, 3),
 (1, 77, 232),
 (2, 38, 202),
 (3, 199, 207),
 (4, 43, 132),
 (5, 12, 49),
 (6, 35, 27),
 (7, 107, 33),
 (8, 186, 243),
 (9, 214, 271),
 (10, 242, 42),
 (11, 222, 39),
 (12, 267, 180),
 (13, 37, 63),
 (14, 223, 148),
 (15, 8, 160),
 (16, 146, 178),
 (17, 64, 79),
 (18, 59, 241),
 (19, 69, 172),
 (20, 228, 281),
 (21, 100, 15),
 (22, 265, 150),
 (23, 146, 205),
 (24, 233, 47),
 (25, 103, 242),
 (26, 240, 249),
 (27, 283, 214),
 (28, 111, 288),
 (29, 284, 162),
 (30, 287, 140),
 (31, 79, 173),
 (32, 231, 143),
 (33, 38, 180),
 (34, 277, 261),
 (35, 281, 19),
 (36, 65, 182),
 (37, 267, 62),
 (38, 246, 132),
 (39, 219, 239),
 (40, 116, 46),
 (41, 115, 144),
 (42, 223, 65),
 (43, 22, 102),
 (44, 158, 69),
 (45, 181, 286),
 (46, 138, 81),
 (47, 49, 27),
 (48, 132, 3),
 (49, 253, 125)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.16855427051785443,
 0.19024018419804864,
 0.14681262493099062,
 0.13726176221527675,
 0.11227704455955756,
 0.1310077307030541,
 0.13405396903424496,
 0.16391475803146188,
 0.15214583961586958,
 0.14257342639379109,
 0.16390117752727357,
 0.12229216960854367,
 0.15145233832324051,
 0.17459409064151538,
 0.12463475435687277,
 0.1664010886630124,
 0.19897746512972811,
 0.16400733477467622,
 0.1046858454626184,
 0.13929784481009788,
 0.13506125658571688,
 0.12745412064427897,
 0.15690578519845477,
 0.17860459225730241,
 0.11572045094482682,
 0.1912323529041508,
 0.14460091958511079,
 0.15976755925364655,
 0.19117085483452576,
 0.18534063961047242,
 0.1324325275673448,
 0.18526621456900316,
 0.16687112197036008,
 0.17204028860339066,
 0.10914206847275641,
 0.16344669031344344,
 0.10719356077177783,
 0.16132338501143015,
 0.10830720851777764,
 0.11057822770830579,
 0.1839755162920774,
 0.1854358614407928,
 0.17029326498026251,
 0.12183852742481054,
 0.14734960896403287,
 0.15926970278185212,
 0.18904405360189311,
 0.10440185274602805,
 0.14770133125179885,
 0.10488522132054301]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.0665820657511398,
 [(2, 218, 151), (6, 230, 28), (0, 234, 185), (5, 19, 130)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.0665820657511398,
 [(2, 218, 151), (6, 230, 28), (0, 234, 185), (5, 19, 130)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.0665820657511398,
 [(2, 218, 151), (6, 230, 28), (0, 234, 185), (5, 19, 130)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1859792226033226,
 {(0, 234, 185): 4, (2, 218, 151): 4, (5, 19, 130): 4, (6, 230, 28): 4},
 [(2, 218, 151), (6, 230, 28), (0, 234, 185), (5, 19, 130), (2, 218, 151)],
 [4, 4, 4, 4, 2])
========================================================================
#                  args                     #
=============================================
{'B': 900,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 127, 127),
 (1, 77, 264),
 (2, 4, 257),
 (3, 236, 60),
 (4, 260, 62),
 (5, 235, 281),
 (6, 251, 264),
 (7, 151, 179)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 79, 210),
 (1, 150, 248),
 (2, 282, 0),
 (3, 41, 216),
 (4, 14, 112),
 (5, 289, 79),
 (6, 55, 275),
 (7, 137, 159),
 (8, 35, 211),
 (9, 41, 264),
 (10, 160, 142),
 (11, 43, 124),
 (12, 264, 204),
 (13, 231, 145),
 (14, 3, 295),
 (15, 138, 171),
 (16, 61, 150),
 (17, 253, 194),
 (18, 95, 237),
 (19, 221, 62),
 (20, 146, 163),
 (21, 125, 56),
 (22, 223, 274),
 (23, 69, 87),
 (24, 31, 168),
 (25, 258, 141),
 (26, 214, 185),
 (27, 45, 226),
 (28, 224, 24),
 (29, 266, 111),
 (30, 191, 116),
 (31, 289, 157),
 (32, 20, 135),
 (33, 157, 294),
 (34, 243, 189),
 (35, 270, 200),
 (36, 263, 124),
 (37, 18, 297),
 (38, 7, 274),
 (39, 46, 164),
 (40, 157, 37),
 (41, 157, 28),
 (42, 28, 16),
 (43, 298, 98),
 (44, 164, 1),
 (45, 226, 142),
 (46, 108, 191),
 (47, 54, 257),
 (48, 224, 135),
 (49, 249, 12)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.12206315923844624,
 0.15342357982069463,
 0.11410384600390794,
 0.14282142147162641,
 0.12876874374798164,
 0.19800243546036231,
 0.10846908765821694,
 0.15127339745917831,
 0.14024931948060387,
 0.11434139764563844,
 0.15367445649278835,
 0.17375238245570057,
 0.15251599659811665,
 0.16586250898503521,
 0.18280658241947761,
 0.18875219860638415,
 0.13236645997502114,
 0.13653736473187245,
 0.11116809875625024,
 0.11892754501787983,
 0.12905703492630061,
 0.12929206482201391,
 0.1527879143423321,
 0.13633837276897842,
 0.168838366642521,
 0.12084919329566689,
 0.11901672211816466,
 0.1745058785677232,
 0.14504648629578301,
 0.14274897113436597,
 0.14792030472179668,
 0.12298162302981591,
 0.16930882794258384,
 0.1879228240013662,
 0.14536579020791093,
 0.10116596788670074,
 0.19351923586391759,
 0.16716110194575401,
 0.10067638082795256,
 0.13694669815157015,
 0.14839124624037286,
 0.18969662238702908,
 0.17878685337172764,
 0.17481002782240659,
 0.17099953560170161,
 0.16067032984859947,
 0.15255577112588722,
 0.14784252143894688,
 0.14034947815910453,
 0.14278618556216069]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.005570516982456,
 [(7, 151, 179), (1, 77, 264), (2, 4, 257), (3, 236, 60)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.005570516982456,
 [(7, 151, 179), (1, 77, 264), (2, 4, 257), (3, 236, 60)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.005570516982456,
 [(7, 151, 179), (1, 77, 264), (2, 4, 257), (3, 236, 60)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1129856499860189,
 {(1, 77, 264): 4, (2, 4, 257): 4, (3, 236, 60): 4, (7, 151, 179): 4},
 [(7, 151, 179), (1, 77, 264), (2, 4, 257), (3, 236, 60), (7, 151, 179)],
 [4, 4, 4, 4, 2])
==================================================================================
#                  args                     #
=============================================
{'B': 900,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 263, 145),
 (1, 1, 86),
 (2, 263, 222),
 (3, 258, 129),
 (4, 64, 289),
 (5, 256, 247),
 (6, 227, 281),
 (7, 242, 16)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 82, 20),
 (1, 135, 197),
 (2, 121, 71),
 (3, 25, 201),
 (4, 77, 11),
 (5, 141, 126),
 (6, 200, 173),
 (7, 293, 114),
 (8, 15, 276),
 (9, 283, 160),
 (10, 83, 105),
 (11, 81, 75),
 (12, 266, 34),
 (13, 250, 47),
 (14, 127, 10),
 (15, 293, 73),
 (16, 121, 98),
 (17, 163, 208),
 (18, 150, 76),
 (19, 72, 288),
 (20, 164, 165),
 (21, 148, 123),
 (22, 237, 153),
 (23, 195, 118),
 (24, 207, 265),
 (25, 194, 80),
 (26, 105, 85),
 (27, 279, 258),
 (28, 76, 31),
 (29, 269, 239),
 (30, 267, 194),
 (31, 109, 170),
 (32, 32, 116),
 (33, 225, 206),
 (34, 89, 39),
 (35, 259, 196),
 (36, 220, 283),
 (37, 133, 46),
 (38, 292, 151),
 (39, 7, 28),
 (40, 151, 33),
 (41, 150, 174),
 (42, 218, 268),
 (43, 30, 90),
 (44, 217, 27),
 (45, 74, 130),
 (46, 138, 208),
 (47, 163, 43),
 (48, 180, 86),
 (49, 102, 3)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.10729504010450637,
 0.17883247930329857,
 0.13044122475266584,
 0.1618406472604027,
 0.16722082209356559,
 0.17212339581623382,
 0.18838431606334066,
 0.14040692714346747,
 0.13683458917759303,
 0.14236516223787654,
 0.18008289865116781,
 0.11835332235432147,
 0.14361719111953297,
 0.17444040401886807,
 0.15034586405953454,
 0.14109836063463188,
 0.1548744735166431,
 0.16849706193249231,
 0.14453833758454174,
 0.11794521705329664,
 0.17716692810730386,
 0.17942265493657139,
 0.14025564736176302,
 0.12284969490986852,
 0.16126835507081719,
 0.11392828449011538,
 0.18727032257854523,
 0.18356256594231843,
 0.11405178780975882,
 0.12986586726506349,
 0.10158340689601197,
 0.17900200488367127,
 0.19109046520553674,
 0.18628049667521993,
 0.11821073188779786,
 0.11333902478411392,
 0.14289787832811007,
 0.18985502202255544,
 0.15313150419357879,
 0.13328066650461454,
 0.1371972410922801,
 0.14434764913924533,
 0.17280586583427132,
 0.11416138525951436,
 0.12891225956849006,
 0.13681694938797254,
 0.19939562971895664,
 0.15096276873762304,
 0.17430527322969652,
 0.16099985675286999]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 3, 3, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.94240453181506312,
 [(2, 263, 222), (6, 227, 281), (0, 263, 145), (3, 258, 129)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.98904073607553511,
 [(2, 263, 222), (6, 227, 281), (0, 263, 145), (5, 256, 247), (4, 64, 289)],
 [4, 4, 4, 3, 3])
=============================================
#                solution A                 #
=============================================
(0.98904073607553511,
 [(2, 263, 222), (6, 227, 281), (0, 263, 145), (5, 256, 247), (4, 64, 289)],
 [4, 4, 4, 3, 3])
=============================================
#           result of greedy part           #
=============================================
(1.0610588603016111,
 {(0, 263, 145): 4, (2, 263, 222): 4, (5, 256, 247): 4, (6, 227, 281): 4},
 [(2, 263, 222), (6, 227, 281), (0, 263, 145), (5, 256, 247), (6, 227, 28=============================================
#                  args                     #
=============================================
{'B': 900,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 212, 153),
 (1, 137, 176),
 (2, 213, 261),
 (3, 288, 26),
 (4, 257, 184),
 (5, 166, 187),
 (6, 242, 284),
 (7, 126, 35)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 132, 193),
 (1, 39, 179),
 (2, 247, 228),
 (3, 118, 155),
 (4, 47, 140),
 (5, 273, 249),
 (6, 180, 238),
 (7, 182, 42),
 (8, 212, 62),
 (9, 93, 109),
 (10, 166, 263),
 (11, 197, 216),
 (12, 282, 243),
 (13, 133, 127),
 (14, 80, 52),
 (15, 202, 95),
 (16, 119, 199),
 (17, 139, 18),
 (18, 136, 195),
 (19, 189, 240),
 (20, 84, 258),
 (21, 248, 41),
 (22, 243, 151),
 (23, 244, 164),
 (24, 168, 243),
 (25, 87, 79),
 (26, 147, 89),
 (27, 242, 85),
 (28, 115, 234),
 (29, 7, 124),
 (30, 203, 156),
 (31, 155, 90),
 (32, 142, 20),
 (33, 214, 231),
 (34, 114, 44),
 (35, 86, 297),
 (36, 255, 214),
 (37, 87, 108),
 (38, 103, 218),
 (39, 257, 11),
 (40, 164, 53),
 (41, 279, 257),
 (42, 204, 99),
 (43, 52, 234),
 (44, 22, 85),
 (45, 19, 156),
 (46, 265, 182),
 (47, 13, 232),
 (48, 107, 269),
 (49, 60, 41)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.11435136596839807,
 0.17378756032642978,
 0.17632145844973646,
 0.12502492874879162,
 0.15962128289559821,
 0.12582891414176958,
 0.15006923961004495,
 0.1147941538861697,
 0.15137550007289352,
 0.1639663928946066,
 0.16156824203543263,
 0.18417990276502713,
 0.19554281735866491,
 0.11129190760773837,
 0.10444311856185395,
 0.14011298987555848,
 0.15365606108485316,
 0.12038709448277593,
 0.12774567912275248,
 0.16803914571105139,
 0.16747927037933064,
 0.14269888394821909,
 0.11412293029960117,
 0.1998144051245106,
 0.1397343483513161,
 0.13067976106413112,
 0.12511486611536349,
 0.10156948115220184,
 0.12125707792729419,
 0.165192134504622,
 0.14095041046999879,
 0.11458936157455779,
 0.18958739308393455,
 0.19378521759923376,
 0.17563153331642017,
 0.15651221067242227,
 0.15855129520618585,
 0.11414020985149972,
 0.11374143719247308,
 0.1795807169844682,
 0.11502131382278499,
 0.16648799840007361,
 0.1079842987646266,
 0.17658745001131113,
 0.16007896038032937,
 0.13384589691968374,
 0.19653255191823865,
 0.17892606586734749,
 0.19176441831872287,
 0.1536490301529394]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.1874480053592826,
 [(1, 137, 176), (7, 126, 35), (4, 257, 184), (5, 166, 187)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1874480053592826,
 [(1, 137, 176), (7, 126, 35), (4, 257, 184), (5, 166, 187)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.1874480053592826,
 [(1, 137, 176), (7, 126, 35), (4, 257, 184), (5, 166, 187)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.2971077959542936,
 {(1, 137, 176): 4, (4, 257, 184): 4, (5, 166, 187): 4, (7, 126, 35): 4},
 [(1, 137, 176), (7, 126, 35), (4, 257, 184), (5, 166, 187), (4, 257, 184)],
 [4, 4, 4, 4, 2])
==============================================================
#                  args                     #
=============================================
{'B': 900,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 94, 191),
 (1, 121, 209),
 (2, 236, 226),
 (3, 292, 100),
 (4, 261, 147),
 (5, 192, 118),
 (6, 274, 260),
 (7, 111, 126)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 248, 41),
 (1, 126, 156),
 (2, 147, 300),
 (3, 76, 246),
 (4, 74, 256),
 (5, 80, 124),
 (6, 207, 208),
 (7, 188, 227),
 (8, 64, 266),
 (9, 182, 175),
 (10, 210, 109),
 (11, 158, 47),
 (12, 251, 223),
 (13, 30, 215),
 (14, 218, 91),
 (15, 259, 229),
 (16, 211, 49),
 (17, 228, 49),
 (18, 64, 39),
 (19, 155, 8),
 (20, 8, 263),
 (21, 96, 99),
 (22, 173, 273),
 (23, 254, 91),
 (24, 177, 292),
 (25, 48, 17),
 (26, 168, 118),
 (27, 78, 120),
 (28, 148, 163),
 (29, 253, 215),
 (30, 3, 276),
 (31, 274, 267),
 (32, 142, 164),
 (33, 278, 208),
 (34, 84, 209),
 (35, 118, 284),
 (36, 256, 8),
 (37, 15, 157),
 (38, 291, 1),
 (39, 92, 168),
 (40, 32, 141),
 (41, 156, 161),
 (42, 104, 147),
 (43, 195, 275),
 (44, 89, 172),
 (45, 228, 69),
 (46, 124, 69),
 (47, 256, 244),
 (48, 229, 27),
 (49, 16, 217)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.15404827342533431,
 0.12018945828026706,
 0.13438578807664994,
 0.18899902236281127,
 0.10264140619241212,
 0.17802698575534778,
 0.14763043071643064,
 0.11168437283904092,
 0.16069937402445261,
 0.14998449955694132,
 0.12405065206323411,
 0.12119961232610021,
 0.12671912356065856,
 0.19762954685546505,
 0.15851908802070297,
 0.19882963538349524,
 0.13661599159935239,
 0.12364432050095725,
 0.13083590593348124,
 0.15199608102272305,
 0.19012310139286612,
 0.16219972614404787,
 0.12149875538058763,
 0.15069332388538423,
 0.19306315342210581,
 0.18404427768448939,
 0.18256383785211283,
 0.14512913528926583,
 0.14786490824104037,
 0.15735881714895505,
 0.16332818209423089,
 0.11211227576394354,
 0.12903450437476424,
 0.12213769768699834,
 0.13920372821150984,
 0.16193730293952438,
 0.12443303908813558,
 0.10296401248867992,
 0.13519954098560188,
 0.13710321278315271,
 0.18944201637725971,
 0.1422714624114636,
 0.13026939968241152,
 0.18030718362871059,
 0.1371600487608417,
 0.11611563119608662,
 0.19223153012833921,
 0.16623716779377234,
 0.17263816664907905,
 0.19818508913860849]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.2445393842694199,
 [(0, 94, 191), (2, 236, 226), (7, 111, 126), (5, 192, 118)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.2445393842694199,
 [(0, 94, 191), (2, 236, 226), (7, 111, 126), (5, 192, 118)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.2445393842694199,
 [(0, 94, 191), (2, 236, 226), (7, 111, 126), (5, 192, 118)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.3807057663653097,
 {(0, 94, 191): 4, (2, 236, 226): 4, (5, 192, 118): 4, (7, 111, 126): 4},
 [(0, 94, 191), (2, 236, 226), (7, 111, 126), (5, 192, 118), (2, 236, 226)],
 [4, 4, 4, 4, 2])
===========================================================
#                  args                     #
=============================================
{'B': 900,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 82, 145),
 (1, 14, 74),
 (2, 79, 179),
 (3, 261, 214),
 (4, 96, 272),
 (5, 216, 37),
 (6, 9, 283),
 (7, 247, 25)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 178, 59),
 (1, 296, 209),
 (2, 257, 114),
 (3, 93, 267),
 (4, 71, 285),
 (5, 300, 62),
 (6, 55, 2),
 (7, 60, 223),
 (8, 171, 184),
 (9, 255, 20),
 (10, 120, 104),
 (11, 159, 187),
 (12, 183, 182),
 (13, 147, 245),
 (14, 112, 145),
 (15, 84, 112),
 (16, 124, 113),
 (17, 221, 231),
 (18, 91, 8),
 (19, 116, 252),
 (20, 61, 87),
 (21, 102, 24),
 (22, 94, 295),
 (23, 264, 289),
 (24, 261, 195),
 (25, 5, 101),
 (26, 7, 65),
 (27, 268, 203),
 (28, 5, 85),
 (29, 173, 141),
 (30, 118, 220),
 (31, 229, 268),
 (32, 1, 113),
 (33, 252, 251),
 (34, 274, 125),
 (35, 179, 12),
 (36, 104, 140),
 (37, 38, 133),
 (38, 91, 87),
 (39, 181, 4),
 (40, 145, 168),
 (41, 20, 58),
 (42, 193, 186),
 (43, 113, 50),
 (44, 55, 36),
 (45, 112, 18),
 (46, 130, 36),
 (47, 98, 202),
 (48, 150, 148),
 (49, 120, 97)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.11788476112236397,
 0.12033968200481138,
 0.15847692799614604,
 0.17699265614300064,
 0.10403381761727309,
 0.18152632223947957,
 0.12620753623226799,
 0.19114795000215251,
 0.13684562059166616,
 0.19047685862996325,
 0.15128255863228435,
 0.15860438097340082,
 0.14574194461334897,
 0.10707150507851307,
 0.19584590150076547,
 0.12018525427006044,
 0.18334589770853202,
 0.16309693411493598,
 0.15442713122847038,
 0.12273733754441431,
 0.15988761468552024,
 0.18808928456134996,
 0.13647950919521668,
 0.13189130322480591,
 0.1526194940771182,
 0.10396373641558455,
 0.13829967686617817,
 0.17480286137128059,
 0.15167783411922114,
 0.14719553088422629,
 0.15750636426486445,
 0.11704701435560949,
 0.19588213512601604,
 0.12688083894615726,
 0.15147971359850593,
 0.15316058361035692,
 0.13040075143455671,
 0.16643444428484047,
 0.14752747616815992,
 0.19335616765439265,
 0.1664915971132962,
 0.10036507779157761,
 0.13604278960226207,
 0.10617917159326731,
 0.15349740708974557,
 0.15051281281915482,
 0.119681866623337,
 0.19488603291462045,
 0.1298529788252101,
 0.14360711339153648]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 3, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.1424086138576026,
 [(1, 14, 74), (4, 96, 272), (0, 82, 145), (3, 261, 214)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1424086138576026,
 [(1, 14, 74), (4, 96, 272), (0, 82, 145), (3, 261, 214)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.1424086138576026,
 [(1, 14, 74), (4, 96, 272), (0, 82, 145), (3, 261, 214)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.2830499836805123,
 {(0, 82, 145): 4, (1, 14, 74): 4, (3, 261, 214): 4, (4, 96, 272): 4},
 [(1, 14, 74), (4, 96, 272), (0, 82, 145), (3, 261, 214), (1, 14, 74)],
 [4, 4, 4, 4, 2])
=============================================
#=============================================
#                  args                     #
=============================================
{'B': 900,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 197, 231),
 (1, 51, 97),
 (2, 122, 45),
 (3, 88, 228),
 (4, 241, 29),
 (5, 278, 260),
 (6, 212, 203),
 (7, 139, 26)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 171, 207),
 (1, 154, 229),
 (2, 267, 162),
 (3, 136, 169),
 (4, 199, 295),
 (5, 144, 70),
 (6, 236, 60),
 (7, 121, 224),
 (8, 114, 169),
 (9, 16, 154),
 (10, 190, 200),
 (11, 252, 275),
 (12, 77, 280),
 (13, 299, 220),
 (14, 76, 188),
 (15, 19, 218),
 (16, 29, 174),
 (17, 73, 184),
 (18, 224, 135),
 (19, 179, 208),
 (20, 183, 251),
 (21, 109, 11),
 (22, 168, 31),
 (23, 300, 9),
 (24, 73, 241),
 (25, 22, 56),
 (26, 271, 170),
 (27, 70, 91),
 (28, 121, 178),
 (29, 190, 223),
 (30, 175, 97),
 (31, 153, 17),
 (32, 102, 128),
 (33, 195, 138),
 (34, 228, 210),
 (35, 22, 62),
 (36, 186, 106),
 (37, 197, 168),
 (38, 219, 90),
 (39, 106, 115),
 (40, 226, 208),
 (41, 76, 30),
 (42, 134, 220),
 (43, 33, 81),
 (44, 129, 149),
 (45, 46, 297),
 (46, 187, 34),
 (47, 242, 107),
 (48, 143, 242),
 (49, 181, 64)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.15926840006239246,
 0.18608343368082519,
 0.19480668074280172,
 0.17431630080338636,
 0.19789355041924095,
 0.15922437576053458,
 0.15562035004604913,
 0.1484286898748407,
 0.12739039857907905,
 0.12101292927155366,
 0.16618457192532901,
 0.15412237868821091,
 0.14872839529979717,
 0.17982551738475788,
 0.13731159910928842,
 0.15462719411848042,
 0.15631320739130336,
 0.18650079273871398,
 0.11687806461633188,
 0.12921382472979651,
 0.18293377376062903,
 0.11607075278138355,
 0.12021794294284284,
 0.19108407140758676,
 0.12798981470229792,
 0.14221258814191534,
 0.18043619697095944,
 0.15278541365980297,
 0.18952840136832455,
 0.1485999403696952,
 0.17409278164823555,
 0.1295681556104212,
 0.13390974908723394,
 0.11302917212392999,
 0.11762492060193258,
 0.1058719809606611,
 0.10013102807561211,
 0.16587859061800447,
 0.16274464374991868,
 0.10864712418615766,
 0.19537566147154695,
 0.19766710076847077,
 0.18449441554165802,
 0.10095296520356797,
 0.19996708357493045,
 0.13682645125011203,
 0.15907991726060444,
 0.17688929105546203,
 0.15511067758323885,
 0.15238663584461024]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.2813998798313737,
 [(6, 212, 203), (0, 197, 231), (3, 88, 228), (7, 139, 26)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.2813998798313737,
 [(6, 212, 203), (0, 197, 231), (3, 88, 228), (7, 139, 26)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.2813998798313737,
 [(6, 212, 203), (0, 197, 231), (3, 88, 228), (7, 139, 26)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.6005554427549857,
 {(0, 197, 231): 4, (3, 88, 228): 4, (6, 212, 203): 4},
 [(6, 212, 203), (0, 197, 231), (3, 88, 228), (0, 197, 231), (6, 212, 203)],
 [4, 4, 4, 3, 3])
===============================================================================
#                  args                     #
=============================================
{'B': 900,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 213, 198),
 (1, 36, 179),
 (2, 255, 82),
 (3, 73, 195),
 (4, 26, 206),
 (5, 289, 53),
 (6, 45, 240),
 (7, 195, 253)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 243, 221),
 (1, 207, 49),
 (2, 2, 258),
 (3, 162, 249),
 (4, 134, 216),
 (5, 294, 242),
 (6, 299, 179),
 (7, 85, 150),
 (8, 55, 125),
 (9, 76, 144),
 (10, 87, 138),
 (11, 154, 127),
 (12, 167, 23),
 (13, 171, 265),
 (14, 269, 214),
 (15, 247, 234),
 (16, 25, 54),
 (17, 118, 248),
 (18, 97, 139),
 (19, 163, 60),
 (20, 76, 236),
 (21, 36, 215),
 (22, 115, 280),
 (23, 40, 134),
 (24, 191, 289),
 (25, 54, 107),
 (26, 236, 44),
 (27, 79, 265),
 (28, 33, 264),
 (29, 136, 50),
 (30, 74, 45),
 (31, 215, 37),
 (32, 28, 198),
 (33, 68, 121),
 (34, 90, 100),
 (35, 261, 226),
 (36, 234, 36),
 (37, 45, 295),
 (38, 298, 21),
 (39, 4, 123),
 (40, 145, 225),
 (41, 270, 118),
 (42, 269, 282),
 (43, 291, 129),
 (44, 121, 89),
 (45, 40, 183),
 (46, 288, 178),
 (47, 153, 274),
 (48, 275, 78),
 (49, 265, 272)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.10081790813515165,
 0.14289961017321837,
 0.14446186149898022,
 0.17800091957956796,
 0.16887487993234851,
 0.14524881001337722,
 0.11769773641878861,
 0.1823255812404424,
 0.13137620832522881,
 0.10576801685551851,
 0.19533923127510758,
 0.13520041603944355,
 0.18963908014363356,
 0.13541000836978637,
 0.17361527070835314,
 0.10279286737254992,
 0.1010686594653878,
 0.15188502394547418,
 0.10956034569699726,
 0.13386285676396537,
 0.15913067640114661,
 0.12774219751533691,
 0.1896178216215354,
 0.19582445632754131,
 0.15518939884760352,
 0.169399211552902,
 0.11705901947218447,
 0.15167967941282617,
 0.17827833682616798,
 0.13144607956192725,
 0.16910607083994661,
 0.19754505363757643,
 0.14664328961229064,
 0.16659956456949598,
 0.10628433025096452,
 0.1964895716270417,
 0.19080272723408417,
 0.16364747341948777,
 0.14544247688043918,
 0.16639735275310141,
 0.14865550308085915,
 0.17577679353853967,
 0.1157170846753728,
 0.12570385892041325,
 0.1998404329954766,
 0.11337813240387988,
 0.11574575362978803,
 0.12247802753918369,
 0.16761744640991028,
 0.10310614859892708]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.1360662930049548,
 [(1, 36, 179), (4, 26, 206), (3, 73, 195), (6, 45, 240)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1360662930049548,
 [(1, 36, 179), (4, 26, 206), (3, 73, 195), (6, 45, 240)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.1360662930049548,
 [(1, 36, 179), (4, 26, 206), (3, 73, 195), (6, 45, 240)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.2374017208952655,
 {(1, 36, 179): 4, (3, 73, 195): 4, (4, 26, 206): 4, (6, 45, 240): 4},
 [(1, 36, 179), (4, 26, 206), (3, 73, 195), (6, 45, 240), (1, 36, 179)],
 [4, 4, 4, 4, 2])
===================================================================================
#                  args                     #
=============================================
{'B': 900,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 24, 199),
 (1, 184, 291),
 (2, 258, 134),
 (3, 55, 250),
 (4, 259, 149),
 (5, 200, 240),
 (6, 178, 132),
 (7, 199, 38)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 51, 132),
 (1, 116, 152),
 (2, 94, 166),
 (3, 264, 271),
 (4, 164, 7),
 (5, 76, 211),
 (6, 46, 113),
 (7, 93, 78),
 (8, 241, 290),
 (9, 265, 106),
 (10, 197, 250),
 (11, 19, 112),
 (12, 142, 0),
 (13, 268, 139),
 (14, 4, 36),
 (15, 268, 53),
 (16, 99, 119),
 (17, 143, 149),
 (18, 202, 69),
 (19, 112, 28),
 (20, 131, 252),
 (21, 231, 101),
 (22, 116, 23),
 (23, 64, 226),
 (24, 277, 162),
 (25, 118, 159),
 (26, 134, 219),
 (27, 156, 256),
 (28, 56, 189),
 (29, 145, 115),
 (30, 164, 77),
 (31, 12, 216),
 (32, 90, 296),
 (33, 86, 92),
 (34, 187, 207),
 (35, 250, 5),
 (36, 95, 231),
 (37, 138, 244),
 (38, 279, 12),
 (39, 266, 85),
 (40, 172, 25),
 (41, 268, 9),
 (42, 271, 44),
 (43, 8, 164),
 (44, 215, 19),
 (45, 201, 204),
 (46, 81, 89),
 (47, 115, 77),
 (48, 208, 132),
 (49, 246, 156)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.14080037946526588,
 0.12378858370639276,
 0.13944422658156458,
 0.13168116617086498,
 0.18296610209682654,
 0.18158958585067614,
 0.18477638790166601,
 0.12014679786800235,
 0.15667762150654688,
 0.13126448910031929,
 0.12755097451432301,
 0.16762668637533057,
 0.1960572840864033,
 0.17814985536257733,
 0.15135289592719164,
 0.14550476727981701,
 0.12784025340599717,
 0.18931778636961627,
 0.16830490266765835,
 0.17471517199153414,
 0.12500979465443862,
 0.1637821268716626,
 0.16214214735104615,
 0.19487596003984051,
 0.10340323539857003,
 0.12033761162453765,
 0.10734039499041023,
 0.15127989868528902,
 0.10763876988598627,
 0.12178230762036203,
 0.18587079041489732,
 0.14041872740719652,
 0.14437498937318774,
 0.12312925676958852,
 0.18880849128651384,
 0.19935004946409465,
 0.17552480067747556,
 0.18391575242043984,
 0.18549188349462475,
 0.11515225822328229,
 0.13021450974680024,
 0.13962903141327609,
 0.12128577224313013,
 0.18726373386567793,
 0.19490992290164605,
 0.16310717498937544,
 0.17219577525333013,
 0.15866634051554601,
 0.12890016556212847,
 0.18957429788481711]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(0.99178034125008829,
 [(4, 259, 149), (2, 258, 134), (7, 199, 38), (5, 200, 240)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(0.99178034125008829,
 [(4, 259, 149), (2, 258, 134), (7, 199, 38), (5, 200, 240)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(0.99178034125008829,
 [(4, 259, 149), (2, 258, 134), (7, 199, 38), (5, 200, 240)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.1070258000256987,
 {(2, 258, 134): 4, (4, 259, 149): 4, (5, 200, 240): 4, (7, 199, 38): 4},
 [(4, 259, 149), (2, 258, 134), (7, 199, 38), (5, 200, 240), (2, 258, 134)],
 [4, 4, 4, 4, 2])
==============================================================
#                  args                     #
=============================================
{'B': 900,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 185, 267),
 (1, 37, 123),
 (2, 188, 183),
 (3, 170, 254),
 (4, 22, 148),
 (5, 117, 195),
 (6, 99, 45),
 (7, 22, 184)]
=============================================
#                 sensors                   #
=============================================
50 sensors generated.
[(0, 92, 22),
 (1, 146, 130),
 (2, 192, 213),
 (3, 144, 300),
 (4, 57, 102),
 (5, 77, 206),
 (6, 228, 95),
 (7, 299, 300),
 (8, 72, 130),
 (9, 126, 43),
 (10, 253, 5),
 (11, 120, 186),
 (12, 159, 239),
 (13, 72, 44),
 (14, 111, 204),
 (15, 77, 91),
 (16, 44, 54),
 (17, 132, 181),
 (18, 117, 79),
 (19, 179, 118),
 (20, 83, 192),
 (21, 90, 136),
 (22, 117, 55),
 (23, 11, 45),
 (24, 34, 285),
 (25, 45, 33),
 (26, 220, 157),
 (27, 281, 294),
 (28, 24, 85),
 (29, 226, 208),
 (30, 101, 64),
 (31, 194, 269),
 (32, 171, 249),
 (33, 36, 13),
 (34, 175, 144),
 (35, 57, 121),
 (36, 160, 215),
 (37, 96, 38),
 (38, 261, 74),
 (39, 169, 17),
 (40, 295, 28),
 (41, 165, 180),
 (42, 260, 178),
 (43, 50, 49),
 (44, 141, 37),
 (45, 283, 19),
 (46, 69, 90),
 (47, 58, 287),
 (48, 259, 253),
 (49, 107, 64)]
=============================================
#                sensor's P                 #
=============================================
50 sensor's P generated.
[0.12728764328229039,
 0.19616961448377007,
 0.10828725607274912,
 0.19282577878070109,
 0.13980497499900263,
 0.15683263213009671,
 0.18274452918417183,
 0.13871138174626166,
 0.11803700369028132,
 0.18976240614978446,
 0.10705162453339409,
 0.10187316973703803,
 0.19956131012770137,
 0.1844301958473914,
 0.17582813711774006,
 0.15802980579370479,
 0.14332906154672956,
 0.12481878302191435,
 0.12156455824209539,
 0.10630587229313952,
 0.19581452726777562,
 0.10029249734723668,
 0.17578744336935587,
 0.10774574098895148,
 0.15212133067259995,
 0.16250538146750027,
 0.18535245675865161,
 0.1489956154903555,
 0.16285944583599682,
 0.17341094818261765,
 0.19663572709465821,
 0.1480942762884182,
 0.11857506036382764,
 0.11017265331187526,
 0.1862457374241144,
 0.13766232294846989,
 0.17761601995035178,
 0.16178113883230483,
 0.19253981981169602,
 0.10900299439712607,
 0.15344133844355426,
 0.13159841924694984,
 0.19749862842120347,
 0.14701775563390096,
 0.14813938982534891,
 0.1232928026841741,
 0.11722601331401417,
 0.16604159441336705,
 0.18159855982648276,
 0.12718904063354672]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.5345714266273125,
 [(6, 99, 45), (5, 117, 195), (3, 170, 254), (2, 188, 183)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.5345714266273125,
 [(6, 99, 45), (5, 117, 195), (3, 170, 254), (2, 188, 183)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.5345714266273125,
 [(6, 99, 45), (5, 117, 195), (3, 170, 254), (2, 188, 183)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.8828265231538097,
 {(3, 170, 254): 4, (5, 117, 195): 4, (6, 99, 45): 4},
 [(6, 99, 45), (5, 117, 195), (6, 99, 45), (3, 170, 254), (5, 117, 195)],
 [4, 4, 3, 4, 3])
=============================================
#     ===========
#           result of greedy part           #
=============================================
(1.6183869205895973,
 {(0, 197, 231): 4, (6, 212, 203): 4},
 [(6, 212, 203),
  (0, 197, 231),
  (0, 197, 231),
  (6, 212, 203),
  (0, 197, 231),
  (6, 212, 203)],
 [4, 4, 3, 3, 2, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 900.000000
=============================================
#                solution B                 #
=============================================
(1.2871480009181528,
 [(1, 51, 97), (7, 139, 26), (6, 212, 203), (3, 88, 228), (0, 197, 231)],
 [4, 4, 4, 2, 4])
=============================================
#               random h list               #
=============================================
[3, 2, 3, 4, 1, 0, 4, 1]
=============================================
#               solution Ran                #
=============================================
(1.1445707192345949,
 [(0, 197, 231),
  (1, 51, 97),
  (2, 122, 45),
  (3, 88, 228),
  (4, 241, 29),
  (6, 212, 203),
  (7, 139, 26)],
 [3, 2, 3, 4, 1, 4, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.36020257139675,
 [(0, 197, 231), (1, 51, 97), (3, 88, 228), (6, 212, 203), (7, 139, 26)],
 [4, 4, 4, 4, 2])
==================
#           result of greedy part           #
=============================================
(1.2643145360066481,
 {(0, 234, 185): 4, (2, 218, 151): 4, (6, 230, 28): 4},
 [(2, 218, 151), (2, 218, 151), (6, 230, 28), (6, 230, 28), (0, 234, 185)],
 [4, 3, 4, 3, 4])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 900.000000
=============================================
#                solution B                 #
=============================================
(1.0939185718370672,
 [(0, 234, 185), (6, 230, 28), (3, 219, 297), (2, 218, 151), (1, 34, 11)],
 [4, 4, 2, 4, 4])
=============================================
#               random h list               #
=============================================
[1, 4, 4, 3, 1, 3, 2, 0]
=============================================
#               solution Ran                #
=============================================
(0.86697789303948369,
 [(0, 234, 185),
  (1, 34, 11),
  (2, 218, 151),
  (3, 219, 297),
  (4, 139, 98),
  (5, 19, 130),
  (6, 230, 28)],
 [1, 4, 4, 3, 1, 3, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.1322600184722207,
 [(0, 234, 185), (2, 218, 151), (5, 19, 130), (6, 230, 28), (7, 124, 171)],
 [4, 4, 4, 4, 2])
============================
#           result of greedy part           #
=============================================
(1.1421289885563488,
 {(2, 258, 134): 4, (4, 259, 149): 4, (7, 199, 38): 4},
 [(4, 259, 149), (2, 258, 134), (4, 259, 149), (2, 258, 134), (7, 199, 38)],
 [4, 4, 3, 3, 4])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 900.000000
=============================================
#                solution B                 #
=============================================
(1.0565266046926205,
 [(0, 24, 199), (7, 199, 38), (5, 200, 240), (2, 258, 134), (4, 259, 149)],
 [2, 4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 0, 1, 3, 0, 3, 0, 1]
=============================================
#               solution Ran                #
=============================================
(0.28468228350670505,
 [(2, 258, 134), (3, 55, 250), (5, 200, 240), (7, 199, 38)],
 [1, 3, 3, 1])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.0569233095059269,
 [(2, 258, 134), (4, 259, 149), (5, 200, 240), (6, 178, 132), (7, 199, 38)],
 [2, 4, 4, 4, 4])
           result of greedy part           #
=============================================
(1.3253016064263907,
 {(0, 82, 145): 4, (1, 14, 74): 4, (4, 96, 272): 4},
 [(1, 14, 74),
  (1, 14, 74),
  (4, 96, 272),
  (1, 14, 74),
  (0, 82, 145),
  (1, 14, 74)],
 [4, 3, 4, 2, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 900.000000
=============================================
#                solution B                 #
=============================================
(1.1835651414018085,
 [(7, 247, 25), (0, 82, 145), (1, 14, 74), (3, 261, 214), (4, 96, 272)],
 [2, 4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 4, 0, 4, 4, 2, 0, 0]
=============================================
#               solution Ran                #
=============================================
(0.91553522567788903,
 [(1, 14, 74), (3, 261, 214), (4, 96, 272), (5, 216, 37)],
 [4, 4, 4, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.2042432999510397,
 [(0, 82, 145), (1, 14, 74), (2, 79, 179), (3, 261, 214), (4, 96, 272)],
 [4, 4, 4, 2, 4])
      result of greedy part           #
=============================================
(1.9184640685532697,
 {(5, 117, 195): 4, (6, 99, 45): 4},
 [(6, 99, 45),
  (6, 99, 45),
  (6, 99, 45),
  (5, 117, 195),
  (5, 117, 195),
  (6, 99, 45),
  (5, 117, 195)],
 [4, 3, 2, 4, 3, 1, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 900.000000
=============================================
#                solution B                 #
=============================================
(1.5644352585061105,
 [(5, 117, 195), (1, 37, 123), (6, 99, 45), (3, 170, 254), (0, 185, 267)],
 [4, 2, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 1, 2, 0, 4, 1, 4, 3]
=============================================
#               solution Ran                #
=============================================
(1.0129946739779889,
 [(0, 185, 267),
  (1, 37, 123),
  (2, 188, 183),
  (4, 22, 148),
  (5, 117, 195),
  (6, 99, 45),
  (7, 22, 184)],
 [3, 1, 2, 4, 1, 4, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.6173758331810304,
 [(1, 37, 123), (2, 188, 183), (3, 170, 254), (5, 117, 195), (6, 99, 45)],
 [2, 4, 4, 4, 4])
============================
#           result of greedy part           #
=============================================
(1.3327652839130402,
 {(1, 137, 176): 4, (4, 257, 184): 4, (7, 126, 35): 4},
 [(1, 137, 176), (7, 126, 35), (4, 257, 184), (7, 126, 35), (4, 257, 184)],
 [4, 4, 4, 3, 3])
Warning: remaining budget can not be full filled.
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 850.000000
=============================================
#                solution B                 #
=============================================
(1.168677388566048,
 [(0, 212, 153), (1, 137, 176), (2, 213, 261), (4, 257, 184), (7, 126, 35)],
 [4, 4, 1, 4, 4])
=============================================
#               random h list               #
=============================================
[4, 1, 0, 4, 3, 2, 1, 3]
=============================================
#               solution Ran                #
=============================================
(0.83636183590262747,
 [(0, 212, 153),
  (1, 137, 176),
  (3, 288, 26),
  (4, 257, 184),
  (5, 166, 187),
  (6, 242, 284),
  (7, 126, 35)],
 [4, 1, 4, 3, 2, 1, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.2773520345888818,
 [(1, 137, 176), (2, 213, 261), (4, 257, 184), (5, 166, 187), (7, 126, 35)],
 [4, 2, 4, 4, 4])
=======
#           result of greedy part           #
=============================================
(1.3025796723981258,
 {(1, 36, 179): 4, (3, 73, 195): 4, (4, 26, 206): 4},
 [(1, 36, 179), (1, 36, 179), (4, 26, 206), (3, 73, 195), (4, 26, 206)],
 [4, 3, 4, 4, 3])
Warning: remaining budget can not be full filled.
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 850.000000
=============================================
#                solution B                 #
=============================================
(1.0777431583266106,
 [(2, 255, 82), (0, 213, 198), (1, 36, 179), (3, 73, 195), (4, 26, 206)],
 [4, 1, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 0, 0, 0, 1, 2, 3, 3]
=============================================
#               solution Ran                #
=============================================
(0.42791962992717264,
 [(0, 213, 198), (4, 26, 206), (5, 289, 53), (6, 45, 240), (7, 195, 253)],
 [3, 1, 2, 3, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.2201421411730256,
 [(1, 36, 179), (3, 73, 195), (4, 26, 206), (6, 45, 240), (7, 195, 253)],
 [4, 4, 4, 2, 4])
===============================
#           result of greedy part           #
=============================================
(1.4458926559455267,
 {(0, 94, 191): 4, (2, 236, 226): 4, (7, 111, 126): 4},
 [(0, 94, 191), (2, 236, 226), (7, 111, 126), (7, 111, 126), (2, 236, 226)],
 [4, 4, 4, 3, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 900.000000
=============================================
#                solution B                 #
=============================================
(1.2878646398636828,
 [(0, 94, 191), (6, 274, 260), (5, 192, 118), (7, 111, 126), (2, 236, 226)],
 [4, 4, 2, 4, 4])
=============================================
#               random h list               #
=============================================
[2, 0, 3, 4, 0, 3, 4, 2]
=============================================
#               solution Ran                #
=============================================
(0.91998276785013722,
 [(0, 94, 191),
  (2, 236, 226),
  (3, 292, 100),
  (5, 192, 118),
  (6, 274, 260),
  (7, 111, 126)],
 [2, 3, 4, 3, 4, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.350493878079585,
 [(0, 94, 191), (2, 236, 226), (5, 192, 118), (6, 274, 260), (7, 111, 126)],
 [4, 4, 4, 2, 4])
1)],
 [4, 4, 4, 4, 2])
=============================================
#           result of greedy part           #
=============================================
(1.078627714349051,
 {(0, 263, 145): 4, (2, 263, 222): 4, (5, 256, 247): 3, (6, 227, 281): 4},
 [(2, 263, 222), (6, 227, 281), (0, 263, 145), (6, 227, 281), (5, 256, 247)],
 [4, 4, 4, 3, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 900.000000
=============================================
#                solution B                 #
=============================================
(1.0079968746471868,
 [(4, 64, 289), (6, 227, 281), (0, 263, 145), (2, 263, 222), (5, 256, 247)],
 [2, 4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[2, 3, 3, 4, 0, 0, 3, 3]
=============================================
#               solution Ran                #
=============================================
(0.75206347448884736,
 [(0, 263, 145),
  (1, 1, 86),
  (2, 263, 222),
  (3, 258, 129),
  (6, 227, 281),
  (7, 242, 16)],
 [2, 3, 3, 4, 3, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.0412967847799495,
 [(0, 263, 145), (2, 263, 222), (3, 258, 129), (5, 256, 247), (6, 227, 281)],
 [4, 4, 4, 3, 3])
========
#           result of greedy part           #
=============================================
(1.125949329485425,
 {(1, 77, 264): 4, (2, 4, 257): 4, (7, 151, 179): 4},
 [(7, 151, 179), (1, 77, 264), (2, 4, 257), (2, 4, 257), (1, 77, 264)],
 [4, 4, 3, 4, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 900.000000
=============================================
#                solution B                 #
=============================================
(0.92375033156020625,
 [(7, 151, 179), (5, 235, 281), (2, 4, 257), (1, 77, 264), (3, 236, 60)],
 [4, 4, 4, 4, 2])
=============================================
#               random h list               #
=============================================
[2, 0, 4, 2, 1, 0, 3, 0]
=============================================
#               solution Ran                #
=============================================
(0.38845328191334622,
 [(0, 127, 127), (2, 4, 257), (3, 236, 60), (4, 260, 62), (6, 251, 264)],
 [2, 4, 2, 1, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.0718768731026591,
 [(1, 77, 264), (2, 4, 257), (3, 236, 60), (4, 260, 62), (7, 151, 179)],
 [4, 3, 4, 3, 4])
{'B': 900,
 'M': 50,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
[{'A': (1.5345714266273125,
        [(6, 99, 45), (5, 117, 195), (3, 170, 254), (2, 188, 183)],
        [4, 4, 4, 4]),
  'B': (1.5644352585061105,
        [(5, 117, 195),
         (1, 37, 123),
         (6, 99, 45),
         (3, 170, 254),
         (0, 185, 267)],
        [4, 2, 4, 4, 4]),
  'Opt': (1.6173758331810304,
          [(1, 37, 123),
           (2, 188, 183),
           (3, 170, 254),
           (5, 117, 195),
           (6, 99, 45)],
          [2, 4, 4, 4, 4]),
  'Random': (1.0129946739779889,
             [(0, 185, 267),
              (1, 37, 123),
              (2, 188, 183),
              (4, 22, 148),
              (5, 117, 195),
              (6, 99, 45),
              (7, 22, 184)],
             [3, 1, 2, 4, 1, 4, 3])},
 {'A': (1.1424086138576026,
        [(1, 14, 74), (4, 96, 272), (0, 82, 145), (3, 261, 214)],
        [4, 4, 4, 4]),
  'B': (1.1835651414018085,
        [(7, 247, 25),
         (0, 82, 145),
         (1, 14, 74),
         (3, 261, 214),
         (4, 96, 272)],
        [2, 4, 4, 4, 4]),
  'Opt': (1.2042432999510397,
          [(0, 82, 145),
           (1, 14, 74),
           (2, 79, 179),
           (3, 261, 214),
           (4, 96, 272)],
          [4, 4, 4, 2, 4]),
  'Random': (0.91553522567788903,
             [(1, 14, 74), (3, 261, 214), (4, 96, 272), (5, 216, 37)],
             [4, 4, 4, 2])},
 {'A': (1.2445393842694199,
        [(0, 94, 191), (2, 236, 226), (7, 111, 126), (5, 192, 118)],
        [4, 4, 4, 4]),
  'B': (1.2878646398636828,
        [(0, 94, 191),
         (6, 274, 260),
         (5, 192, 118),
         (7, 111, 126),
         (2, 236, 226)],
        [4, 4, 2, 4, 4]),
  'Opt': (1.350493878079585,
          [(0, 94, 191),
           (2, 236, 226),
           (5, 192, 118),
           (6, 274, 260),
           (7, 111, 126)],
          [4, 4, 4, 2, 4]),
  'Random': (0.91998276785013722,
             [(0, 94, 191),
              (2, 236, 226),
              (3, 292, 100),
              (5, 192, 118),
              (6, 274, 260),
              (7, 111, 126)],
             [2, 3, 4, 3, 4, 2])},
 {'A': (1.1874480053592826,
        [(1, 137, 176), (7, 126, 35), (4, 257, 184), (5, 166, 187)],
        [4, 4, 4, 4]),
  'B': (1.168677388566048,
        [(0, 212, 153),
         (1, 137, 176),
         (2, 213, 261),
         (4, 257, 184),
         (7, 126, 35)],
        [4, 4, 1, 4, 4]),
  'Opt': (1.2773520345888818,
          [(1, 137, 176),
           (2, 213, 261),
           (4, 257, 184),
           (5, 166, 187),
           (7, 126, 35)],
          [4, 2, 4, 4, 4]),
  'Random': (0.83636183590262747,
             [(0, 212, 153),
              (1, 137, 176),
              (3, 288, 26),
              (4, 257, 184),
              (5, 166, 187),
              (6, 242, 284),
              (7, 126, 35)],
             [4, 1, 4, 3, 2, 1, 3])},
 {'A': (1.1360662930049548,
        [(1, 36, 179), (4, 26, 206), (3, 73, 195), (6, 45, 240)],
        [4, 4, 4, 4]),
  'B': (1.0777431583266106,
        [(2, 255, 82),
         (0, 213, 198),
         (1, 36, 179),
         (3, 73, 195),
         (4, 26, 206)],
        [4, 1, 4, 4, 4]),
  'Opt': (1.2201421411730256,
          [(1, 36, 179),
           (3, 73, 195),
           (4, 26, 206),
           (6, 45, 240),
           (7, 195, 253)],
          [4, 4, 4, 2, 4]),
  'Random': (0.42791962992717264,
             [(0, 213, 198),
              (4, 26, 206),
              (5, 289, 53),
              (6, 45, 240),
              (7, 195, 253)],
             [3, 1, 2, 3, 3])},
 {'A': (1.2813998798313737,
        [(6, 212, 203), (0, 197, 231), (3, 88, 228), (7, 139, 26)],
        [4, 4, 4, 4]),
  'B': (1.2871480009181528,
        [(1, 51, 97),
         (7, 139, 26),
         (6, 212, 203),
         (3, 88, 228),
         (0, 197, 231)],
        [4, 4, 4, 2, 4]),
  'Opt': (1.36020257139675,
          [(0, 197, 231),
           (1, 51, 97),
           (3, 88, 228),
           (6, 212, 203),
           (7, 139, 26)],
          [4, 4, 4, 4, 2]),
  'Random': (1.1445707192345949,
             [(0, 197, 231),
              (1, 51, 97),
              (2, 122, 45),
              (3, 88, 228),
              (4, 241, 29),
              (6, 212, 203),
              (7, 139, 26)],
             [3, 2, 3, 4, 1, 4, 1])},
 {'A': (1.005570516982456,
        [(7, 151, 179), (1, 77, 264), (2, 4, 257), (3, 236, 60)],
        [4, 4, 4, 4]),
  'B': (0.92375033156020625,
        [(7, 151, 179),
         (5, 235, 281),
         (2, 4, 257),
         (1, 77, 264),
         (3, 236, 60)],
        [4, 4, 4, 4, 2]),
  'Opt': (1.0718768731026591,
          [(1, 77, 264),
           (2, 4, 257),
           (3, 236, 60),
           (4, 260, 62),
           (7, 151, 179)],
          [4, 3, 4, 3, 4]),
  'Random': (0.38845328191334622,
             [(0, 127, 127),
              (2, 4, 257),
              (3, 236, 60),
              (4, 260, 62),
              (6, 251, 264)],
             [2, 4, 2, 1, 3])},
 {'A': (0.99178034125008829,
        [(4, 259, 149), (2, 258, 134), (7, 199, 38), (5, 200, 240)],
        [4, 4, 4, 4]),
  'B': (1.0565266046926205,
        [(0, 24, 199),
         (7, 199, 38),
         (5, 200, 240),
         (2, 258, 134),
         (4, 259, 149)],
        [2, 4, 4, 4, 4]),
  'Opt': (1.0569233095059269,
          [(2, 258, 134),
           (4, 259, 149),
           (5, 200, 240),
           (6, 178, 132),
           (7, 199, 38)],
          [2, 4, 4, 4, 4]),
  'Random': (0.28468228350670505,
             [(2, 258, 134), (3, 55, 250), (5, 200, 240), (7, 199, 38)],
             [1, 3, 3, 1])},
 {'A': (1.0665820657511398,
        [(2, 218, 151), (6, 230, 28), (0, 234, 185), (5, 19, 130)],
        [4, 4, 4, 4]),
  'B': (1.0939185718370672,
        [(0, 234, 185),
         (6, 230, 28),
         (3, 219, 297),
         (2, 218, 151),
         (1, 34, 11)],
        [4, 4, 2, 4, 4]),
  'Opt': (1.1322600184722207,
          [(0, 234, 185),
           (2, 218, 151),
           (5, 19, 130),
           (6, 230, 28),
           (7, 124, 171)],
          [4, 4, 4, 4, 2]),
  'Random': (0.86697789303948369,
             [(0, 234, 185),
              (1, 34, 11),
              (2, 218, 151),
              (3, 219, 297),
              (4, 139, 98),
              (5, 19, 130),
              (6, 230, 28)],
             [1, 4, 4, 3, 1, 3, 2])},
 {'A': (0.98904073607553511,
        [(2, 263, 222),
         (6, 227, 281),
         (0, 263, 145),
         (5, 256, 247),
         (4, 64, 289)],
        [4, 4, 4, 3, 3]),
  'B': (1.0079968746471868,
        [(4, 64, 289),
         (6, 227, 281),
         (0, 263, 145),
         (2, 263, 222),
         (5, 256, 247)],
        [2, 4, 4, 4, 4]),
  'Opt': (1.0412967847799495,
          [(0, 263, 145),
           (2, 263, 222),
           (3, 258, 129),
           (5, 256, 247),
           (6, 227, 281)],
          [4, 4, 4, 3, 3]),
  'Random': (0.75206347448884736,
             [(0, 263, 145),
              (1, 1, 86),
              (2, 263, 222),
              (3, 258, 129),
              (6, 227, 281),
              (7, 242, 16)],
             [2, 3, 3, 4, 3, 3])}]
{'A': 1.1579407263009167,
 'B': 1.1651625970319495,
 'Opt': 1.2332166744231068,
 'Random': 0.75495417855187918}

=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 90,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 200, 221),
 (1, 225, 85),
 (2, 298, 108),
 (3, 64, 231),
 (4, 3, 252),
 (5, 107, 277),
 (6, 243, 68),
 (7, 133, 140)]
=============================================
#                 sensors                   #
=============================================
90 sensors generated.
[(0, 181, 57),
 (1, 110, 237),
 (2, 123, 12),
 (3, 88, 7),
 (4, 11, 192),
 (5, 236, 137),
 (6, 256, 120),
 (7, 182, 117),
 (8, 156, 90),
 (9, 270, 203),
 (10, 226, 236),
 (11, 127, 81),
 (12, 276, 45),
 (13, 298, 84),
 (14, 30, 252),
 (15, 256, 144),
 (16, 224, 1),
 (17, 247, 30),
 (18, 8, 211),
 (19, 54, 145),
 (20, 192, 126),
 (21, 96, 197),
 (22, 132, 123),
 (23, 64, 261),
 (24, 208, 121),
 (25, 282, 136),
 (26, 259, 178),
 (27, 110, 247),
 (28, 14, 99),
 (29, 141, 39),
 (30, 194, 85),
 (31, 279, 6),
 (32, 69, 63),
 (33, 137, 273),
 (34, 247, 177),
 (35, 75, 172),
 (36, 11, 149),
 (37, 72, 20),
 (38, 117, 108),
 (39, 144, 232),
 (40, 237, 140),
 (41, 180, 64),
 (42, 256, 280),
 (43, 235, 31),
 (44, 25, 175),
 (45, 219, 119),
 (46, 41, 81),
 (47, 293, 5),
 (48, 95, 150),
 (49, 168, 272),
 (50, 213, 176),
 (51, 81, 182),
 (52, 19, 145),
 (53, 90, 17),
 (54, 25, 26),
 (55, 278, 100),
 (56, 33, 207),
 (57, 184, 83),
 (58, 65, 95),
 (59, 180, 292),
 (60, 143, 246),
 (61, 16, 233),
 (62, 219, 220),
 (63, 31, 63),
 (64, 181, 134),
 (65, 111, 105),
 (66, 134, 198),
 (67, 264, 30),
 (68, 186, 131),
 (69, 74, 54),
 (70, 122, 245),
 (71, 223, 104),
 (72, 134, 90),
 (73, 85, 223),
 (74, 300, 277),
 (75, 137, 163),
 (76, 103, 28),
 (77, 95, 29),
 (78, 19, 145),
 (79, 152, 287),
 (80, 205, 189),
 (81, 286, 108),
 (82, 26, 39),
 (83, 40, 93),
 (84, 22, 257),
 (85, 36, 108),
 (86, 46, 165),
 (87, 239, 263),
 (88, 71, 76),
 (89, 12, 137)]
=============================================
#                sensor's P                 #
=============================================
90 sensor's P generated.
[0.15110231433782847,
 0.12936435211792846,
 0.10921342789739515,
 0.18876662572833058,
 0.14341112876045067,
 0.19315344822814504,
 0.17034541128169889,
 0.18832178672116753,
 0.17586411292241466,
 0.16738138019122034,
 0.11523714527222134,
 0.11012438668211122,
 0.10467194636289075,
 0.11477610144142558,
 0.17768217985852716,
 0.18005527905095442,
 0.14480157772283522,
 0.1119511628725206,
 0.18039020603458483,
 0.11598978147929181,
 0.12845956357142349,
 0.19462747362690402,
 0.19165937991075907,
 0.14205373387869885,
 0.14536739262519793,
 0.1930741397900467,
 0.1717572617426025,
 0.15999717064522845,
 0.10439415595155051,
 0.18968529632146461,
 0.14925195914255598,
 0.19177317405330588,
 0.14498794430874432,
 0.18972135069485069,
 0.10178395862270741,
 0.19867894724687779,
 0.14038720248584591,
 0.18346405359812312,
 0.11331420077084439,
 0.10582816020447637,
 0.18823168856771014,
 0.1052463186412762,
 0.18561805504285164,
 0.10643142425971142,
 0.14660773716967526,
 0.1329259611224802,
 0.15282069539177187,
 0.16600382979912282,
 0.19668634942535032,
 0.194907734887596,
 0.14582699778679575,
 0.11305816190699536,
 0.13661648542606009,
 0.13999465799997346,
 0.1628698021822309,
 0.17683654764886653,
 0.18556853652878569,
 0.15246966702887677,
 0.14355720223147503,
 0.12847669925014124,
 0.14464800587440274,
 0.10285663963725628,
 0.15208589791542174,
 0.12830865835665478,
 0.1069943242540875,
 0.17329784239047907,
 0.15216131045993578,
 0.19917728051590508,
 0.14036368032292035,
 0.11088635972522376,
 0.16298867961350921,
 0.15769235009510613,
 0.15394979749378154,
 0.1010207594788872,
 0.18822937710235524,
 0.18997691303257722,
 0.1713=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 90,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 225, 168),
 (1, 145, 197),
 (2, 270, 205),
 (3, 268, 234),
 (4, 172, 222),
 (5, 69, 187),
 (6, 162, 81),
 (7, 288, 235)]
=============================================
#                 sensors                   #
=============================================
90 sensors generated.
[(0, 32, 198),
 (1, 150, 12),
 (2, 282, 94),
 (3, 285, 81),
 (4, 276, 81),
 (5, 4, 35),
 (6, 193, 237),
 (7, 200, 226),
 (8, 35, 148),
 (9, 204, 149),
 (10, 80, 13),
 (11, 133, 269),
 (12, 247, 61),
 (13, 176, 250),
 (14, 27, 271),
 (15, 172, 138),
 (16, 271, 269),
 (17, 32, 115),
 (18, 72, 119),
 (19, 156, 83),
 (20, 14, 1),
 (21, 56, 201),
 (22, 183, 202),
 (23, 75, 195),
 (24, 192, 234),
 (25, 200, 115),
 (26, 151, 21),
 (27, 145, 115),
 (28, 132, 21),
 (29, 187, 252),
 (30, 276, 172),
 (31, 209, 190),
 (32, 15, 271),
 (33, 145, 38),
 (34, 32, 149),
 (35, 300, 278),
 (36, 243, 106),
 (37, 7, 183),
 (38, 212, 65),
 (39, 45, 197),
 (40, 68, 260),
 (41, 144, 82),
 (42, 180, 220),
 (43, 32, 300),
 (44, 86, 117),
 (45, 178, 20),
 (46, 60, 183),
 (47, 184, 292),
 (48, 234, 82),
 (49, 182, 224),
 (50, 244, 273),
 (51, 77, 25),
 (52, 38, 8),
 (53, 79, 65),
 (54, 96, 6),
 (55, 260, 63),
 (56, 3, 167),
 (57, 210, 34),
 (58, 73, 229),
 (59, 85, 237),
 (60, 206, 106),
 (61, 254, 80),
 (62, 0, 31),
 (63, 213, 78),
 (64, 174, 34),
 (65, 207, 100),
 (66, 116, 145),
 (67, 109, 103),
 (68, 268, 275),
 (69, 299, 213),
 (70, 86, 153),
 (71, 68, 130),
 (72, 218, 91),
 (73, 100, 102),
 (74, 298, 164),
 (75, 268, 210),
 (76, 35, 109),
 (77, 9, 84),
 (78, 284, 236),
 (79, 70, 174),
 (80, 160, 215),
 (81, 56, 100),
 (82, 280, 270),
 (83, 153, 249),
 (84, 33, 238),
 (85, 212, 168),
 (86, 104, 224),
 (87, 281, 230),
 (88, 131, 138),
 (89, 180, 31)]
=============================================
#                sensor's P                 #
=============================================
90 sensor's P generated.
[0.14858938084373274,
 0.14765699343956407,
 0.18270334458214094,
 0.18961643420885055,
 0.14059754266483679,
 0.19214335064279126,
 0.10749798558179779,
 0.12288309088317394,
 0.10190092348419888,
 0.10135002628158117,
 0.12107400085055643,
 0.19067197187859156,
 0.13826971293495388,
 0.19963321067579595,
 0.18457157105745869,
 0.18897012148853781,
 0.18388823433949708,
 0.19481723839427342,
 0.13711316210756788,
 0.19896575894451887,
 0.1471786117814512,
 0.10626241515102067,
 0.17884311663366056,
 0.1371416226164619,
 0.10895888966024732,
 0.13075748899969464,
 0.19449958953842958,
 0.14895874683776922,
 0.16710451708299201,
 0.10000056423518452,
 0.15332963434129016,
 0.19550696835388695,
 0.1717308178393937,
 0.18459977950739487,
 0.10571081996338792,
 0.15919137305672532,
 0.18544921317231228,
 0.1055053583744916,
 0.16636921991976233,
 0.18896553163794838,
 0.1672440516228671,
 0.11358769173648811,
 0.14967177140619292,
 0.13662056368105616,
 0.12816131123036459,
 0.13925507824166644,
 0.19957430685583727,
 0.14286525503765679,
 0.11696980073468455,
 0.17043782565004284,
 0.18037760909196199,
 0.18514490659864671,
 0.13055525222264014,
 0.18371762197553868,
 0.11938885729794095,
 0.180392621658932,
 0.17030174389999858,
 0.18756795604354515,
 0.18426455764135041,
 0.19058591300550984,
 0.17717262837060069,
 0.15132463605648694,
 0.17819004195917978,
 0.18894471725708398,
 0.13436661073931722,
 0.10121874675051915,
 0.15472862161104015,
 0.1735352309240161,
 0.11672286482830302,
 0.15577003382708768,
 0.12949733443661524,
 0.12641923892724521,
 0.15028962066086071,
 0.11131349526196942,
 0.16374762489141648,
 0.11613471068251031,
 =============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 90,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 83, 268),
 (1, 91, 139),
 (2, 49, 72),
 (3, 128, 37),
 (4, 290, 84),
 (5, 96, 68),
 (6, 255, 238),
 (7, 127, 222)]
=============================================
#                 sensors                   #
=============================================
90 sensors generated.
[(0, 125, 2),
 (1, 72, 167),
 (2, 201, 3),
 (3, 263, 165),
 (4, 112, 221),
 (5, 207, 12),
 (6, 52, 1),
 (7, 162, 197),
 (8, 47, 100),
 (9, 93, 50),
 (10, 288, 10),
 (11, 146, 41),
 (12, 228, 22),
 (13, 95, 177),
 (14, 180, 197),
 (15, 105, 89),
 (16, 22, 91),
 (17, 128, 115),
 (18, 95, 163),
 (19, 269, 281),
 (20, 54, 94),
 (21, 153, 23),
 (22, 148, 300),
 (23, 142, 128),
 (24, 108, 271),
 (25, 89, 80),
 (26, 291, 225),
 (27, 119, 237),
 (28, 178, 148),
 (29, 36, 126),
 (30, 100, 31),
 (31, 152, 156),
 (32, 6, 89),
 (33, 275, 40),
 (34, 294, 12),
 (35, 20, 182),
 (36, 200, 168),
 (37, 144, 211),
 (38, 6, 153),
 (39, 231, 50),
 (40, 108, 187),
 (41, 11, 238),
 (42, 262, 1),
 (43, 70, 213),
 (44, 62, 5),
 (45, 259, 18),
 (46, 272, 152),
 (47, 293, 140),
 (48, 247, 235),
 (49, 78, 295),
 (50, 77, 176),
 (51, 201, 145),
 (52, 191, 272),
 (53, 264, 124),
 (54, 63, 275),
 (55, 203, 225),
 (56, 131, 15),
 (57, 93, 31),
 (58, 88, 92),
 (59, 101, 11),
 (60, 289, 114),
 (61, 253, 39),
 (62, 78, 169),
 (63, 183, 164),
 (64, 256, 95),
 (65, 83, 89),
 (66, 39, 155),
 (67, 179, 285),
 (68, 235, 87),
 (69, 168, 169),
 (70, 76, 283),
 (71, 210, 177),
 (72, 97, 93),
 (73, 259, 214),
 (74, 115, 267),
 (75, 211, 206),
 (76, 178, 268),
 (77, 134, 254),
 (78, 153, 211),
 (79, 42, 117),
 (80, 176, 69),
 (81, 41, 222),
 (82, 245, 46),
 (83, 166, 233),
 (84, 274, 30),
 (85, 229, 60),
 (86, 218, 214),
 (87, 16, 25),
 (88, 130, 57),
 (89, 7, 209)]
=============================================
#                sensor's P                 #
=============================================
90 sensor's P generated.
[0.19654745696075376,
 0.1286547110462215,
 0.18166550993690003,
 0.1388830605679478,
 0.14360639602463204,
 0.13817469600582996,
 0.12995220112902592,
 0.13705182493545282,
 0.13178343338814816,
 0.13024467894041869,
 0.10087100285866112,
 0.15612106107669083,
 0.19891496727191549,
 0.1317516939968231,
 0.18008780733657243,
 0.10104162359755908,
 0.19124064058440915,
 0.16584638614306557,
 0.10484126719240087,
 0.1465918339130359,
 0.12091528079441188,
 0.13884818509351388,
 0.18168635281000931,
 0.14104410885966079,
 0.10601024112808735,
 0.12993135970939584,
 0.19227806226082564,
 0.18683875247227782,
 0.16906204560879257,
 0.1449213056860062,
 0.1585121645753538,
 0.11262835896870159,
 0.14694085418369976,
 0.1522685483368845,
 0.1132625562115856,
 0.11213381975254959,
 0.18880383874394618,
 0.11650523123379758,
 0.1050928152925118,
 0.11031309911987332,
 0.12817706252886657,
 0.10843478353982644,
 0.18984954148592548,
 0.16699421413755267,
 0.19564752494995097,
 0.16971300072676621,
 0.12983630399316967,
 0.15422279474109513,
 0.11918253346213623,
 0.14831817975191369,
 0.11039628737206797,
 0.13098189019739287,
 0.16446198413794166,
 0.19585203110951649,
 0.10545666832027883,
 0.11907448612788125,
 0.17108628041486063,
 0.18976883435794681,
 0.15581555455239043,
 0.12798260512092852,
 0.17402987749122009,
 0.13306959267093668,
 0.19688357344113092,
 0.12194824152057886,
 0.13667590956156933,
 0.19219610820781613,
 0.11391410178841009,
 0.14318183529580772,
 0.1302027741144591,
 0.13464713098168807,
 0.1152850380104862,
 0.17712173695087208,
 0.13952052359530662,
 0.13841505339081991,
 0.10710379779268984,
 0.1116098800217591,
 0.190005544230=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 90,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 7, 143),
 (1, 127, 258),
 (2, 48, 297),
 (3, 176, 166),
 (4, 65, 96),
 (5, 81, 25),
 (6, 119, 88),
 (7, 288, 144)]
=============================================
#                 sensors                   #
=============================================
90 sensors generated.
[(0, 223, 184),
 (1, 97, 196),
 (2, 73, 39),
 (3, 74, 73),
 (4, 68, 280),
 (5, 242, 78),
 (6, 60, 90),
 (7, 172, 211),
 (8, 198, 206),
 (9, 113, 167),
 (10, 243, 9),
 (11, 162, 96),
 (12, 181, 260),
 (13, 143, 55),
 (14, 3, 38),
 (15, 297, 45),
 (16, 282, 215),
 (17, 233, 63),
 (18, 199, 241),
 (19, 78, 269),
 (20, 14, 250),
 (21, 85, 137),
 (22, 110, 231),
 (23, 86, 265),
 (24, 148, 213),
 (25, 137, 234),
 (26, 68, 141),
 (27, 173, 150),
 (28, 28, 184),
 (29, 251, 192),
 (30, 289, 222),
 (31, 156, 218),
 (32, 9, 171),
 (33, 295, 30),
 (34, 191, 178),
 (35, 136, 198),
 (36, 124, 293),
 (37, 99, 227),
 (38, 72, 64),
 (39, 211, 61),
 (40, 123, 134),
 (41, 11, 75),
 (42, 238, 293),
 (43, 141, 116),
 (44, 193, 251),
 (45, 153, 198),
 (46, 200, 30),
 (47, 151, 132),
 (48, 88, 264),
 (49, 20, 137),
 (50, 31, 3),
 (51, 1, 224),
 (52, 59, 174),
 (53, 68, 160),
 (54, 265, 126),
 (55, 102, 7),
 (56, 146, 261),
 (57, 174, 187),
 (58, 295, 267),
 (59, 209, 85),
 (60, 17, 35),
 (61, 193, 161),
 (62, 156, 216),
 (63, 96, 293),
 (64, 152, 284),
 (65, 200, 233),
 (66, 123, 36),
 (67, 204, 4),
 (68, 278, 28),
 (69, 232, 105),
 (70, 79, 34),
 (71, 208, 78),
 (72, 123, 107),
 (73, 273, 168),
 (74, 78, 297),
 (75, 273, 29),
 (76, 181, 126),
 (77, 300, 146),
 (78, 290, 163),
 (79, 166, 229),
 (80, 11, 106),
 (81, 98, 259),
 (82, 233, 129),
 (83, 264, 242),
 (84, 237, 152),
 (85, 136, 53),
 (86, 218, 89),
 (87, 229, 247),
 (88, 227, 190),
 (89, 298, 29)]
=============================================
#                sensor's P                 #
=============================================
90 sensor's P generated.
[0.14385019582023084,
 0.18183241348795898,
 0.18029071100562777,
 0.14332446725817277,
 0.13504075694080273,
 0.13968848291298708,
 0.11072625982255241,
 0.14188799876902469,
 0.15669442815591275,
 0.16010774113091314,
 0.1633098006780801,
 0.11507885895503196,
 0.10741197497498245,
 0.13963387395272217,
 0.13604311207203529,
 0.11703073478633941,
 0.12746283976821929,
 0.18870200473901044,
 0.11131911741445416,
 0.1098402097884431,
 0.1648904494193465,
 0.15970555973865944,
 0.13421789923851454,
 0.19792454317867827,
 0.11939679625077569,
 0.1486598341745925,
 0.16104884211792714,
 0.18105946616443475,
 0.11417311873623094,
 0.1508628129905574,
 0.19778509491987756,
 0.19873895543946135,
 0.17489670676868396,
 0.12069329996467709,
 0.17892125522360591,
 0.17432389376822752,
 0.13471604123258646,
 0.11874685514052002,
 0.19633650127073116,
 0.10910809620848599,
 0.17081491994433601,
 0.17256984413997306,
 0.12066614650469658,
 0.11524875879227912,
 0.19333152721483934,
 0.11508050062714681,
 0.17073347166471264,
 0.15885871663381784,
 0.17733107644364535,
 0.16388064374735145,
 0.19761303945497755,
 0.10262182635347281,
 0.12144038000228406,
 0.17445459587590584,
 0.13542687055173749,
 0.13335800684266888,
 0.17233070214518023,
 0.14045150112237459,
 0.14983467580802334,
 0.1705638196116589,
 0.12725673878617513,
 0.1885073819135632,
 0.10499256300114279,
 0.17393096117752599,
 0.16769752526516085,
 0.18060340955323173,
 0.10105225131683837,
 0.14969255857968425,
 0.11189549672827258,
 0.11895842392428045,
 0.13271960603410701,
 0.16392747369327657,
 0.13855965284393607,
 0.15357001414601182,
 0.16110417360271501,
 0.17374478668733823,=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 90,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 138, 129),
 (1, 272, 10),
 (2, 39, 248),
 (3, 122, 8),
 (4, 187, 251),
 (5, 255, 132),
 (6, 116, 93),
 (7, 17, 79)]
=============================================
#                 sensors                   #
=============================================
90 sensors generated.
[(0, 183, 35),
 (1, 101, 111),
 (2, 16, 197),
 (3, 111, 131),
 (4, 259, 300),
 (5, 162, 274),
 (6, 94, 13),
 (7, 279, 245),
 (8, 88, 45),
 (9, 137, 136),
 (10, 160, 33),
 (11, 193, 240),
 (12, 22, 295),
 (13, 251, 120),
 (14, 86, 172),
 (15, 186, 235),
 (16, 54, 125),
 (17, 187, 169),
 (18, 79, 156),
 (19, 12, 90),
 (20, 174, 36),
 (21, 222, 60),
 (22, 77, 206),
 (23, 180, 250),
 (24, 289, 60),
 (25, 150, 92),
 (26, 63, 137),
 (27, 83, 267),
 (28, 258, 77),
 (29, 294, 271),
 (30, 297, 98),
 (31, 124, 260),
 (32, 69, 273),
 (33, 287, 292),
 (34, 94, 208),
 (35, 252, 21),
 (36, 227, 92),
 (37, 295, 282),
 (38, 90, 265),
 (39, 116, 125),
 (40, 152, 177),
 (41, 161, 112),
 (42, 32, 261),
 (43, 75, 244),
 (44, 156, 69),
 (45, 234, 158),
 (46, 70, 164),
 (47, 66, 77),
 (48, 22, 61),
 (49, 177, 0),
 (50, 124, 287),
 (51, 168, 275),
 (52, 82, 172),
 (53, 279, 144),
 (54, 21, 217),
 (55, 42, 65),
 (56, 63, 212),
 (57, 261, 139),
 (58, 56, 15),
 (59, 36, 107),
 (60, 121, 239),
 (61, 154, 149),
 (62, 80, 270),
 (63, 280, 10),
 (64, 277, 26),
 (65, 210, 285),
 (66, 88, 113),
 (67, 223, 253),
 (68, 156, 247),
 (69, 267, 249),
 (70, 132, 140),
 (71, 252, 131),
 (72, 143, 17),
 (73, 229, 298),
 (74, 94, 134),
 (75, 51, 103),
 (76, 16, 296),
 (77, 156, 54),
 (78, 206, 119),
 (79, 259, 21),
 (80, 77, 235),
 (81, 91, 37),
 (82, 290, 176),
 (83, 208, 220),
 (84, 268, 125),
 (85, 227, 114),
 (86, 173, 9),
 (87, 86, 76),
 (88, 179, 229),
 (89, 226, 39)]
=============================================
#                sensor's P                 #
=============================================
90 sensor's P generated.
[0.16704151106944137,
 0.11556338007393142,
 0.11229130586950048,
 0.1025552973333767,
 0.13794745033459629,
 0.15353171213151823,
 0.16018829810988655,
 0.18090041620643804,
 0.15683113660165574,
 0.15107675512634272,
 0.18955769420467239,
 0.18351011187440774,
 0.16430959794205238,
 0.17255472432224928,
 0.18948680308263208,
 0.13830866664500041,
 0.16555948601262199,
 0.1074029717858741,
 0.13361284891644198,
 0.16771562905964676,
 0.10721105740812965,
 0.16961888559651833,
 0.13588634461607046,
 0.18287279918704677,
 0.12594790037848611,
 0.10738701873262164,
 0.10389683805305003,
 0.17680016392945991,
 0.15609174060124814,
 0.11884475618838182,
 0.19214085263350078,
 0.11672997755652126,
 0.19275388873432134,
 0.15808906640176257,
 0.19423353203742874,
 0.1219945654026499,
 0.12605835449512273,
 0.19387111620341527,
 0.16400512267032177,
 0.19537910382823864,
 0.12227276805191609,
 0.16798162411401904,
 0.12071225135748063,
 0.10915132446625134,
 0.15850579430498943,
 0.17667185662872537,
 0.10740609146886547,
 0.11368261650093235,
 0.11609509098018164,
 0.15034430229534612,
 0.12702309874019241,
 0.13915693000206619,
 0.18476192898982033,
 0.15386172087486566,
 0.11566517600979512,
 0.13681564300617127,
 0.13795982834016854,
 0.16810802438642125,
 0.13999139387259493,
 0.12352257968628179,
 0.11759113121998736,
 0.1797032626640935,
 0.19329131534120172,
 0.11745427263629242,
 0.14329820395924472,
 0.10886330652838222,
 0.13136577611301384,
 0.12867471416827422,
 0.12110462668226052,
 0.1695290451530978,
 0.1134568167314047,
 0.1237598657022666,
 0.10019762388742334,
 0.15426800052200718,
 0.14240099942587042,
 0.10486771596674595=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 90,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 212, 164),
 (1, 18, 9),
 (2, 300, 125),
 (3, 132, 27),
 (4, 126, 76),
 (5, 76, 237),
 (6, 256, 82),
 (7, 63, 75)]
=============================================
#                 sensors                   #
=============================================
90 sensors generated.
[(0, 58, 126),
 (1, 67, 208),
 (2, 229, 257),
 (3, 116, 106),
 (4, 136, 26),
 (5, 70, 167),
 (6, 100, 299),
 (7, 77, 200),
 (8, 205, 295),
 (9, 281, 240),
 (10, 207, 270),
 (11, 35, 35),
 (12, 169, 273),
 (13, 53, 46),
 (14, 128, 198),
 (15, 8, 250),
 (16, 239, 14),
 (17, 15, 221),
 (18, 217, 61),
 (19, 218, 109),
 (20, 175, 141),
 (21, 183, 257),
 (22, 272, 73),
 (23, 123, 253),
 (24, 200, 195),
 (25, 34, 203),
 (26, 21, 271),
 (27, 149, 254),
 (28, 207, 148),
 (29, 149, 117),
 (30, 77, 148),
 (31, 153, 25),
 (32, 151, 35),
 (33, 88, 58),
 (34, 59, 185),
 (35, 25, 283),
 (36, 67, 89),
 (37, 247, 108),
 (38, 137, 169),
 (39, 62, 202),
 (40, 76, 67),
 (41, 67, 69),
 (42, 222, 192),
 (43, 147, 275),
 (44, 192, 114),
 (45, 94, 19),
 (46, 21, 248),
 (47, 244, 120),
 (48, 260, 107),
 (49, 172, 117),
 (50, 285, 15),
 (51, 236, 92),
 (52, 82, 62),
 (53, 22, 188),
 (54, 216, 35),
 (55, 285, 41),
 (56, 135, 284),
 (57, 19, 123),
 (58, 242, 2),
 (59, 183, 300),
 (60, 191, 236),
 (61, 220, 138),
 (62, 237, 211),
 (63, 219, 287),
 (64, 240, 226),
 (65, 87, 185),
 (66, 228, 4),
 (67, 161, 85),
 (68, 202, 291),
 (69, 202, 31),
 (70, 69, 160),
 (71, 139, 271),
 (72, 75, 69),
 (73, 206, 278),
 (74, 7, 203),
 (75, 169, 47),
 (76, 247, 160),
 (77, 223, 249),
 (78, 130, 173),
 (79, 35, 209),
 (80, 170, 21),
 (81, 238, 61),
 (82, 115, 183),
 (83, 71, 277),
 (84, 20, 114),
 (85, 189, 54),
 (86, 27, 207),
 (87, 182, 268),
 (88, 254, 110),
 (89, 116, 92)]
=============================================
#                sensor's P                 #
=============================================
90 sensor's P generated.
[0.11154718907141695,
 0.17667677753793792,
 0.1796776481513209,
 0.16968147112158952,
 0.13135802175085334,
 0.14526026073038065,
 0.11805321084506837,
 0.10159516467304153,
 0.15505587602649518,
 0.10559457917663384,
 0.15483453635459887,
 0.13685607136282027,
 0.10186984369563555,
 0.12221327515493959,
 0.17471522631434813,
 0.11239720240167504,
 0.19845777692356237,
 0.1188598210127855,
 0.16527366938221461,
 0.10342985765201158,
 0.11997242782217966,
 0.1937030033636519,
 0.17240857361799794,
 0.16469139263065663,
 0.19215894810831155,
 0.16003008298509114,
 0.13540872872633594,
 0.1114298742196245,
 0.19794097758932605,
 0.18329254552147556,
 0.13635039591870982,
 0.13870875587836271,
 0.15032494995572432,
 0.11605695343030077,
 0.12467232515423728,
 0.13599702300050748,
 0.1379710215458598,
 0.14159663801582312,
 0.14210239817994388,
 0.19106299523023507,
 0.15580718471236479,
 0.1038652925874031,
 0.18334495100969408,
 0.16151857884438681,
 0.14772845921638922,
 0.1150443550414227,
 0.16736043721687061,
 0.17023736374264548,
 0.13900469002154742,
 0.15324652132646149,
 0.15653916434779766,
 0.15553195665792882,
 0.1623188444894248,
 0.16945136461419646,
 0.16745284133485056,
 0.11931970140439228,
 0.10202513441453026,
 0.12545724350402054,
 0.17099556872738886,
 0.10325328095456089,
 0.18534574247252766,
 0.18486334291729167,
 0.15381030692008915,
 0.16525566588828455,
 0.11563368422133513,
 0.11143834665672447,
 0.11291783125036081,
 0.16264157698433254,
 0.1571086934552311,
 0.11489613744700178,
 0.17742476529734297,
 0.14766077189084073,
 0.17479364780845813,
 0.16041532350694795,
 0.16633413851624101,
 0.16703049814224807,
 0=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 90,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 196, 243),
 (1, 69, 105),
 (2, 27, 269),
 (3, 230, 204),
 (4, 49, 229),
 (5, 275, 76),
 (6, 114, 255),
 (7, 232, 140)]
=============================================
#                 sensors                   #
=============================================
90 sensors generated.
[(0, 288, 163),
 (1, 264, 6),
 (2, 133, 30),
 (3, 46, 91),
 (4, 177, 286),
 (5, 177, 267),
 (6, 23, 246),
 (7, 109, 222),
 (8, 123, 184),
 (9, 214, 227),
 (10, 46, 36),
 (11, 178, 74),
 (12, 254, 181),
 (13, 69, 164),
 (14, 148, 54),
 (15, 298, 201),
 (16, 92, 73),
 (17, 128, 141),
 (18, 123, 14),
 (19, 229, 74),
 (20, 233, 58),
 (21, 207, 220),
 (22, 217, 3),
 (23, 95, 57),
 (24, 253, 165),
 (25, 56, 193),
 (26, 258, 140),
 (27, 107, 242),
 (28, 122, 101),
 (29, 28, 242),
 (30, 93, 294),
 (31, 136, 27),
 (32, 84, 193),
 (33, 180, 210),
 (34, 96, 7),
 (35, 279, 69),
 (36, 298, 54),
 (37, 111, 291),
 (38, 277, 170),
 (39, 157, 17),
 (40, 82, 119),
 (41, 297, 253),
 (42, 276, 147),
 (43, 83, 4),
 (44, 109, 236),
 (45, 295, 144),
 (46, 64, 128),
 (47, 101, 30),
 (48, 264, 173),
 (49, 189, 16),
 (50, 279, 106),
 (51, 238, 1),
 (52, 66, 275),
 (53, 135, 172),
 (54, 121, 216),
 (55, 235, 72),
 (56, 129, 107),
 (57, 154, 254),
 (58, 21, 250),
 (59, 249, 51),
 (60, 34, 201),
 (61, 94, 137),
 (62, 116, 4),
 (63, 280, 14),
 (64, 230, 237),
 (65, 281, 42),
 (66, 17, 89),
 (67, 229, 31),
 (68, 265, 247),
 (69, 243, 99),
 (70, 273, 133),
 (71, 6, 108),
 (72, 209, 288),
 (73, 246, 253),
 (74, 167, 300),
 (75, 7, 152),
 (76, 51, 64),
 (77, 172, 199),
 (78, 104, 259),
 (79, 185, 224),
 (80, 2, 2),
 (81, 249, 34),
 (82, 290, 271),
 (83, 52, 199),
 (84, 127, 17),
 (85, 269, 113),
 (86, 215, 105),
 (87, 247, 211),
 (88, 145, 100),
 (89, 102, 73)]
=============================================
#                sensor's P                 #
=============================================
90 sensor's P generated.
[0.17104280908142266,
 0.14112177150334596,
 0.17695841848873486,
 0.17551546084467076,
 0.13266474635238001,
 0.1699333006922813,
 0.16195027056613143,
 0.17417755263082069,
 0.13437229228370565,
 0.18178575288309745,
 0.16681333482429456,
 0.1052567016631725,
 0.19063587038516083,
 0.1308836203978368,
 0.18914343827754743,
 0.18263775862042492,
 0.10553350213367763,
 0.13760750229479485,
 0.13894384795989823,
 0.17214657293160801,
 0.15369493814398288,
 0.14633319186816515,
 0.18351390557528188,
 0.14815780260310454,
 0.18084149147372702,
 0.14189364937580284,
 0.14361492511723944,
 0.10033409471728588,
 0.15520585933832859,
 0.16202351334260659,
 0.11888547107009401,
 0.17942873033549259,
 0.16629333066510971,
 0.11182070804762964,
 0.11811895650977251,
 0.18666594292983618,
 0.15829938296273835,
 0.19276184978779345,
 0.12106752162655479,
 0.11531888638163006,
 0.15673176527573507,
 0.15288337758352555,
 0.13007737964472904,
 0.15710133451640398,
 0.12427128421535144,
 0.12647335730768508,
 0.19040871004788359,
 0.15802012654939529,
 0.18885832568053562,
 0.19742956145128421,
 0.11095675327951859,
 0.14499114358656787,
 0.178395080213754,
 0.16095350980185583,
 0.12388641213037715,
 0.17737272813216409,
 0.10076974873359422,
 0.15435162312824599,
 0.12523854859476102,
 0.12541155421237715,
 0.19109620590219389,
 0.1429711481957413,
 0.13745309662250355,
 0.15337315041361094,
 0.15535741261769384,
 0.11663651867262959,
 0.17243820338047691,
 0.11102451265442692,
 0.15822705664171169,
 0.15653095799416489,
 0.18743165305776488,
 0.13568986795253246,
 0.13653787780882545,
 0.1091506660479422,
 0.17626388381882965,
 0.11855627690420895,
=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 90,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 19, 149),
 (1, 232, 34),
 (2, 238, 88),
 (3, 232, 113),
 (4, 160, 54),
 (5, 280, 194),
 (6, 108, 279),
 (7, 154, 217)]
=============================================
#                 sensors                   #
=============================================
90 sensors generated.
[(0, 171, 107),
 (1, 145, 189),
 (2, 255, 289),
 (3, 201, 297),
 (4, 162, 100),
 (5, 288, 192),
 (6, 54, 228),
 (7, 242, 185),
 (8, 251, 57),
 (9, 29, 184),
 (10, 279, 278),
 (11, 290, 176),
 (12, 65, 75),
 (13, 267, 158),
 (14, 16, 109),
 (15, 182, 229),
 (16, 209, 86),
 (17, 6, 254),
 (18, 179, 244),
 (19, 136, 203),
 (20, 154, 63),
 (21, 139, 294),
 (22, 63, 76),
 (23, 49, 18),
 (24, 176, 247),
 (25, 120, 124),
 (26, 9, 50),
 (27, 202, 58),
 (28, 207, 99),
 (29, 51, 124),
 (30, 62, 215),
 (31, 170, 258),
 (32, 208, 107),
 (33, 255, 248),
 (34, 254, 75),
 (35, 98, 282),
 (36, 89, 117),
 (37, 114, 198),
 (38, 113, 31),
 (39, 115, 117),
 (40, 189, 245),
 (41, 112, 251),
 (42, 179, 37),
 (43, 58, 17),
 (44, 108, 221),
 (45, 16, 48),
 (46, 186, 147),
 (47, 153, 241),
 (48, 273, 228),
 (49, 283, 245),
 (50, 154, 200),
 (51, 141, 217),
 (52, 272, 225),
 (53, 1, 77),
 (54, 288, 95),
 (55, 238, 94),
 (56, 129, 217),
 (57, 94, 299),
 (58, 260, 275),
 (59, 124, 217),
 (60, 275, 181),
 (61, 181, 156),
 (62, 56, 173),
 (63, 47, 272),
 (64, 184, 269),
 (65, 168, 251),
 (66, 56, 195),
 (67, 237, 150),
 (68, 86, 176),
 (69, 27, 179),
 (70, 222, 205),
 (71, 169, 292),
 (72, 70, 134),
 (73, 235, 282),
 (74, 201, 286),
 (75, 261, 81),
 (76, 80, 175),
 (77, 115, 48),
 (78, 179, 188),
 (79, 110, 39),
 (80, 73, 43),
 (81, 243, 19),
 (82, 169, 125),
 (83, 43, 132),
 (84, 26, 53),
 (85, 19, 158),
 (86, 46, 138),
 (87, 29, 67),
 (88, 201, 140),
 (89, 117, 297)]
=============================================
#                sensor's P                 #
=============================================
90 sensor's P generated.
[0.19943422834719368,
 0.14496517829231215,
 0.15030996894003798,
 0.18131271089002307,
 0.194330247711959,
 0.14387937041304977,
 0.11290291566673682,
 0.11156370362116153,
 0.19182104234988515,
 0.11698118392186718,
 0.13242451575610958,
 0.12003549915962596,
 0.1348359296728836,
 0.17257264675769696,
 0.13031664644146623,
 0.14367748042181888,
 0.12679878268818148,
 0.12631827054014041,
 0.11176440987051522,
 0.14179178802362696,
 0.13540440168088128,
 0.12674277346882609,
 0.18433510654833696,
 0.17250426142654146,
 0.15655405100015496,
 0.17348208244307156,
 0.14226517886734338,
 0.17780938597480833,
 0.12381691524696262,
 0.16002019416272717,
 0.12706196631640021,
 0.16578190056119166,
 0.19936986669173054,
 0.13123164976886104,
 0.14972535131016892,
 0.1105454099653707,
 0.16264918857182042,
 0.17811340181884133,
 0.15132627142434418,
 0.17918259246435414,
 0.13602186004799952,
 0.14286025746472236,
 0.1853976003162916,
 0.17828665461887955,
 0.11743207095809238,
 0.18964426807100138,
 0.13191476872689115,
 0.19313791405824846,
 0.12626984340976324,
 0.1532522793725937,
 0.17642118153467876,
 0.13109053579301827,
 0.13339448695472658,
 0.13750123479229079,
 0.17137869210413476,
 0.13426276240788512,
 0.10487559087513679,
 0.14080923742133597,
 0.13156250092827454,
 0.14375299223099539,
 0.1867532195824356,
 0.19549078269871509,
 0.10091583859379177,
 0.12530262246596882,
 0.14860737449549444,
 0.13797710998848947,
 0.10627174771411457,
 0.13316410941669801,
 0.1368283371769472,
 0.15346941360889785,
 0.17539205617374271,
 0.19006483983486416,
 0.14802882290902664,
 0.18267539204750338,
 0.1926836320723202,
 0.156421412=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 90,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 13, 74),
 (1, 4, 261),
 (2, 156, 50),
 (3, 199, 253),
 (4, 167, 36),
 (5, 156, 88),
 (6, 133, 197),
 (7, 36, 258)]
=============================================
#                 sensors                   #
=============================================
90 sensors generated.
[(0, 99, 299),
 (1, 219, 33),
 (2, 225, 49),
 (3, 265, 149),
 (4, 166, 27),
 (5, 160, 197),
 (6, 214, 172),
 (7, 229, 145),
 (8, 21, 222),
 (9, 208, 211),
 (10, 191, 297),
 (11, 297, 50),
 (12, 119, 230),
 (13, 278, 188),
 (14, 35, 176),
 (15, 103, 2),
 (16, 45, 100),
 (17, 107, 259),
 (18, 62, 273),
 (19, 199, 22),
 (20, 283, 293),
 (21, 129, 92),
 (22, 295, 208),
 (23, 121, 247),
 (24, 185, 85),
 (25, 2, 135),
 (26, 117, 242),
 (27, 172, 192),
 (28, 250, 183),
 (29, 292, 78),
 (30, 266, 29),
 (31, 210, 75),
 (32, 232, 18),
 (33, 166, 66),
 (34, 231, 168),
 (35, 57, 98),
 (36, 139, 291),
 (37, 19, 75),
 (38, 137, 71),
 (39, 115, 96),
 (40, 41, 98),
 (41, 300, 60),
 (42, 69, 125),
 (43, 139, 173),
 (44, 206, 68),
 (45, 234, 8),
 (46, 19, 219),
 (47, 6, 110),
 (48, 227, 128),
 (49, 173, 171),
 (50, 149, 72),
 (51, 25, 259),
 (52, 219, 136),
 (53, 79, 142),
 (54, 290, 114),
 (55, 272, 123),
 (56, 235, 259),
 (57, 44, 243),
 (58, 57, 207),
 (59, 213, 255),
 (60, 179, 222),
 (61, 85, 14),
 (62, 294, 123),
 (63, 169, 106),
 (64, 18, 17),
 (65, 72, 189),
 (66, 216, 7),
 (67, 167, 192),
 (68, 55, 224),
 (69, 278, 194),
 (70, 2, 100),
 (71, 78, 106),
 (72, 43, 29),
 (73, 239, 225),
 (74, 212, 152),
 (75, 176, 144),
 (76, 71, 89),
 (77, 282, 268),
 (78, 49, 240),
 (79, 146, 80),
 (80, 259, 201),
 (81, 129, 139),
 (82, 188, 196),
 (83, 249, 212),
 (84, 80, 145),
 (85, 194, 4),
 (86, 153, 181),
 (87, 143, 76),
 (88, 204, 168),
 (89, 299, 134)]
=============================================
#                sensor's P                 #
=============================================
90 sensor's P generated.
[0.1390988239725589,
 0.1923509363806758,
 0.1508867862671712,
 0.16359225213149955,
 0.19467639538518658,
 0.19163583092421765,
 0.16769388863928497,
 0.17325586322811937,
 0.1835645668175071,
 0.18870508182531284,
 0.16297946463698515,
 0.10796727594085631,
 0.1171881119321411,
 0.17521492604592076,
 0.16820146853485168,
 0.11867546571806799,
 0.13919365791216515,
 0.15355758020932281,
 0.13812313550863126,
 0.11656460911213908,
 0.18269001412756272,
 0.18434940617960169,
 0.17590234024640666,
 0.10796903679609003,
 0.17471428878625839,
 0.13919689814046851,
 0.10271219496210501,
 0.18853618613305323,
 0.10417594685977442,
 0.1658495953519441,
 0.13644021949252491,
 0.12612695232207763,
 0.10678476981129582,
 0.16237052209075231,
 0.12263260821994004,
 0.1911824854691295,
 0.19943807870562277,
 0.18099406256323733,
 0.19655257340396726,
 0.16724539806143235,
 0.1965837308488817,
 0.12207248030214295,
 0.17340353396907748,
 0.17226680111595882,
 0.14399377167835362,
 0.1233281748953044,
 0.15628247397733419,
 0.18768506049565939,
 0.17671009158701267,
 0.17751613645783126,
 0.19929913128938981,
 0.11370498291789567,
 0.17124551928390358,
 0.10759417856655731,
 0.14113018708997371,
 0.18519361297750775,
 0.15814526641592769,
 0.12171041122007456,
 0.13072665363228594,
 0.18014723254085419,
 0.1811785089126863,
 0.15610727467533214,
 0.14509064926267062,
 0.13481125802446453,
 0.1621664329573449,
 0.19286027666997169,
 0.12340582357855399,
 0.13317859538907012,
 0.10513136031672456,
 0.15157684198406254,
 0.10860927812839904,
 0.12374104615227158,
 0.13929428911896199,
 0.16728709757337401,
 0.11027040833197077,
 0.10697361900020556,
 0.=============================================
#                  args                     #
=============================================
{'B': 800,
 'M': 90,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
=============================================
#            candidate chargers             #
=============================================
8 chargers generated:
[(0, 65, 199),
 (1, 248, 161),
 (2, 184, 202),
 (3, 155, 7),
 (4, 174, 108),
 (5, 131, 40),
 (6, 110, 250),
 (7, 35, 266)]
=============================================
#                 sensors                   #
=============================================
90 sensors generated.
[(0, 214, 214),
 (1, 298, 212),
 (2, 14, 163),
 (3, 261, 197),
 (4, 42, 208),
 (5, 12, 184),
 (6, 35, 39),
 (7, 26, 147),
 (8, 37, 162),
 (9, 10, 59),
 (10, 240, 225),
 (11, 256, 87),
 (12, 229, 107),
 (13, 163, 8),
 (14, 79, 236),
 (15, 192, 200),
 (16, 258, 36),
 (17, 42, 39),
 (18, 292, 188),
 (19, 256, 197),
 (20, 240, 38),
 (21, 168, 217),
 (22, 140, 225),
 (23, 3, 17),
 (24, 17, 266),
 (25, 25, 54),
 (26, 293, 183),
 (27, 20, 48),
 (28, 160, 99),
 (29, 79, 59),
 (30, 2, 153),
 (31, 107, 74),
 (32, 192, 293),
 (33, 255, 231),
 (34, 295, 286),
 (35, 102, 120),
 (36, 292, 35),
 (37, 239, 246),
 (38, 29, 117),
 (39, 288, 113),
 (40, 7, 99),
 (41, 95, 174),
 (42, 220, 9),
 (43, 157, 152),
 (44, 282, 213),
 (45, 81, 249),
 (46, 87, 125),
 (47, 220, 98),
 (48, 104, 97),
 (49, 245, 146),
 (50, 201, 191),
 (51, 275, 164),
 (52, 100, 117),
 (53, 203, 277),
 (54, 84, 227),
 (55, 277, 184),
 (56, 40, 205),
 (57, 15, 136),
 (58, 290, 166),
 (59, 170, 100),
 (60, 125, 33),
 (61, 170, 297),
 (62, 94, 179),
 (63, 77, 194),
 (64, 229, 263),
 (65, 194, 160),
 (66, 143, 104),
 (67, 75, 289),
 (68, 88, 100),
 (69, 240, 243),
 (70, 217, 190),
 (71, 177, 110),
 (72, 151, 45),
 (73, 169, 73),
 (74, 58, 163),
 (75, 225, 73),
 (76, 274, 298),
 (77, 26, 53),
 (78, 18, 104),
 (79, 170, 219),
 (80, 86, 85),
 (81, 162, 298),
 (82, 7, 113),
 (83, 85, 4),
 (84, 39, 87),
 (85, 196, 220),
 (86, 5, 166),
 (87, 128, 85),
 (88, 286, 164),
 (89, 236, 68)]
=============================================
#                sensor's P                 #
=============================================
90 sensor's P generated.
[0.13260450660410888,
 0.13006797391292324,
 0.18734334404807743,
 0.1761996893174097,
 0.18061362129667763,
 0.14014725462815283,
 0.13039993063033475,
 0.18892810823430126,
 0.15662148010510737,
 0.16841084831981978,
 0.18394399003253012,
 0.12801195113975383,
 0.18087987373471887,
 0.10008090630201391,
 0.15312617650266816,
 0.18867334207513525,
 0.10923392909013738,
 0.15079245471566025,
 0.10793252852157129,
 0.19646759333436406,
 0.15203793924177944,
 0.14299784566626664,
 0.13027056630459208,
 0.11355747532639168,
 0.12849044704809082,
 0.14104892475980785,
 0.1858745482881394,
 0.11151221013904349,
 0.17769505409301423,
 0.11489420360980432,
 0.10547035067307739,
 0.19330156256534498,
 0.17792743637105968,
 0.10946033328621435,
 0.13743223231123219,
 0.15592864137617019,
 0.16069767035385921,
 0.12203942810628593,
 0.15049435297997332,
 0.16063198436282708,
 0.15136200163112348,
 0.13223583417844589,
 0.17034834175070579,
 0.1198936690299976,
 0.10384962707748477,
 0.16530920807726951,
 0.10283177725857844,
 0.19023348807490914,
 0.19114855253054602,
 0.1563276496642528,
 0.12736834120735147,
 0.10222359905407075,
 0.15472356308262733,
 0.17585260946514633,
 0.18979466460066516,
 0.10932286073775921,
 0.19749673194469836,
 0.11548404019382671,
 0.15251850811862999,
 0.18546978405897932,
 0.17561575399354346,
 0.19213316183737833,
 0.10756650495946507,
 0.15959964963579151,
 0.11590262608249705,
 0.10009447290330185,
 0.1637529617573345,
 0.15692909915342212,
 0.1462148230720671,
 0.11890965304792414,
 0.16915304375186746,
 0.18137655109843706,
 0.12688736179090654,
 0.17884505362795242,
 0.10081642989827144,
 0.16340849581324929,
 0. 0.17792007683969741,
 0.13546386670266441,
 0.19924931297877305,
 0.12326134678687063,
 0.16220430929382462,
 0.16231451298035013,
 0.11480117212260309,
 0.19053885959893313,
 0.12569823210573139,
 0.13530356795148199,
 0.18742676501299307,
 0.10269750163043699,
 0.16521043221616724,
 0.15801386632894485]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.7446447141885086,
 [(5, 275, 76), (6, 114, 255), (3, 230, 204), (1, 69, 105)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.7446447141885086,
 [(5, 275, 76), (6, 114, 255), (3, 230, 204), (1, 69, 105)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.7446447141885086,
 [(5, 275, 76), (6, 114, 255), (3, 230, 204), (1, 69, 105)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.7446447141885086,
 {(1, 69, 105): 4, (3, 230, 204): 4, (5, 275, 76): 4, (6, 114, 255): 4},
 [(5, 275, 76), (6, 114, 255), (3, 230, 204), (1, 69, 105)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.7267109786824939,
 {(3, 230, 204): 4, (5, 275, 76): 4, (6, 114, 255): 4},
 [(5, 275, 76), (6, 114, 255), (5, 275, 76), (3, 230, 204), (6, 114, 255)],
 [4, 4, 3, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.7446447141885086,
 [(3, 230, 204), (6, 114, 255), (5, 275, 76), (1, 69, 105)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[2, 2, 0, 2, 1, 3, 3, 3]
=============================================
#               solution Ran                #
=============================================
(1.2432499843211782,
 [(0, 196, 243),
  (1, 69, 105),
  (3, 230, 204),
  (4, 49, 229),
  (5, 275, 76),
  (6, 114, 255),
  (7, 232, 140)],
 [2, 2, 2, 1, 3, 3, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.7446447141885086,
 [(1, 69, 105), (3, 230, 204), (5, 275, 76), (6, 114, 255)],
 [4, 4, 4, 4])
,
 0.14962204512710009,
 0.17533393595851093,
 0.10623419332003131,
 0.14639791381601855,
 0.19882519589371983,
 0.13820323930063141,
 0.15828376842990752,
 0.18345611001128703,
 0.17332432622728261,
 0.16188022449438724,
 0.12140906104454147,
 0.14554666474911732,
 0.15480154997902965,
 0.18607482556677671]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(2.1750398062194636,
 [(0, 138, 129), (5, 255, 132), (4, 187, 251), (6, 116, 93)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(2.1750398062194636,
 [(0, 138, 129), (5, 255, 132), (4, 187, 251), (6, 116, 93)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(2.1750398062194636,
 [(0, 138, 129), (5, 255, 132), (4, 187, 251), (6, 116, 93)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(2.1750398062194636,
 {(0, 138, 129): 4, (4, 187, 251): 4, (5, 255, 132): 4, (6, 116, 93): 4},
 [(0, 138, 129), (5, 255, 132), (4, 187, 251), (6, 116, 93)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(2.1544353401406968,
 {(0, 138, 129): 4, (4, 187, 251): 4, (5, 255, 132): 4},
 [(0, 138, 129), (5, 255, 132), (4, 187, 251), (5, 255, 132), (5, 255, 132)],
 [4, 4, 4, 3, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(2.1750398062194636,
 [(6, 116, 93), (0, 138, 129), (4, 187, 251), (5, 255, 132)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 0, 0, 2, 4, 3, 4, 3]
=============================================
#               solution Ran                #
=============================================
(1.6957314614502399,
 [(3, 122, 8), (4, 187, 251), (5, 255, 132), (6, 116, 93), (7, 17, 79)],
 [2, 4, 3, 4, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(2.1750398062194636,
 [(0, 138, 129), (4, 187, 251), (5, 255, 132), (6, 116, 93)],
 [4, 4, 4, 4])
948735100069,
 0.18478528696910923,
 0.11376922545343743,
 0.19132758252848334,
 0.17952185352565306,
 0.17858111973936722,
 0.11507702394106585,
 0.16334972348011365,
 0.1706437312121355,
 0.19678605119237885,
 0.13879423340092098,
 0.19206084223285042,
 0.12460214025840316,
 0.15094647361205732]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.6822687284046582,
 [(1, 225, 85), (7, 133, 140), (6, 243, 68), (3, 64, 231)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.6822687284046582,
 [(1, 225, 85), (7, 133, 140), (6, 243, 68), (3, 64, 231)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.6822687284046582,
 [(1, 225, 85), (7, 133, 140), (6, 243, 68), (3, 64, 231)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.6822687284046582,
 {(1, 225, 85): 4, (3, 64, 231): 4, (6, 243, 68): 4, (7, 133, 140): 4},
 [(1, 225, 85), (7, 133, 140), (6, 243, 68), (3, 64, 231)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.6735321416511129,
 {(1, 225, 85): 4, (2, 298, 108): 1, (6, 243, 68): 4, (7, 133, 140): 4},
 [(1, 225, 85), (1, 225, 85), (7, 133, 140), (6, 243, 68), (2, 298, 108)],
 [4, 3, 4, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.6822687284046582,
 [(3, 64, 231), (6, 243, 68), (1, 225, 85), (7, 133, 140)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[4, 0, 0, 1, 4, 2, 1, 4]
=============================================
#               solution Ran                #
=============================================
(1.0633148471488036,
 [(0, 200, 221),
  (3, 64, 231),
  (4, 3, 252),
  (5, 107, 277),
  (6, 243, 68),
  (7, 133, 140)],
 [4, 1, 4, 2, 1, 4])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.6822687284046582,
 [(1, 225, 85), (3, 64, 231), (6, 243, 68), (7, 133, 140)],
 [4, 4, 4, 4])
87039271,
 0.16577660714174675,
 0.19362931886625995,
 0.11103406983500889,
 0.19076779335877714,
 0.15763509396479303,
 0.18043281728320568,
 0.15503974651473543,
 0.1170273034890047,
 0.15146652177351297,
 0.17646101947649298,
 0.17470224942455498,
 0.11233812994701592,
 0.1780583022974721,
 0.15726371524075963]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 3, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(2.0225329671456058,
 [(7, 154, 217), (2, 238, 88), (6, 108, 279), (3, 232, 113)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(2.0225329671456058,
 [(7, 154, 217), (2, 238, 88), (6, 108, 279), (3, 232, 113)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(2.0225329671456058,
 [(7, 154, 217), (2, 238, 88), (6, 108, 279), (3, 232, 113)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(2.1294994687429787,
 {(2, 238, 88): 4, (6, 108, 279): 4, (7, 154, 217): 4},
 [(7, 154, 217), (2, 238, 88), (7, 154, 217), (6, 108, 279), (7, 154, 217)],
 [4, 4, 3, 4, 1])
=============================================
#           result of greedy part           #
=============================================
(2.1956476634022013,
 {(2, 238, 88): 4, (7, 154, 217): 4},
 [(7, 154, 217), (7, 154, 217), (7, 154, 217), (2, 238, 88), (2, 238, 88)],
 [4, 3, 2, 4, 3])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.9897800765647056,
 [(6, 108, 279), (7, 154, 217), (2, 238, 88), (5, 280, 194)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[3, 0, 1, 4, 1, 2, 3, 2]
=============================================
#               solution Ran                #
=============================================
(1.4739312656934813,
 [(0, 19, 149),
  (2, 238, 88),
  (3, 232, 113),
  (4, 160, 54),
  (5, 280, 194),
  (6, 108, 279),
  (7, 154, 217)],
 [3, 1, 4, 1, 2, 3, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(2.0225329671456058,
 [(2, 238, 88), (3, 232, 113), (6, 108, 279), (7, 154, 217)],
 [4, 4, 4, 4])
17745506883227885,
 0.14349695618770475,
 0.10095522500183764,
 0.18436611663395708,
 0.19109729348199719,
 0.15421014916034009,
 0.13197242106959892,
 0.10390637817256347,
 0.14335976741692713,
 0.18353670661830315,
 0.13687398494503283,
 0.19736981206365029,
 0.18775828094278793,
 0.12827989091385164]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.979451801326211,
 [(4, 174, 108), (2, 184, 202), (1, 248, 161), (0, 65, 199)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.979451801326211,
 [(4, 174, 108), (2, 184, 202), (1, 248, 161), (0, 65, 199)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.979451801326211,
 [(4, 174, 108), (2, 184, 202), (1, 248, 161), (0, 65, 199)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.979451801326211,
 {(0, 65, 199): 4, (1, 248, 161): 4, (2, 184, 202): 4, (4, 174, 108): 4},
 [(4, 174, 108), (2, 184, 202), (1, 248, 161), (0, 65, 199)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.979451801326211,
 {(0, 65, 199): 4, (1, 248, 161): 4, (2, 184, 202): 4, (4, 174, 108): 4},
 [(4, 174, 108), (2, 184, 202), (1, 248, 161), (0, 65, 199)],
 [4, 4, 4, 4])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.979451801326211,
 [(0, 65, 199), (2, 184, 202), (4, 174, 108), (1, 248, 161)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[2, 3, 1, 1, 2, 3, 0, 4]
=============================================
#               solution Ran                #
=============================================
(1.1428290740915341,
 [(0, 65, 199),
  (1, 248, 161),
  (2, 184, 202),
  (3, 155, 7),
  (4, 174, 108),
  (5, 131, 40),
  (7, 35, 266)],
 [2, 3, 1, 1, 2, 3, 4])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.979451801326211,
 [(0, 65, 199), (1, 248, 161), (2, 184, 202), (4, 174, 108)],
 [4, 4, 4, 4])
27086,
 0.13394244001308908,
 0.15356135147847633,
 0.19431334343511208,
 0.10638359858496353,
 0.14177236045512165,
 0.12434839612287435,
 0.1431069766297674,
 0.14543394530413986,
 0.15832628030194612,
 0.18428051777435661,
 0.12361371050613684,
 0.16502597378933948,
 0.16269645961628071]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(2.0788672527638483,
 [(5, 96, 68), (7, 127, 222), (3, 128, 37), (1, 91, 139)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(2.0788672527638483,
 [(5, 96, 68), (7, 127, 222), (3, 128, 37), (1, 91, 139)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(2.0788672527638483,
 [(5, 96, 68), (7, 127, 222), (3, 128, 37), (1, 91, 139)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(2.0788672527638483,
 {(1, 91, 139): 4, (3, 128, 37): 4, (5, 96, 68): 4, (7, 127, 222): 4},
 [(5, 96, 68), (7, 127, 222), (3, 128, 37), (1, 91, 139)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(2.0608639186874043,
 {(3, 128, 37): 4, (5, 96, 68): 4, (7, 127, 222): 4},
 [(5, 96, 68), (7, 127, 222), (5, 96, 68), (3, 128, 37), (5, 96, 68)],
 [4, 4, 3, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(2.0788672527638483,
 [(5, 96, 68), (7, 127, 222), (3, 128, 37), (1, 91, 139)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 0, 1, 1, 2, 3, 4, 2]
=============================================
#               solution Ran                #
=============================================
(0.92056455991445596,
 [(2, 49, 72),
  (3, 128, 37),
  (4, 290, 84),
  (5, 96, 68),
  (6, 255, 238),
  (7, 127, 222)],
 [1, 1, 2, 3, 4, 2])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(2.0788672527638483,
 [(1, 91, 139), (3, 128, 37), (5, 96, 68), (7, 127, 222)],
 [4, 4, 4, 4])
17271283369160434,
 0.1537998657285069,
 0.15131748666516096,
 0.18137530496505838,
 0.10855148432343879,
 0.13877919164571625,
 0.1685826236739838,
 0.15765467783688597,
 0.11345380547456996,
 0.10131744928775929,
 0.18790921588376083,
 0.18798838013253277,
 0.15772523418603396,
 0.14386679010749365]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.8991254302529272,
 [(5, 156, 88), (2, 156, 50), (4, 167, 36), (6, 133, 197)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.8991254302529272,
 [(5, 156, 88), (2, 156, 50), (4, 167, 36), (6, 133, 197)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.8991254302529272,
 [(5, 156, 88), (2, 156, 50), (4, 167, 36), (6, 133, 197)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.8991254302529272,
 {(2, 156, 50): 4, (4, 167, 36): 4, (5, 156, 88): 4, (6, 133, 197): 4},
 [(5, 156, 88), (2, 156, 50), (4, 167, 36), (6, 133, 197)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.9179303770896079,
 {(2, 156, 50): 4, (4, 167, 36): 4, (5, 156, 88): 4},
 [(5, 156, 88), (5, 156, 88), (2, 156, 50), (4, 167, 36), (5, 156, 88)],
 [4, 3, 4, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.8325199813672033,
 [(5, 156, 88), (7, 36, 258), (4, 167, 36), (2, 156, 50)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[0, 4, 0, 1, 1, 3, 4, 3]
=============================================
#               solution Ran                #
=============================================
(1.2624123074160509,
 [(1, 4, 261),
  (3, 199, 253),
  (4, 167, 36),
  (5, 156, 88),
  (6, 133, 197),
  (7, 36, 258)],
 [4, 1, 1, 3, 4, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.899125430252927,
 [(2, 156, 50), (4, 167, 36), (5, 156, 88), (6, 133, 197)],
 [4, 4, 4, 4])

 0.15755835567983859,
 0.1504303251795594,
 0.19294377628855774,
 0.10583248640689018,
 0.17939319143542057,
 0.19123435415916892,
 0.12765935569221268,
 0.1125784444331691,
 0.15634909364030969,
 0.13254850503999241,
 0.18177482863420397,
 0.16710368615176943,
 0.12063816535200267,
 0.14855443633893203]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.928466409232273,
 [(3, 176, 166), (1, 127, 258), (4, 65, 96), (6, 119, 88)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.928466409232273,
 [(3, 176, 166), (1, 127, 258), (4, 65, 96), (6, 119, 88)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.928466409232273,
 [(3, 176, 166), (1, 127, 258), (4, 65, 96), (6, 119, 88)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(2.1698717835815713,
 {(1, 127, 258): 4, (3, 176, 166): 4},
 [(3, 176, 166), (1, 127, 258), (3, 176, 166), (1, 127, 258), (1, 127, 258)],
 [4, 4, 3, 3, 2])
=============================================
#           result of greedy part           #
=============================================
(2.1698717835815713,
 {(1, 127, 258): 4, (3, 176, 166): 4},
 [(3, 176, 166), (1, 127, 258), (3, 176, 166), (1, 127, 258), (1, 127, 258)],
 [4, 4, 3, 3, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.8940032069525923,
 [(1, 127, 258), (3, 176, 166), (4, 65, 96), (5, 81, 25)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[4, 0, 0, 4, 4, 1, 3, 0]
=============================================
#               solution Ran                #
=============================================
(1.512291609412451,
 [(0, 7, 143), (3, 176, 166), (4, 65, 96), (5, 81, 25), (6, 119, 88)],
 [4, 4, 4, 1, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.928466409232273,
 [(1, 127, 258), (3, 176, 166), (4, 65, 96), (6, 119, 88)],
 [4, 4, 4, 4])
0.1209510679380785,
 0.12266783462409854,
 0.1744995574550901,
 0.11224178383619757,
 0.11504696228488748,
 0.13656805986951445,
 0.19789873220436996,
 0.19662744185546913,
 0.12817049827595794,
 0.13519040414151665,
 0.17642322054512258,
 0.19397326330028511,
 0.1261146266567216,
 0.1954077684984723]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(2.1436205348770216,
 [(5, 69, 187), (4, 172, 222), (6, 162, 81), (7, 288, 235)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(2.1436205348770216,
 [(5, 69, 187), (4, 172, 222), (6, 162, 81), (7, 288, 235)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(2.1436205348770216,
 [(5, 69, 187), (4, 172, 222), (6, 162, 81), (7, 288, 235)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(2.1436205348770216,
 {(4, 172, 222): 4, (5, 69, 187): 4, (6, 162, 81): 4, (7, 288, 235): 4},
 [(5, 69, 187), (4, 172, 222), (6, 162, 81), (7, 288, 235)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(2.2868802445105305,
 {(4, 172, 222): 4, (5, 69, 187): 4},
 [(5, 69, 187), (4, 172, 222), (4, 172, 222), (5, 69, 187), (4, 172, 222)],
 [4, 4, 3, 3, 2])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(2.0291696635852392,
 [(5, 69, 187), (4, 172, 222), (7, 288, 235), (3, 268, 234)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[1, 3, 2, 4, 0, 3, 3, 0]
=============================================
#               solution Ran                #
=============================================
(1.5268952005481238,
 [(0, 225, 168),
  (1, 145, 197),
  (2, 270, 205),
  (3, 268, 234),
  (5, 69, 187),
  (6, 162, 81)],
 [1, 3, 2, 4, 3, 3])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(2.1436205348770216,
 [(4, 172, 222), (5, 69, 187), (6, 162, 81), (7, 288, 235)],
 [4, 4, 4, 4])
.19739535366180341,
 0.12866375253943071,
 0.12633292029206114,
 0.16878216253199746,
 0.19990399190652075,
 0.10470903325254245,
 0.17998856664158061,
 0.13803796867985718,
 0.15610545498791051,
 0.11201083278753154,
 0.12232431016830898,
 0.16050235658093653,
 0.11185928160782801,
 0.13722914633838793]
=============================================
#           optimal power levels            #
=============================================
[4, 4, 4, 4, 4, 4, 4, 4]
=============================================
#           result of greedy part           #
=============================================
(1.8844508889544156,
 [(7, 63, 75), (6, 256, 82), (5, 76, 237), (3, 132, 27)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.8844508889544156,
 [(7, 63, 75), (6, 256, 82), (5, 76, 237), (3, 132, 27)],
 [4, 4, 4, 4])
=============================================
#                solution A                 #
=============================================
(1.8844508889544156,
 [(7, 63, 75), (6, 256, 82), (5, 76, 237), (3, 132, 27)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.8844508889544156,
 {(3, 132, 27): 4, (5, 76, 237): 4, (6, 256, 82): 4, (7, 63, 75): 4},
 [(7, 63, 75), (6, 256, 82), (5, 76, 237), (3, 132, 27)],
 [4, 4, 4, 4])
=============================================
#           result of greedy part           #
=============================================
(1.923669158152552,
 {(5, 76, 237): 4, (6, 256, 82): 4, (7, 63, 75): 4},
 [(7, 63, 75), (7, 63, 75), (6, 256, 82), (5, 76, 237), (7, 63, 75)],
 [4, 3, 4, 4, 1])
=============================================
#       utilize the remaining budget        #
=============================================
Budget : 800.000000
=============================================
#                solution B                 #
=============================================
(1.8844508889544156,
 [(7, 63, 75), (3, 132, 27), (5, 76, 237), (6, 256, 82)],
 [4, 4, 4, 4])
=============================================
#               random h list               #
=============================================
[2, 0, 0, 0, 2, 4, 3, 4]
=============================================
#               solution Ran                #
=============================================
(1.4652461857338162,
 [(0, 212, 164), (4, 126, 76), (5, 76, 237), (6, 256, 82), (7, 63, 75)],
 [2, 2, 4, 3, 4])
=============================================
#                update trace               #
=============================================
=============================================
#               solution Opt                #
=============================================
(1.8844508889544156,
 [(3, 132, 27), (5, 76, 237), (6, 256, 82), (7, 63, 75)],
 [4, 4, 4, 4])
{'B': 800,
 'M': 90,
 'N': 8,
 'alpha': 0.64000000000000001,
 'beta': 30.0,
 'h_max': 4,
 'p_min': 50.0,
 'p_th': 0.01,
 'size': (300, 300),
 'sp_max': 0.20000000000000001,
 'sp_min': 0.10000000000000001,
 'times': 10,
 'worker': 10}
[{'A': (2.1750398062194636,
        [(0, 138, 129), (5, 255, 132), (4, 187, 251), (6, 116, 93)],
        [4, 4, 4, 4]),
  'B': (2.1750398062194636,
        [(6, 116, 93), (0, 138, 129), (4, 187, 251), (5, 255, 132)],
        [4, 4, 4, 4]),
  'Opt': (2.1750398062194636,
          [(0, 138, 129), (4, 187, 251), (5, 255, 132), (6, 116, 93)],
          [4, 4, 4, 4]),
  'Random': (1.6957314614502399,
             [(3, 122, 8),
              (4, 187, 251),
              (5, 255, 132),
              (6, 116, 93),
              (7, 17, 79)],
             [2, 4, 3, 4, 3])},
 {'A': (2.0788672527638483,
        [(5, 96, 68), (7, 127, 222), (3, 128, 37), (1, 91, 139)],
        [4, 4, 4, 4]),
  'B': (2.0788672527638483,
        [(5, 96, 68), (7, 127, 222), (3, 128, 37), (1, 91, 139)],
        [4, 4, 4, 4]),
  'Opt': (2.0788672527638483,
          [(1, 91, 139), (3, 128, 37), (5, 96, 68), (7, 127, 222)],
          [4, 4, 4, 4]),
  'Random': (0.92056455991445596,
             [(2, 49, 72),
              (3, 128, 37),
              (4, 290, 84),
              (5, 96, 68),
              (6, 255, 238),
              (7, 127, 222)],
             [1, 1, 2, 3, 4, 2])},
 {'A': (1.8844508889544156,
        [(7, 63, 75), (6, 256, 82), (5, 76, 237), (3, 132, 27)],
        [4, 4, 4, 4]),
  'B': (1.8844508889544156,
        [(7, 63, 75), (3, 132, 27), (5, 76, 237), (6, 256, 82)],
        [4, 4, 4, 4]),
  'Opt': (1.8844508889544156,
          [(3, 132, 27), (5, 76, 237), (6, 256, 82), (7, 63, 75)],
          [4, 4, 4, 4]),
  'Random': (1.4652461857338162,
             [(0, 212, 164),
              (4, 126, 76),
              (5, 76, 237),
              (6, 256, 82),
              (7, 63, 75)],
             [2, 2, 4, 3, 4])},
 {'A': (1.928466409232273,
        [(3, 176, 166), (1, 127, 258), (4, 65, 96), (6, 119, 88)],
        [4, 4, 4, 4]),
  'B': (1.8940032069525923,
        [(1, 127, 258), (3, 176, 166), (4, 65, 96), (5, 81, 25)],
        [4, 4, 4, 4]),
  'Opt': (1.928466409232273,
          [(1, 127, 258), (3, 176, 166), (4, 65, 96), (6, 119, 88)],
          [4, 4, 4, 4]),
  'Random': (1.512291609412451,
             [(0, 7, 143),
              (3, 176, 166),
              (4, 65, 96),
              (5, 81, 25),
              (6, 119, 88)],
             [4, 4, 4, 1, 3])},
 {'A': (1.7446447141885086,
        [(5, 275, 76), (6, 114, 255), (3, 230, 204), (1, 69, 105)],
        [4, 4, 4, 4]),
  'B': (1.7446447141885086,
        [(3, 230, 204), (6, 114, 255), (5, 275, 76), (1, 69, 105)],
        [4, 4, 4, 4]),
  'Opt': (1.7446447141885086,
          [(1, 69, 105), (3, 230, 204), (5, 275, 76), (6, 114, 255)],
          [4, 4, 4, 4]),
  'Random': (1.2432499843211782,
             [(0, 196, 243),
              (1, 69, 105),
              (3, 230, 204),
              (4, 49, 229),
              (5, 275, 76),
              (6, 114, 255),
              (7, 232, 140)],
             [2, 2, 2, 1, 3, 3, 3])},
 {'A': (2.0225329671456058,
        [(7, 154, 217), (2, 238, 88), (6, 108, 279), (3, 232, 113)],
        [4, 4, 4, 4]),
  'B': (1.9897800765647056,
        [(6, 108, 279), (7, 154, 217), (2, 238, 88), (5, 280, 194)],
        [4, 4, 4, 4]),
  'Opt': (2.0225329671456058,
          [(2, 238, 88), (3, 232, 113), (6, 108, 279), (7, 154, 217)],
          [4, 4, 4, 4]),
  'Random': (1.4739312656934813,
             [(0, 19, 149),
              (2, 238, 88),
              (3, 232, 113),
              (4, 160, 54),
              (5, 280, 194),
              (6, 108, 279),
              (7, 154, 217)],
             [3, 1, 4, 1, 2, 3, 2])},
 {'A': (1.6822687284046582,
        [(1, 225, 85), (7, 133, 140), (6, 243, 68), (3, 64, 231)],
        [4, 4, 4, 4]),
  'B': (1.6822687284046582,
        [(3, 64, 231), (6, 243, 68), (1, 225, 85), (7, 133, 140)],
        [4, 4, 4, 4]),
  'Opt': (1.6822687284046582,
          [(1, 225, 85), (3, 64, 231), (6, 243, 68), (7, 133, 140)],
          [4, 4, 4, 4]),
  'Random': (1.0633148471488036,
             [(0, 200, 221),
              (3, 64, 231),
              (4, 3, 252),
              (5, 107, 277),
              (6, 243, 68),
              (7, 133, 140)],
             [4, 1, 4, 2, 1, 4])},
 {'A': (2.1436205348770216,
        [(5, 69, 187), (4, 172, 222), (6, 162, 81), (7, 288, 235)],
        [4, 4, 4, 4]),
  'B': (2.0291696635852392,
        [(5, 69, 187), (4, 172, 222), (7, 288, 235), (3, 268, 234)],
        [4, 4, 4, 4]),
  'Opt': (2.1436205348770216,
          [(4, 172, 222), (5, 69, 187), (6, 162, 81), (7, 288, 235)],
          [4, 4, 4, 4]),
  'Random': (1.5268952005481238,
             [(0, 225, 168),
              (1, 145, 197),
              (2, 270, 205),
              (3, 268, 234),
              (5, 69, 187),
              (6, 162, 81)],
             [1, 3, 2, 4, 3, 3])},
 {'A': (1.8991254302529272,
        [(5, 156, 88), (2, 156, 50), (4, 167, 36), (6, 133, 197)],
        [4, 4, 4, 4]),
  'B': (1.8325199813672033,
        [(5, 156, 88), (7, 36, 258), (4, 167, 36), (2, 156, 50)],
        [4, 4, 4, 4]),
  'Opt': (1.899125430252927,
          [(2, 156, 50), (4, 167, 36), (5, 156, 88), (6, 133, 197)],
          [4, 4, 4, 4]),
  'Random': (1.2624123074160509,
             [(1, 4, 261),
              (3, 199, 253),
              (4, 167, 36),
              (5, 156, 88),
              (6, 133, 197),
              (7, 36, 258)],
             [4, 1, 1, 3, 4, 3])},
 {'A': (1.979451801326211,
        [(4, 174, 108), (2, 184, 202), (1, 248, 161), (0, 65, 199)],
        [4, 4, 4, 4]),
  'B': (1.979451801326211,
        [(0, 65, 199), (2, 184, 202), (4, 174, 108), (1, 248, 161)],
        [4, 4, 4, 4]),
  'Opt': (1.979451801326211,
          [(0, 65, 199), (1, 248, 161), (2, 184, 202), (4, 174, 108)],
          [4, 4, 4, 4]),
  'Random': (1.1428290740915341,
             [(0, 65, 199),
              (1, 248, 161),
              (2, 184, 202),
              (3, 155, 7),
              (4, 174, 108),
              (5, 131, 40),
              (7, 35, 266)],
             [2, 3, 1, 1, 2, 3, 4])}]
{'A': 1.953846853336493,
 'B': 1.9290196120326843,
 'Opt': 1.953846853336493,
 'Random': 1.3306466495730134}
